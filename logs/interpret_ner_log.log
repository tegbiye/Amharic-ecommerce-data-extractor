2025-07-22 18:14:58,706 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 18:14:58,707 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 18:15:02,053 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 18:15:02,089 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 18:15:02,089 - INFO - Unique labels: {'B-Product', 'B-LOC', 'I-PRICE', 'I-Product', 'O', 'B-PRICE'}
2025-07-22 18:15:02,945 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 18:15:02,954 - INFO - Validation set size: 40
2025-07-22 18:15:03,823 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: Unknown type passed as data object: <class 'list'>
2025-07-22 18:16:37,877 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:16:37,882 - INFO - Processed validation example 1/40
2025-07-22 18:16:38,367 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: Unknown type passed as data object: <class 'list'>
2025-07-22 18:18:13,975 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:18:13,976 - INFO - Processed validation example 2/40
2025-07-22 18:18:14,443 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: Unknown type passed as data object: <class 'list'>
2025-07-22 18:19:50,670 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 18:19:50,671 - INFO - Processed validation example 3/40
2025-07-22 18:19:51,173 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: Unknown type passed as data object: <class 'list'>
2025-07-22 18:21:27,199 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 18:21:27,199 - INFO - Processed validation example 4/40
2025-07-22 18:21:27,889 - ERROR - Error in SHAP explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...: Unknown type passed as data object: <class 'list'>
2025-07-22 18:22:51,073 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 18:22:51,073 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 18:22:52,806 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 18:22:52,814 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 18:22:52,814 - INFO - Unique labels: {'O', 'B-Product', 'I-Product', 'B-PRICE', 'I-PRICE', 'B-LOC'}
2025-07-22 18:22:53,238 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 18:22:53,246 - INFO - Validation set size: 40
2025-07-22 18:22:53,892 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 18:24:30,741 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:24:30,741 - INFO - Processed validation example 1/40
2025-07-22 18:24:31,211 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 18:26:09,917 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:26:09,918 - INFO - Processed validation example 2/40
2025-07-22 18:26:10,483 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 18:32:54,359 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 18:32:54,359 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 18:32:56,995 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 18:32:57,019 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 18:32:57,020 - INFO - Unique labels: {'O', 'I-Product', 'I-PRICE', 'B-PRICE', 'B-LOC', 'B-Product'}
2025-07-22 18:32:57,453 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 18:32:57,463 - INFO - Validation set size: 40
2025-07-22 18:32:58,106 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 18:34:34,699 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:34:34,699 - INFO - Processed validation example 1/40
2025-07-22 18:34:35,167 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 18:36:09,851 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:36:09,851 - INFO - Processed validation example 2/40
2025-07-22 18:36:10,383 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 18:43:43,704 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 18:43:43,704 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 18:43:45,122 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 18:43:45,127 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 18:43:45,133 - INFO - Unique labels: {'B-PRICE', 'O', 'B-LOC', 'I-PRICE', 'I-Product', 'B-Product'}
2025-07-22 18:43:45,531 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 18:43:45,537 - INFO - Validation set size: 40
2025-07-22 18:43:46,142 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 18:45:20,561 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 18:45:20,562 - INFO - Processed validation example 1/40
2025-07-22 18:45:21,034 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 19:19:49,077 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 19:19:49,077 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 19:20:14,945 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 19:20:15,645 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 19:20:15,645 - INFO - Unique labels: {'B-LOC', 'B-Product', 'O', 'I-Product', 'I-PRICE', 'B-PRICE'}
2025-07-22 19:20:17,235 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 19:20:17,248 - INFO - Validation set size: 40
2025-07-22 19:20:18,105 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 19:21:22,559 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:21:22,559 - INFO - Processed validation example 1/40
2025-07-22 19:21:22,866 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: tuple index out of range
2025-07-22 19:22:25,998 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:22:25,998 - INFO - Processed validation example 2/40
2025-07-22 19:22:26,306 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 19:23:34,476 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:23:34,477 - INFO - Processed validation example 3/40
2025-07-22 19:23:34,857 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 19:24:47,857 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:24:47,858 - INFO - Processed validation example 4/40
2025-07-22 19:24:48,220 - ERROR - Error in SHAP explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...: tuple index out of range
2025-07-22 19:26:08,356 - INFO - Computed LIME explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...
2025-07-22 19:26:08,356 - INFO - Processed validation example 5/40
2025-07-22 19:26:08,780 - INFO - Processed validation example 6/40
2025-07-22 19:26:09,210 - INFO - Processed validation example 7/40
2025-07-22 19:26:09,608 - INFO - Processed validation example 8/40
2025-07-22 19:26:10,006 - INFO - Processed validation example 9/40
2025-07-22 19:26:10,412 - INFO - Processed validation example 10/40
2025-07-22 19:26:10,801 - INFO - Processed validation example 11/40
2025-07-22 19:26:11,209 - INFO - Processed validation example 12/40
2025-07-22 19:26:11,613 - INFO - Processed validation example 13/40
2025-07-22 19:26:12,030 - INFO - Processed validation example 14/40
2025-07-22 19:26:12,448 - INFO - Processed validation example 15/40
2025-07-22 19:26:12,876 - INFO - Processed validation example 16/40
2025-07-22 19:26:13,296 - INFO - Processed validation example 17/40
2025-07-22 19:26:13,706 - INFO - Processed validation example 18/40
2025-07-22 19:26:14,116 - INFO - Processed validation example 19/40
2025-07-22 19:26:14,499 - INFO - Processed validation example 20/40
2025-07-22 19:26:14,886 - INFO - Processed validation example 21/40
2025-07-22 19:26:15,286 - INFO - Processed validation example 22/40
2025-07-22 19:26:15,682 - INFO - Processed validation example 23/40
2025-07-22 19:26:16,101 - INFO - Processed validation example 24/40
2025-07-22 19:26:16,506 - INFO - Processed validation example 25/40
2025-07-22 19:26:16,924 - INFO - Processed validation example 26/40
2025-07-22 19:26:17,333 - INFO - Processed validation example 27/40
2025-07-22 19:26:17,742 - INFO - Processed validation example 28/40
2025-07-22 19:26:18,172 - INFO - Processed validation example 29/40
2025-07-22 19:26:18,581 - INFO - Processed validation example 30/40
2025-07-22 19:26:18,954 - INFO - Processed validation example 31/40
2025-07-22 19:26:19,321 - INFO - Processed validation example 32/40
2025-07-22 19:26:19,708 - INFO - Processed validation example 33/40
2025-07-22 19:26:20,092 - INFO - Processed validation example 34/40
2025-07-22 19:26:20,521 - INFO - Processed validation example 35/40
2025-07-22 19:26:20,904 - INFO - Processed validation example 36/40
2025-07-22 19:26:21,297 - INFO - Processed validation example 37/40
2025-07-22 19:26:21,714 - INFO - Processed validation example 38/40
2025-07-22 19:26:22,111 - INFO - Processed validation example 39/40
2025-07-22 19:26:22,497 - INFO - Processed validation example 40/40
2025-07-22 19:26:22,900 - ERROR - Error in SHAP explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...: tuple index out of range
2025-07-22 19:27:52,691 - INFO - Computed LIME explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-22 19:27:52,691 - INFO - Processed new message 1/50
2025-07-22 19:27:53,156 - ERROR - Error in SHAP explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...: tuple index out of range
2025-07-22 19:29:17,586 - INFO - Computed LIME explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-22 19:29:17,586 - INFO - Processed new message 2/50
2025-07-22 19:29:17,980 - ERROR - Error in SHAP explanation for message: 3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውስን ፍሬ ነው ያ...: tuple index out of range
2025-07-22 19:30:41,366 - INFO - Computed LIME explanation for message: 3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውስን ፍሬ ነው ያ...
2025-07-22 19:30:41,367 - INFO - Processed new message 3/50
2025-07-22 19:30:41,776 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 19:32:03,450 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:32:03,450 - INFO - Processed new message 4/50
2025-07-22 19:32:03,869 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: tuple index out of range
2025-07-22 19:33:19,746 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:33:19,747 - INFO - Processed new message 5/50
2025-07-22 19:33:20,093 - INFO - Processed new message 6/50
2025-07-22 19:33:20,481 - INFO - Processed new message 7/50
2025-07-22 19:33:20,867 - INFO - Processed new message 8/50
2025-07-22 19:33:21,243 - INFO - Processed new message 9/50
2025-07-22 19:33:21,620 - INFO - Processed new message 10/50
2025-07-22 19:33:22,008 - INFO - Processed new message 11/50
2025-07-22 19:33:22,391 - INFO - Processed new message 12/50
2025-07-22 19:33:22,773 - INFO - Processed new message 13/50
2025-07-22 19:33:23,163 - INFO - Processed new message 14/50
2025-07-22 19:33:23,563 - INFO - Processed new message 15/50
2025-07-22 19:33:23,964 - INFO - Processed new message 16/50
2025-07-22 19:33:24,361 - INFO - Processed new message 17/50
2025-07-22 19:33:24,758 - INFO - Processed new message 18/50
2025-07-22 19:33:25,137 - INFO - Processed new message 19/50
2025-07-22 19:33:25,503 - INFO - Processed new message 20/50
2025-07-22 19:33:25,862 - INFO - Processed new message 21/50
2025-07-22 19:33:26,229 - INFO - Processed new message 22/50
2025-07-22 19:33:26,615 - INFO - Processed new message 23/50
2025-07-22 19:33:27,024 - INFO - Processed new message 24/50
2025-07-22 19:33:27,366 - INFO - Processed new message 25/50
2025-07-22 19:33:27,768 - INFO - Processed new message 26/50
2025-07-22 19:33:28,157 - INFO - Processed new message 27/50
2025-07-22 19:33:28,500 - INFO - Processed new message 28/50
2025-07-22 19:33:28,896 - INFO - Processed new message 29/50
2025-07-22 19:33:29,288 - INFO - Processed new message 30/50
2025-07-22 19:33:29,699 - INFO - Processed new message 31/50
2025-07-22 19:33:30,099 - INFO - Processed new message 32/50
2025-07-22 19:33:30,443 - INFO - Processed new message 33/50
2025-07-22 19:33:30,833 - INFO - Processed new message 34/50
2025-07-22 19:33:31,177 - INFO - Processed new message 35/50
2025-07-22 19:33:31,509 - INFO - Processed new message 36/50
2025-07-22 19:33:31,923 - INFO - Processed new message 37/50
2025-07-22 19:33:32,301 - INFO - Processed new message 38/50
2025-07-22 19:33:32,652 - INFO - Processed new message 39/50
2025-07-22 19:33:33,016 - INFO - Processed new message 40/50
2025-07-22 19:33:33,400 - INFO - Processed new message 41/50
2025-07-22 19:33:33,788 - INFO - Processed new message 42/50
2025-07-22 19:33:34,196 - INFO - Processed new message 43/50
2025-07-22 19:33:34,595 - INFO - Processed new message 44/50
2025-07-22 19:33:35,003 - INFO - Processed new message 45/50
2025-07-22 19:33:35,406 - INFO - Processed new message 46/50
2025-07-22 19:33:35,771 - INFO - Processed new message 47/50
2025-07-22 19:33:36,139 - INFO - Processed new message 48/50
2025-07-22 19:33:36,559 - INFO - Processed new message 49/50
2025-07-22 19:33:36,918 - INFO - Processed new message 50/50
2025-07-22 19:33:37,006 - INFO - Saved interpretability results to data/interpretability_results.csv
2025-07-22 19:33:37,007 - INFO - Generated interpretability report to Task5_Interpretability_Report.md
2025-07-22 19:38:55,971 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 19:38:55,971 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 19:39:11,120 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 19:39:11,247 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 19:39:11,247 - INFO - Unique labels: {'O', 'B-LOC', 'I-PRICE', 'I-Product', 'B-Product', 'B-PRICE'}
2025-07-22 19:39:11,999 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 19:39:12,003 - INFO - Validation set size: 40
2025-07-22 19:40:54,519 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: 'label'
2025-07-22 19:42:10,918 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:42:10,918 - INFO - Processed validation example 1/40
2025-07-22 19:42:11,448 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: 'label'
2025-07-22 19:43:25,613 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:43:25,613 - INFO - Processed validation example 2/40
2025-07-22 19:43:26,191 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: 'label'
2025-07-22 19:44:45,115 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:44:45,115 - INFO - Processed validation example 3/40
2025-07-22 19:44:45,665 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: 'label'
2025-07-22 19:46:03,806 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:46:03,806 - INFO - Processed validation example 4/40
2025-07-22 19:46:04,469 - ERROR - Error in SHAP explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...: 'label'
2025-07-22 19:47:29,895 - INFO - Computed LIME explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...
2025-07-22 19:47:29,895 - INFO - Processed validation example 5/40
2025-07-22 19:47:30,279 - INFO - Processed validation example 6/40
2025-07-22 19:47:30,655 - INFO - Processed validation example 7/40
2025-07-22 19:47:30,997 - INFO - Processed validation example 8/40
2025-07-22 19:47:31,399 - INFO - Processed validation example 9/40
2025-07-22 19:47:31,767 - INFO - Processed validation example 10/40
2025-07-22 19:47:32,134 - INFO - Processed validation example 11/40
2025-07-22 19:47:32,519 - INFO - Processed validation example 12/40
2025-07-22 19:47:32,886 - INFO - Processed validation example 13/40
2025-07-22 19:47:33,260 - INFO - Processed validation example 14/40
2025-07-22 19:47:33,634 - INFO - Processed validation example 15/40
2025-07-22 19:47:34,046 - INFO - Processed validation example 16/40
2025-07-22 19:47:34,452 - INFO - Processed validation example 17/40
2025-07-22 19:47:34,835 - INFO - Processed validation example 18/40
2025-07-22 19:47:35,219 - INFO - Processed validation example 19/40
2025-07-22 19:47:35,770 - INFO - Processed validation example 20/40
2025-07-22 19:47:36,181 - INFO - Processed validation example 21/40
2025-07-22 19:47:36,584 - INFO - Processed validation example 22/40
2025-07-22 19:47:36,995 - INFO - Processed validation example 23/40
2025-07-22 19:47:37,416 - INFO - Processed validation example 24/40
2025-07-22 19:47:37,905 - INFO - Processed validation example 25/40
2025-07-22 19:47:38,320 - INFO - Processed validation example 26/40
2025-07-22 19:47:38,718 - INFO - Processed validation example 27/40
2025-07-22 19:47:39,139 - INFO - Processed validation example 28/40
2025-07-22 19:47:39,559 - INFO - Processed validation example 29/40
2025-07-22 19:47:39,916 - INFO - Processed validation example 30/40
2025-07-22 19:47:40,317 - INFO - Processed validation example 31/40
2025-07-22 19:47:40,696 - INFO - Processed validation example 32/40
2025-07-22 19:47:41,110 - INFO - Processed validation example 33/40
2025-07-22 19:47:41,498 - INFO - Processed validation example 34/40
2025-07-22 19:47:41,901 - INFO - Processed validation example 35/40
2025-07-22 19:47:42,294 - INFO - Processed validation example 36/40
2025-07-22 19:47:42,652 - INFO - Processed validation example 37/40
2025-07-22 19:47:43,047 - INFO - Processed validation example 38/40
2025-07-22 19:47:43,400 - INFO - Processed validation example 39/40
2025-07-22 19:47:43,795 - INFO - Processed validation example 40/40
2025-07-22 19:47:44,391 - ERROR - Error in SHAP explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...: 'label'
2025-07-22 19:49:00,963 - INFO - Computed LIME explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-22 19:49:00,964 - INFO - Processed new message 1/50
2025-07-22 19:49:01,539 - ERROR - Error in SHAP explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...: 'label'
2025-07-22 19:53:51,928 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 19:53:51,929 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 19:54:02,399 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 19:54:02,504 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 19:54:02,504 - INFO - Unique labels: {'B-PRICE', 'I-Product', 'B-LOC', 'I-PRICE', 'B-Product', 'O'}
2025-07-22 19:54:03,733 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 19:54:03,737 - INFO - Validation set size: 40
2025-07-22 19:54:13,980 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 19:55:31,801 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:55:31,801 - INFO - Processed validation example 1/40
2025-07-22 19:55:32,173 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 19:56:51,050 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 19:56:51,050 - INFO - Processed validation example 2/40
2025-07-22 19:56:51,458 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 19:58:09,060 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 19:58:09,060 - INFO - Processed validation example 3/40
2025-07-22 19:58:09,465 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 19:59:53,602 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 19:59:53,602 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 19:59:54,710 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 19:59:54,710 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 19:59:54,710 - INFO - Unique labels: {'O', 'I-PRICE', 'B-LOC', 'B-PRICE', 'I-Product', 'B-Product'}
2025-07-22 19:59:55,000 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 19:59:55,000 - INFO - Validation set size: 40
2025-07-22 19:59:55,440 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: text input must be of type `str` (single example), `list[str]` (batch or single pretokenized example) or `list[list[str]]` (batch of pretokenized examples).
2025-07-22 20:01:12,281 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 20:01:12,281 - INFO - Processed validation example 1/40
2025-07-22 20:01:12,643 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: text input must be of type `str` (single example), `list[str]` (batch or single pretokenized example) or `list[list[str]]` (batch of pretokenized examples).
2025-07-22 20:02:31,476 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 20:02:31,476 - INFO - Processed validation example 2/40
2025-07-22 20:02:31,921 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: text input must be of type `str` (single example), `list[str]` (batch or single pretokenized example) or `list[list[str]]` (batch of pretokenized examples).
2025-07-22 20:03:09,536 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 20:03:09,536 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 20:03:10,601 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 20:03:10,601 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 20:03:10,601 - INFO - Unique labels: {'I-PRICE', 'O', 'B-PRICE', 'B-Product', 'I-Product', 'B-LOC'}
2025-07-22 20:03:10,864 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 20:03:10,871 - INFO - Validation set size: 40
2025-07-22 20:03:11,311 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 20:04:28,026 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 20:04:28,027 - INFO - Processed validation example 1/40
2025-07-22 20:04:28,447 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 20:05:45,324 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-22 20:05:45,324 - INFO - Processed validation example 2/40
2025-07-22 20:05:45,713 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 20:07:06,387 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 20:07:06,387 - INFO - Processed validation example 3/40
2025-07-22 20:07:06,779 - ERROR - Error in SHAP explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 20:08:35,152 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-22 20:08:35,152 - INFO - Processed validation example 4/40
2025-07-22 20:08:36,044 - ERROR - Error in SHAP explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...: too many indices for array: array is 1-dimensional, but 2 were indexed
2025-07-22 20:21:45,337 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-22 20:21:45,337 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-22 20:21:46,431 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-22 20:21:46,431 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-22 20:21:46,431 - INFO - Unique labels: {'B-PRICE', 'B-LOC', 'B-Product', 'O', 'I-Product', 'I-PRICE'}
2025-07-22 20:21:46,697 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-22 20:21:46,697 - INFO - Validation set size: 40
2025-07-22 20:21:47,087 - ERROR - Error in SHAP explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...: name 'device' is not defined
2025-07-23 17:13:54,615 - INFO - NLTK punkt tokenizer downloaded successfully
2025-07-23 17:13:54,683 - INFO - Label mappings: {'O': 0, 'B-Product': 1, 'I-Product': 2, 'B-PRICE': 3, 'I-PRICE': 4, 'B-LOC': 5, 'I-LOC': 6}
2025-07-23 17:14:28,720 - INFO - Loaded model and tokenizer from models/amharic_ner_xlmr, using device: cpu
2025-07-23 17:14:28,925 - INFO - Loaded 200 sentences from conLL/amharic_ner.conll
2025-07-23 17:14:28,925 - INFO - Unique labels: {'B-Product', 'I-Product', 'B-LOC', 'O', 'B-PRICE', 'I-PRICE'}
2025-07-23 17:14:31,210 - INFO - Loaded 50 new messages from data/cleaned_message.csv
2025-07-23 17:14:31,213 - INFO - Validation set size: 40
2025-07-23 17:15:12,529 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:15:13,564 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:15:40,366 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=376)
           2	RESUME(arg=0, lineno=376)
           4	LOAD_FAST(arg=1, lineno=383)
           6	LOAD_ATTR(arg=0, lineno=383)
          26	LOAD_CONST(arg=1, lineno=383)
          28	BINARY_SUBSCR(arg=None, lineno=383)
          32	STORE_FAST(arg=8, lineno=383)
          34	LOAD_GLOBAL(arg=3, lineno=384)
          44	LOAD_GLOBAL(arg=5, lineno=384)
          54	LOAD_FAST(arg=0, lineno=384)
          56	CALL(arg=1, lineno=384)
          64	CALL(arg=1, lineno=384)
          72	GET_ITER(arg=None, lineno=384)
>         74	FOR_ITER(arg=223, lineno=384)
          78	STORE_FAST(arg=9, lineno=384)
          80	LOAD_FAST(arg=3, lineno=385)
          82	LOAD_FAST(arg=9, lineno=385)
          84	BINARY_SUBSCR(arg=None, lineno=385)
          88	LOAD_FAST(arg=3, lineno=385)
          90	LOAD_FAST(arg=9, lineno=385)
          92	LOAD_CONST(arg=2, lineno=385)
          94	BINARY_OP(arg=0, lineno=385)
          98	BINARY_SUBSCR(arg=None, lineno=385)
         102	COMPARE_OP(arg=2, lineno=385)
         106	POP_JUMP_IF_FALSE(arg=196, lineno=385)
         108	LOAD_FAST(arg=5, lineno=386)
         110	LOAD_FAST(arg=9, lineno=386)
         112	BINARY_SUBSCR(arg=None, lineno=386)
         116	LOAD_FAST(arg=8, lineno=386)
         118	COMPARE_OP(arg=40, lineno=386)
         122	POP_JUMP_IF_FALSE(arg=18, lineno=386)
         124	LOAD_FAST(arg=2, lineno=387)
         126	LOAD_FAST(arg=3, lineno=387)
         128	LOAD_FAST(arg=9, lineno=387)
         130	BINARY_SUBSCR(arg=None, lineno=387)
         134	LOAD_FAST(arg=3, lineno=387)
         136	LOAD_FAST(arg=9, lineno=387)
         138	LOAD_CONST(arg=2, lineno=387)
         140	BINARY_OP(arg=0, lineno=387)
         144	BINARY_SUBSCR(arg=None, lineno=387)
         148	BINARY_SLICE(arg=None, lineno=387)
         150	LOAD_FAST(arg=1, lineno=387)
         152	LOAD_CONST(arg=0, lineno=387)
         154	LOAD_CONST(arg=0, lineno=387)
         156	STORE_SLICE(arg=None, lineno=387)
         158	JUMP_FORWARD(arg=20, lineno=387)
>        160	LOAD_FAST(arg=2, lineno=389)
         162	LOAD_FAST(arg=3, lineno=389)
         164	LOAD_FAST(arg=9, lineno=389)
         166	BINARY_SUBSCR(arg=None, lineno=389)
         170	LOAD_FAST(arg=3, lineno=389)
         172	LOAD_FAST(arg=9, lineno=389)
         174	LOAD_CONST(arg=2, lineno=389)
         176	BINARY_OP(arg=0, lineno=389)
         180	BINARY_SUBSCR(arg=None, lineno=389)
         184	BINARY_SLICE(arg=None, lineno=389)
         186	LOAD_FAST(arg=1, lineno=389)
         188	LOAD_FAST(arg=4, lineno=389)
         190	LOAD_FAST(arg=9, lineno=389)
         192	BINARY_SUBSCR(arg=None, lineno=389)
         196	STORE_SUBSCR(arg=None, lineno=389)
>        200	LOAD_FAST(arg=7, lineno=391)
         202	POP_JUMP_IF_NONE(arg=79, lineno=391)
         204	LOAD_GLOBAL(arg=3, lineno=392)
         214	LOAD_FAST(arg=1, lineno=392)
         216	LOAD_ATTR(arg=0, lineno=392)
         236	LOAD_CONST(arg=3, lineno=392)
         238	BINARY_SUBSCR(arg=None, lineno=392)
         242	CALL(arg=1, lineno=392)
         250	GET_ITER(arg=None, lineno=392)
>        252	FOR_ITER(arg=51, lineno=392)
         256	STORE_FAST(arg=10, lineno=392)
         258	LOAD_GLOBAL(arg=7, lineno=393)
         268	LOAD_ATTR(arg=8, lineno=393)
         288	LOAD_FAST(arg=7, lineno=393)
         290	LOAD_CONST(arg=0, lineno=393)
         292	LOAD_CONST(arg=0, lineno=393)
         294	BUILD_SLICE(arg=2, lineno=393)
         296	LOAD_FAST(arg=10, lineno=393)
         298	BUILD_TUPLE(arg=2, lineno=393)
         300	BINARY_SUBSCR(arg=None, lineno=393)
         304	PUSH_NULL(arg=None, lineno=393)
         306	LOAD_FAST(arg=6, lineno=393)
         308	LOAD_FAST(arg=1, lineno=393)
         310	LOAD_CONST(arg=0, lineno=393)
         312	LOAD_CONST(arg=0, lineno=393)
         314	BUILD_SLICE(arg=2, lineno=393)
         316	LOAD_FAST(arg=10, lineno=393)
         318	BUILD_TUPLE(arg=2, lineno=393)
         320	BINARY_SUBSCR(arg=None, lineno=393)
         324	CALL(arg=1, lineno=393)
         332	BINARY_OP(arg=5, lineno=393)
         336	CALL(arg=1, lineno=393)
         344	LOAD_FAST(arg=0, lineno=393)
         346	LOAD_FAST(arg=9, lineno=393)
         348	LOAD_FAST(arg=10, lineno=393)
         350	BUILD_TUPLE(arg=2, lineno=393)
         352	STORE_SUBSCR(arg=None, lineno=393)
         356	JUMP_BACKWARD(arg=53, lineno=393)
>        358	END_FOR(arg=None, lineno=392)
         360	JUMP_BACKWARD(arg=144, lineno=392)
>        362	LOAD_GLOBAL(arg=3, lineno=395)
         372	LOAD_FAST(arg=1, lineno=395)
         374	LOAD_ATTR(arg=0, lineno=395)
         394	LOAD_CONST(arg=3, lineno=395)
         396	BINARY_SUBSCR(arg=None, lineno=395)
         400	CALL(arg=1, lineno=395)
         408	GET_ITER(arg=None, lineno=395)
>        410	FOR_ITER(arg=41, lineno=395)
         414	STORE_FAST(arg=10, lineno=395)
         416	PUSH_NULL(arg=None, lineno=396)
         418	LOAD_FAST(arg=6, lineno=396)
         420	LOAD_GLOBAL(arg=7, lineno=397)
         430	LOAD_ATTR(arg=8, lineno=397)
         450	LOAD_FAST(arg=1, lineno=397)
         452	LOAD_CONST(arg=0, lineno=397)
         454	LOAD_CONST(arg=0, lineno=397)
         456	BUILD_SLICE(arg=2, lineno=397)
         458	LOAD_FAST(arg=10, lineno=397)
         460	BUILD_TUPLE(arg=2, lineno=397)
         462	BINARY_SUBSCR(arg=None, lineno=397)
         466	CALL(arg=1, lineno=397)
         474	CALL(arg=1, lineno=396)
         482	LOAD_FAST(arg=0, lineno=396)
         484	LOAD_FAST(arg=9, lineno=396)
         486	LOAD_FAST(arg=10, lineno=396)
         488	BUILD_TUPLE(arg=2, lineno=396)
         490	STORE_SUBSCR(arg=None, lineno=396)
         494	JUMP_BACKWARD(arg=43, lineno=396)
>        496	END_FOR(arg=None, lineno=395)
         498	JUMP_BACKWARD(arg=213, lineno=395)
>        500	LOAD_FAST(arg=0, lineno=400)
         502	LOAD_FAST(arg=9, lineno=400)
         504	LOAD_CONST(arg=2, lineno=400)
         506	BINARY_OP(arg=10, lineno=400)
         510	BINARY_SUBSCR(arg=None, lineno=400)
         514	LOAD_FAST(arg=0, lineno=400)
         516	LOAD_FAST(arg=9, lineno=400)
         518	STORE_SUBSCR(arg=None, lineno=400)
         522	JUMP_BACKWARD(arg=225, lineno=400)
>        524	END_FOR(arg=None, lineno=384)
         526	RETURN_CONST(arg=0, lineno=384)
2025-07-23 17:15:40,455 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:40,456 - DEBUG - stack: []
2025-07-23 17:15:40,456 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:40,456 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=376)
2025-07-23 17:15:40,457 - DEBUG - stack []
2025-07-23 17:15:40,457 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=376)
2025-07-23 17:15:40,457 - DEBUG - stack []
2025-07-23 17:15:40,457 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=383)
2025-07-23 17:15:40,457 - DEBUG - stack []
2025-07-23 17:15:40,458 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=383)
2025-07-23 17:15:40,458 - DEBUG - stack ['$last_outs4.0']
2025-07-23 17:15:40,458 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=383)
2025-07-23 17:15:40,458 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:40,458 - DEBUG - dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=383)
2025-07-23 17:15:40,458 - DEBUG - stack ['$6load_attr.1', '$const26.2.1']
2025-07-23 17:15:40,459 - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=8, lineno=383)
2025-07-23 17:15:40,459 - DEBUG - stack ['$28binary_subscr.3']
2025-07-23 17:15:40,459 - DEBUG - dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=384)
2025-07-23 17:15:40,459 - DEBUG - stack []
2025-07-23 17:15:40,459 - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=384)
2025-07-23 17:15:40,459 - DEBUG - stack ['$null$34.5', '$34load_global.4']
2025-07-23 17:15:40,459 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=384)
2025-07-23 17:15:40,460 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$null$44.7', '$44load_global.6']
2025-07-23 17:15:40,460 - DEBUG - dispatch pc=56, inst=CALL(arg=1, lineno=384)
2025-07-23 17:15:40,460 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$null$44.7', '$44load_global.6', '$averaged_outs54.8']
2025-07-23 17:15:40,460 - DEBUG - dispatch pc=64, inst=CALL(arg=1, lineno=384)
2025-07-23 17:15:40,460 - DEBUG - stack ['$null$34.5', '$34load_global.4', '$56call.9']
2025-07-23 17:15:40,461 - DEBUG - dispatch pc=72, inst=GET_ITER(arg=None, lineno=384)
2025-07-23 17:15:40,461 - DEBUG - stack ['$64call.10']
2025-07-23 17:15:40,461 - DEBUG - end state. edges=[Edge(pc=74, stack=('$72get_iter.11',), blockstack=(), npush=0)]
2025-07-23 17:15:40,461 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1)])
2025-07-23 17:15:40,461 - DEBUG - stack: ['$phi74.0']
2025-07-23 17:15:40,461 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=1)
2025-07-23 17:15:40,462 - DEBUG - dispatch pc=74, inst=FOR_ITER(arg=223, lineno=384)
2025-07-23 17:15:40,462 - DEBUG - stack ['$phi74.0']
2025-07-23 17:15:40,462 - DEBUG - end state. edges=[Edge(pc=524, stack=('$phi74.0', '$74for_iter.2'), blockstack=(), npush=0), Edge(pc=78, stack=('$phi74.0', '$74for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:40,462 - DEBUG - pending: deque([State(pc_initial=524 nstack_initial=2), State(pc_initial=78 nstack_initial=2)])
2025-07-23 17:15:40,462 - DEBUG - stack: ['$phi524.0', '$phi524.1']
2025-07-23 17:15:40,462 - DEBUG - state.pc_initial: State(pc_initial=524 nstack_initial=2)
2025-07-23 17:15:40,463 - DEBUG - dispatch pc=524, inst=END_FOR(arg=None, lineno=384)
2025-07-23 17:15:40,463 - DEBUG - stack ['$phi524.0', '$phi524.1']
2025-07-23 17:15:40,463 - DEBUG - dispatch pc=526, inst=RETURN_CONST(arg=0, lineno=384)
2025-07-23 17:15:40,463 - DEBUG - stack []
2025-07-23 17:15:40,463 - DEBUG - end state. edges=[]
2025-07-23 17:15:40,463 - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=2)])
2025-07-23 17:15:40,463 - DEBUG - stack: ['$phi78.0', '$phi78.1']
2025-07-23 17:15:40,463 - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=2)
2025-07-23 17:15:40,463 - DEBUG - dispatch pc=78, inst=STORE_FAST(arg=9, lineno=384)
2025-07-23 17:15:40,464 - DEBUG - stack ['$phi78.0', '$phi78.1']
2025-07-23 17:15:40,464 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=385)
2025-07-23 17:15:40,464 - DEBUG - stack ['$phi78.0']
2025-07-23 17:15:40,464 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=9, lineno=385)
2025-07-23 17:15:40,464 - DEBUG - stack ['$phi78.0', '$batch_positions80.2']
2025-07-23 17:15:40,464 - DEBUG - dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=385)
2025-07-23 17:15:40,464 - DEBUG - stack ['$phi78.0', '$batch_positions80.2', '$i82.3']
2025-07-23 17:15:40,464 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=3, lineno=385)
2025-07-23 17:15:40,464 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4']
2025-07-23 17:15:40,465 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=9, lineno=385)
2025-07-23 17:15:40,465 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4', '$batch_positions88.5']
2025-07-23 17:15:40,465 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=385)
2025-07-23 17:15:40,465 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4', '$batch_positions88.5', '$i90.6']
2025-07-23 17:15:40,465 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=0, lineno=385)
2025-07-23 17:15:40,465 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4', '$batch_positions88.5', '$i90.6', '$const92.7.2']
2025-07-23 17:15:40,465 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=385)
2025-07-23 17:15:40,466 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4', '$batch_positions88.5', '$binop_add94.8']
2025-07-23 17:15:40,466 - DEBUG - dispatch pc=102, inst=COMPARE_OP(arg=2, lineno=385)
2025-07-23 17:15:40,466 - DEBUG - stack ['$phi78.0', '$84binary_subscr.4', '$98binary_subscr.9']
2025-07-23 17:15:40,466 - DEBUG - dispatch pc=106, inst=POP_JUMP_IF_FALSE(arg=196, lineno=385)
2025-07-23 17:15:40,466 - DEBUG - stack ['$phi78.0', '$102compare_op.10']
2025-07-23 17:15:40,466 - DEBUG - end state. edges=[Edge(pc=108, stack=('$phi78.0',), blockstack=(), npush=0), Edge(pc=500, stack=('$phi78.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,467 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=1), State(pc_initial=500 nstack_initial=1)])
2025-07-23 17:15:40,467 - DEBUG - stack: ['$phi108.0']
2025-07-23 17:15:40,467 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=1)
2025-07-23 17:15:40,467 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=5, lineno=386)
2025-07-23 17:15:40,467 - DEBUG - stack ['$phi108.0']
2025-07-23 17:15:40,467 - DEBUG - dispatch pc=110, inst=LOAD_FAST(arg=9, lineno=386)
2025-07-23 17:15:40,468 - DEBUG - stack ['$phi108.0', '$num_varying_rows108.1']
2025-07-23 17:15:40,468 - DEBUG - dispatch pc=112, inst=BINARY_SUBSCR(arg=None, lineno=386)
2025-07-23 17:15:40,468 - DEBUG - stack ['$phi108.0', '$num_varying_rows108.1', '$i110.2']
2025-07-23 17:15:40,468 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=8, lineno=386)
2025-07-23 17:15:40,468 - DEBUG - stack ['$phi108.0', '$112binary_subscr.3']
2025-07-23 17:15:40,468 - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=40, lineno=386)
2025-07-23 17:15:40,468 - DEBUG - stack ['$phi108.0', '$112binary_subscr.3', '$sample_count116.4']
2025-07-23 17:15:40,468 - DEBUG - dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=18, lineno=386)
2025-07-23 17:15:40,468 - DEBUG - stack ['$phi108.0', '$118compare_op.5']
2025-07-23 17:15:40,469 - DEBUG - end state. edges=[Edge(pc=124, stack=('$phi108.0',), blockstack=(), npush=0), Edge(pc=160, stack=('$phi108.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,469 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=124 nstack_initial=1), State(pc_initial=160 nstack_initial=1)])
2025-07-23 17:15:40,469 - DEBUG - stack: ['$phi500.0']
2025-07-23 17:15:40,469 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-23 17:15:40,469 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=0, lineno=400)
2025-07-23 17:15:40,469 - DEBUG - stack ['$phi500.0']
2025-07-23 17:15:40,469 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=9, lineno=400)
2025-07-23 17:15:40,469 - DEBUG - stack ['$phi500.0', '$averaged_outs500.1']
2025-07-23 17:15:40,470 - DEBUG - dispatch pc=504, inst=LOAD_CONST(arg=2, lineno=400)
2025-07-23 17:15:40,470 - DEBUG - stack ['$phi500.0', '$averaged_outs500.1', '$i502.2']
2025-07-23 17:15:40,470 - DEBUG - dispatch pc=506, inst=BINARY_OP(arg=10, lineno=400)
2025-07-23 17:15:40,471 - DEBUG - stack ['$phi500.0', '$averaged_outs500.1', '$i502.2', '$const504.3.2']
2025-07-23 17:15:40,471 - DEBUG - dispatch pc=510, inst=BINARY_SUBSCR(arg=None, lineno=400)
2025-07-23 17:15:40,471 - DEBUG - stack ['$phi500.0', '$averaged_outs500.1', '$binop_sub506.4']
2025-07-23 17:15:40,471 - DEBUG - dispatch pc=514, inst=LOAD_FAST(arg=0, lineno=400)
2025-07-23 17:15:40,472 - DEBUG - stack ['$phi500.0', '$510binary_subscr.5']
2025-07-23 17:15:40,472 - DEBUG - dispatch pc=516, inst=LOAD_FAST(arg=9, lineno=400)
2025-07-23 17:15:40,472 - DEBUG - stack ['$phi500.0', '$510binary_subscr.5', '$averaged_outs514.6']
2025-07-23 17:15:40,472 - DEBUG - dispatch pc=518, inst=STORE_SUBSCR(arg=None, lineno=400)
2025-07-23 17:15:40,473 - DEBUG - stack ['$phi500.0', '$510binary_subscr.5', '$averaged_outs514.6', '$i516.7']
2025-07-23 17:15:40,473 - DEBUG - dispatch pc=522, inst=JUMP_BACKWARD(arg=225, lineno=400)
2025-07-23 17:15:40,473 - DEBUG - stack ['$phi500.0']
2025-07-23 17:15:40,473 - DEBUG - end state. edges=[Edge(pc=74, stack=('$phi500.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,473 - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=1), State(pc_initial=160 nstack_initial=1), State(pc_initial=74 nstack_initial=1)])
2025-07-23 17:15:40,473 - DEBUG - stack: ['$phi124.0']
2025-07-23 17:15:40,473 - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=1)
2025-07-23 17:15:40,474 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=387)
2025-07-23 17:15:40,474 - DEBUG - stack ['$phi124.0']
2025-07-23 17:15:40,474 - DEBUG - dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=387)
2025-07-23 17:15:40,474 - DEBUG - stack ['$phi124.0', '$outputs124.1']
2025-07-23 17:15:40,474 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=387)
2025-07-23 17:15:40,474 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$batch_positions126.2']
2025-07-23 17:15:40,474 - DEBUG - dispatch pc=130, inst=BINARY_SUBSCR(arg=None, lineno=387)
2025-07-23 17:15:40,475 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$batch_positions126.2', '$i128.3']
2025-07-23 17:15:40,475 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=3, lineno=387)
2025-07-23 17:15:40,475 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4']
2025-07-23 17:15:40,475 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=9, lineno=387)
2025-07-23 17:15:40,475 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4', '$batch_positions134.5']
2025-07-23 17:15:40,475 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=2, lineno=387)
2025-07-23 17:15:40,475 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4', '$batch_positions134.5', '$i136.6']
2025-07-23 17:15:40,476 - DEBUG - dispatch pc=140, inst=BINARY_OP(arg=0, lineno=387)
2025-07-23 17:15:40,476 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4', '$batch_positions134.5', '$i136.6', '$const138.7.2']
2025-07-23 17:15:40,476 - DEBUG - dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=387)
2025-07-23 17:15:40,476 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4', '$batch_positions134.5', '$binop_add140.8']
2025-07-23 17:15:40,477 - DEBUG - dispatch pc=148, inst=BINARY_SLICE(arg=None, lineno=387)
2025-07-23 17:15:40,477 - DEBUG - stack ['$phi124.0', '$outputs124.1', '$130binary_subscr.4', '$144binary_subscr.9']
2025-07-23 17:15:40,477 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=387)
2025-07-23 17:15:40,477 - DEBUG - stack ['$phi124.0', '$148binary_slice.11']
2025-07-23 17:15:40,478 - DEBUG - dispatch pc=152, inst=LOAD_CONST(arg=0, lineno=387)
2025-07-23 17:15:40,478 - DEBUG - stack ['$phi124.0', '$148binary_slice.11', '$last_outs150.13']
2025-07-23 17:15:40,478 - DEBUG - dispatch pc=154, inst=LOAD_CONST(arg=0, lineno=387)
2025-07-23 17:15:40,478 - DEBUG - stack ['$phi124.0', '$148binary_slice.11', '$last_outs150.13', '$const152.14.0']
2025-07-23 17:15:40,478 - DEBUG - dispatch pc=156, inst=STORE_SLICE(arg=None, lineno=387)
2025-07-23 17:15:40,479 - DEBUG - stack ['$phi124.0', '$148binary_slice.11', '$last_outs150.13', '$const152.14.0', '$const154.15.0']
2025-07-23 17:15:40,479 - DEBUG - dispatch pc=158, inst=JUMP_FORWARD(arg=20, lineno=387)
2025-07-23 17:15:40,479 - DEBUG - stack ['$phi124.0']
2025-07-23 17:15:40,480 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi124.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,480 - DEBUG - pending: deque([State(pc_initial=160 nstack_initial=1), State(pc_initial=74 nstack_initial=1), State(pc_initial=200 nstack_initial=1)])
2025-07-23 17:15:40,480 - DEBUG - stack: ['$phi160.0']
2025-07-23 17:15:40,480 - DEBUG - state.pc_initial: State(pc_initial=160 nstack_initial=1)
2025-07-23 17:15:40,480 - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=2, lineno=389)
2025-07-23 17:15:40,481 - DEBUG - stack ['$phi160.0']
2025-07-23 17:15:40,481 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=389)
2025-07-23 17:15:40,481 - DEBUG - stack ['$phi160.0', '$outputs160.1']
2025-07-23 17:15:40,481 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=9, lineno=389)
2025-07-23 17:15:40,481 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$batch_positions162.2']
2025-07-23 17:15:40,482 - DEBUG - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=389)
2025-07-23 17:15:40,482 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$batch_positions162.2', '$i164.3']
2025-07-23 17:15:40,482 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=3, lineno=389)
2025-07-23 17:15:40,482 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4']
2025-07-23 17:15:40,483 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=9, lineno=389)
2025-07-23 17:15:40,483 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4', '$batch_positions170.5']
2025-07-23 17:15:40,483 - DEBUG - dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=389)
2025-07-23 17:15:40,484 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4', '$batch_positions170.5', '$i172.6']
2025-07-23 17:15:40,484 - DEBUG - dispatch pc=176, inst=BINARY_OP(arg=0, lineno=389)
2025-07-23 17:15:40,484 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4', '$batch_positions170.5', '$i172.6', '$const174.7.2']
2025-07-23 17:15:40,484 - DEBUG - dispatch pc=180, inst=BINARY_SUBSCR(arg=None, lineno=389)
2025-07-23 17:15:40,484 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4', '$batch_positions170.5', '$binop_add176.8']
2025-07-23 17:15:40,485 - DEBUG - dispatch pc=184, inst=BINARY_SLICE(arg=None, lineno=389)
2025-07-23 17:15:40,485 - DEBUG - stack ['$phi160.0', '$outputs160.1', '$166binary_subscr.4', '$180binary_subscr.9']
2025-07-23 17:15:40,485 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=389)
2025-07-23 17:15:40,485 - DEBUG - stack ['$phi160.0', '$184binary_slice.11']
2025-07-23 17:15:40,485 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=389)
2025-07-23 17:15:40,486 - DEBUG - stack ['$phi160.0', '$184binary_slice.11', '$last_outs186.13']
2025-07-23 17:15:40,486 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=9, lineno=389)
2025-07-23 17:15:40,486 - DEBUG - stack ['$phi160.0', '$184binary_slice.11', '$last_outs186.13', '$varying_rows188.14']
2025-07-23 17:15:40,486 - DEBUG - dispatch pc=192, inst=BINARY_SUBSCR(arg=None, lineno=389)
2025-07-23 17:15:40,486 - DEBUG - stack ['$phi160.0', '$184binary_slice.11', '$last_outs186.13', '$varying_rows188.14', '$i190.15']
2025-07-23 17:15:40,487 - DEBUG - dispatch pc=196, inst=STORE_SUBSCR(arg=None, lineno=389)
2025-07-23 17:15:40,487 - DEBUG - stack ['$phi160.0', '$184binary_slice.11', '$last_outs186.13', '$192binary_subscr.16']
2025-07-23 17:15:40,487 - DEBUG - end state. edges=[Edge(pc=200, stack=('$phi160.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,487 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=200 nstack_initial=1), State(pc_initial=200 nstack_initial=1)])
2025-07-23 17:15:40,487 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1), State(pc_initial=200 nstack_initial=1)])
2025-07-23 17:15:40,487 - DEBUG - stack: ['$phi200.0']
2025-07-23 17:15:40,488 - DEBUG - state.pc_initial: State(pc_initial=200 nstack_initial=1)
2025-07-23 17:15:40,488 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=7, lineno=391)
2025-07-23 17:15:40,488 - DEBUG - stack ['$phi200.0']
2025-07-23 17:15:40,488 - DEBUG - dispatch pc=202, inst=POP_JUMP_IF_NONE(arg=79, lineno=391)
2025-07-23 17:15:40,488 - DEBUG - stack ['$phi200.0', '$linearizing_weights200.1']
2025-07-23 17:15:40,488 - DEBUG - end state. edges=[Edge(pc=204, stack=('$phi200.0',), blockstack=(), npush=0), Edge(pc=362, stack=('$phi200.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,488 - DEBUG - pending: deque([State(pc_initial=200 nstack_initial=1), State(pc_initial=204 nstack_initial=1), State(pc_initial=362 nstack_initial=1)])
2025-07-23 17:15:40,488 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=1), State(pc_initial=362 nstack_initial=1)])
2025-07-23 17:15:40,488 - DEBUG - stack: ['$phi204.0']
2025-07-23 17:15:40,488 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=1)
2025-07-23 17:15:40,489 - DEBUG - dispatch pc=204, inst=LOAD_GLOBAL(arg=3, lineno=392)
2025-07-23 17:15:40,489 - DEBUG - stack ['$phi204.0']
2025-07-23 17:15:40,489 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=1, lineno=392)
2025-07-23 17:15:40,489 - DEBUG - stack ['$phi204.0', '$null$204.2', '$204load_global.1']
2025-07-23 17:15:40,489 - DEBUG - dispatch pc=216, inst=LOAD_ATTR(arg=0, lineno=392)
2025-07-23 17:15:40,489 - DEBUG - stack ['$phi204.0', '$null$204.2', '$204load_global.1', '$last_outs214.3']
2025-07-23 17:15:40,489 - DEBUG - dispatch pc=236, inst=LOAD_CONST(arg=3, lineno=392)
2025-07-23 17:15:40,490 - DEBUG - stack ['$phi204.0', '$null$204.2', '$204load_global.1', '$216load_attr.4']
2025-07-23 17:15:40,490 - DEBUG - dispatch pc=238, inst=BINARY_SUBSCR(arg=None, lineno=392)
2025-07-23 17:15:40,490 - DEBUG - stack ['$phi204.0', '$null$204.2', '$204load_global.1', '$216load_attr.4', '$const236.5.3']
2025-07-23 17:15:40,490 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=392)
2025-07-23 17:15:40,490 - DEBUG - stack ['$phi204.0', '$null$204.2', '$204load_global.1', '$238binary_subscr.6']
2025-07-23 17:15:40,491 - DEBUG - dispatch pc=250, inst=GET_ITER(arg=None, lineno=392)
2025-07-23 17:15:40,491 - DEBUG - stack ['$phi204.0', '$242call.7']
2025-07-23 17:15:40,491 - DEBUG - end state. edges=[Edge(pc=252, stack=('$phi204.0', '$250get_iter.8'), blockstack=(), npush=0)]
2025-07-23 17:15:40,491 - DEBUG - pending: deque([State(pc_initial=362 nstack_initial=1), State(pc_initial=252 nstack_initial=2)])
2025-07-23 17:15:40,491 - DEBUG - stack: ['$phi362.0']
2025-07-23 17:15:40,491 - DEBUG - state.pc_initial: State(pc_initial=362 nstack_initial=1)
2025-07-23 17:15:40,491 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=3, lineno=395)
2025-07-23 17:15:40,491 - DEBUG - stack ['$phi362.0']
2025-07-23 17:15:40,491 - DEBUG - dispatch pc=372, inst=LOAD_FAST(arg=1, lineno=395)
2025-07-23 17:15:40,491 - DEBUG - stack ['$phi362.0', '$null$362.2', '$362load_global.1']
2025-07-23 17:15:40,492 - DEBUG - dispatch pc=374, inst=LOAD_ATTR(arg=0, lineno=395)
2025-07-23 17:15:40,492 - DEBUG - stack ['$phi362.0', '$null$362.2', '$362load_global.1', '$last_outs372.3']
2025-07-23 17:15:40,492 - DEBUG - dispatch pc=394, inst=LOAD_CONST(arg=3, lineno=395)
2025-07-23 17:15:40,492 - DEBUG - stack ['$phi362.0', '$null$362.2', '$362load_global.1', '$374load_attr.4']
2025-07-23 17:15:40,492 - DEBUG - dispatch pc=396, inst=BINARY_SUBSCR(arg=None, lineno=395)
2025-07-23 17:15:40,492 - DEBUG - stack ['$phi362.0', '$null$362.2', '$362load_global.1', '$374load_attr.4', '$const394.5.3']
2025-07-23 17:15:40,492 - DEBUG - dispatch pc=400, inst=CALL(arg=1, lineno=395)
2025-07-23 17:15:40,492 - DEBUG - stack ['$phi362.0', '$null$362.2', '$362load_global.1', '$396binary_subscr.6']
2025-07-23 17:15:40,493 - DEBUG - dispatch pc=408, inst=GET_ITER(arg=None, lineno=395)
2025-07-23 17:15:40,493 - DEBUG - stack ['$phi362.0', '$400call.7']
2025-07-23 17:15:40,493 - DEBUG - end state. edges=[Edge(pc=410, stack=('$phi362.0', '$408get_iter.8'), blockstack=(), npush=0)]
2025-07-23 17:15:40,493 - DEBUG - pending: deque([State(pc_initial=252 nstack_initial=2), State(pc_initial=410 nstack_initial=2)])
2025-07-23 17:15:40,493 - DEBUG - stack: ['$phi252.0', '$phi252.1']
2025-07-23 17:15:40,493 - DEBUG - state.pc_initial: State(pc_initial=252 nstack_initial=2)
2025-07-23 17:15:40,493 - DEBUG - dispatch pc=252, inst=FOR_ITER(arg=51, lineno=392)
2025-07-23 17:15:40,493 - DEBUG - stack ['$phi252.0', '$phi252.1']
2025-07-23 17:15:40,493 - DEBUG - end state. edges=[Edge(pc=358, stack=('$phi252.0', '$phi252.1', '$252for_iter.3'), blockstack=(), npush=0), Edge(pc=256, stack=('$phi252.0', '$phi252.1', '$252for_iter.3'), blockstack=(), npush=0)]
2025-07-23 17:15:40,494 - DEBUG - pending: deque([State(pc_initial=410 nstack_initial=2), State(pc_initial=358 nstack_initial=3), State(pc_initial=256 nstack_initial=3)])
2025-07-23 17:15:40,494 - DEBUG - stack: ['$phi410.0', '$phi410.1']
2025-07-23 17:15:40,494 - DEBUG - state.pc_initial: State(pc_initial=410 nstack_initial=2)
2025-07-23 17:15:40,494 - DEBUG - dispatch pc=410, inst=FOR_ITER(arg=41, lineno=395)
2025-07-23 17:15:40,494 - DEBUG - stack ['$phi410.0', '$phi410.1']
2025-07-23 17:15:40,494 - DEBUG - end state. edges=[Edge(pc=496, stack=('$phi410.0', '$phi410.1', '$410for_iter.3'), blockstack=(), npush=0), Edge(pc=414, stack=('$phi410.0', '$phi410.1', '$410for_iter.3'), blockstack=(), npush=0)]
2025-07-23 17:15:40,494 - DEBUG - pending: deque([State(pc_initial=358 nstack_initial=3), State(pc_initial=256 nstack_initial=3), State(pc_initial=496 nstack_initial=3), State(pc_initial=414 nstack_initial=3)])
2025-07-23 17:15:40,494 - DEBUG - stack: ['$phi358.0', '$phi358.1', '$phi358.2']
2025-07-23 17:15:40,494 - DEBUG - state.pc_initial: State(pc_initial=358 nstack_initial=3)
2025-07-23 17:15:40,498 - DEBUG - dispatch pc=358, inst=END_FOR(arg=None, lineno=392)
2025-07-23 17:15:40,499 - DEBUG - stack ['$phi358.0', '$phi358.1', '$phi358.2']
2025-07-23 17:15:40,499 - DEBUG - dispatch pc=360, inst=JUMP_BACKWARD(arg=144, lineno=392)
2025-07-23 17:15:40,499 - DEBUG - stack ['$phi358.0']
2025-07-23 17:15:40,499 - DEBUG - end state. edges=[Edge(pc=74, stack=('$phi358.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,499 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=3), State(pc_initial=496 nstack_initial=3), State(pc_initial=414 nstack_initial=3), State(pc_initial=74 nstack_initial=1)])
2025-07-23 17:15:40,499 - DEBUG - stack: ['$phi256.0', '$phi256.1', '$phi256.2']
2025-07-23 17:15:40,499 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=3)
2025-07-23 17:15:40,500 - DEBUG - dispatch pc=256, inst=STORE_FAST(arg=10, lineno=392)
2025-07-23 17:15:40,500 - DEBUG - stack ['$phi256.0', '$phi256.1', '$phi256.2']
2025-07-23 17:15:40,500 - DEBUG - dispatch pc=258, inst=LOAD_GLOBAL(arg=7, lineno=393)
2025-07-23 17:15:40,500 - DEBUG - stack ['$phi256.0', '$phi256.1']
2025-07-23 17:15:40,501 - DEBUG - dispatch pc=268, inst=LOAD_ATTR(arg=8, lineno=393)
2025-07-23 17:15:40,501 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$258load_global.3']
2025-07-23 17:15:40,501 - DEBUG - dispatch pc=288, inst=LOAD_FAST(arg=7, lineno=393)
2025-07-23 17:15:40,501 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5']
2025-07-23 17:15:40,502 - DEBUG - dispatch pc=290, inst=LOAD_CONST(arg=0, lineno=393)
2025-07-23 17:15:40,502 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6']
2025-07-23 17:15:40,502 - DEBUG - dispatch pc=292, inst=LOAD_CONST(arg=0, lineno=393)
2025-07-23 17:15:40,503 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6', '$const290.7.0']
2025-07-23 17:15:40,503 - DEBUG - dispatch pc=294, inst=BUILD_SLICE(arg=2, lineno=393)
2025-07-23 17:15:40,504 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6', '$const290.7.0', '$const292.8.0']
2025-07-23 17:15:40,504 - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=10, lineno=393)
2025-07-23 17:15:40,504 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6', '$294build_slice.10']
2025-07-23 17:15:40,504 - DEBUG - dispatch pc=298, inst=BUILD_TUPLE(arg=2, lineno=393)
2025-07-23 17:15:40,504 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6', '$294build_slice.10', '$j296.11']
2025-07-23 17:15:40,505 - DEBUG - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=393)
2025-07-23 17:15:40,505 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$linearizing_weights288.6', '$298build_tuple.12']
2025-07-23 17:15:40,505 - DEBUG - dispatch pc=304, inst=PUSH_NULL(arg=None, lineno=393)
2025-07-23 17:15:40,505 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13']
2025-07-23 17:15:40,505 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=6, lineno=393)
2025-07-23 17:15:40,506 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14']
2025-07-23 17:15:40,506 - DEBUG - dispatch pc=308, inst=LOAD_FAST(arg=1, lineno=393)
2025-07-23 17:15:40,506 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15']
2025-07-23 17:15:40,506 - DEBUG - dispatch pc=310, inst=LOAD_CONST(arg=0, lineno=393)
2025-07-23 17:15:40,506 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16']
2025-07-23 17:15:40,506 - DEBUG - dispatch pc=312, inst=LOAD_CONST(arg=0, lineno=393)
2025-07-23 17:15:40,507 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16', '$const310.17.0']
2025-07-23 17:15:40,507 - DEBUG - dispatch pc=314, inst=BUILD_SLICE(arg=2, lineno=393)
2025-07-23 17:15:40,507 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16', '$const310.17.0', '$const312.18.0']
2025-07-23 17:15:40,507 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=10, lineno=393)
2025-07-23 17:15:40,507 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16', '$314build_slice.20']
2025-07-23 17:15:40,507 - DEBUG - dispatch pc=318, inst=BUILD_TUPLE(arg=2, lineno=393)
2025-07-23 17:15:40,507 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16', '$314build_slice.20', '$j316.21']
2025-07-23 17:15:40,508 - DEBUG - dispatch pc=320, inst=BINARY_SUBSCR(arg=None, lineno=393)
2025-07-23 17:15:40,508 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$last_outs308.16', '$318build_tuple.22']
2025-07-23 17:15:40,508 - DEBUG - dispatch pc=324, inst=CALL(arg=1, lineno=393)
2025-07-23 17:15:40,508 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$null$304.14', '$link306.15', '$320binary_subscr.23']
2025-07-23 17:15:40,508 - DEBUG - dispatch pc=332, inst=BINARY_OP(arg=5, lineno=393)
2025-07-23 17:15:40,508 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$300binary_subscr.13', '$324call.24']
2025-07-23 17:15:40,508 - DEBUG - dispatch pc=336, inst=CALL(arg=1, lineno=393)
2025-07-23 17:15:40,509 - DEBUG - stack ['$phi256.0', '$phi256.1', '$null$258.4', '$268load_attr.5', '$binop_mul332.25']
2025-07-23 17:15:40,509 - DEBUG - dispatch pc=344, inst=LOAD_FAST(arg=0, lineno=393)
2025-07-23 17:15:40,509 - DEBUG - stack ['$phi256.0', '$phi256.1', '$336call.26']
2025-07-23 17:15:40,509 - DEBUG - dispatch pc=346, inst=LOAD_FAST(arg=9, lineno=393)
2025-07-23 17:15:40,509 - DEBUG - stack ['$phi256.0', '$phi256.1', '$336call.26', '$averaged_outs344.27']
2025-07-23 17:15:40,509 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=10, lineno=393)
2025-07-23 17:15:40,509 - DEBUG - stack ['$phi256.0', '$phi256.1', '$336call.26', '$averaged_outs344.27', '$i346.28']
2025-07-23 17:15:40,509 - DEBUG - dispatch pc=350, inst=BUILD_TUPLE(arg=2, lineno=393)
2025-07-23 17:15:40,511 - DEBUG - stack ['$phi256.0', '$phi256.1', '$336call.26', '$averaged_outs344.27', '$i346.28', '$j348.29']
2025-07-23 17:15:40,511 - DEBUG - dispatch pc=352, inst=STORE_SUBSCR(arg=None, lineno=393)
2025-07-23 17:15:40,511 - DEBUG - stack ['$phi256.0', '$phi256.1', '$336call.26', '$averaged_outs344.27', '$350build_tuple.30']
2025-07-23 17:15:40,512 - DEBUG - dispatch pc=356, inst=JUMP_BACKWARD(arg=53, lineno=393)
2025-07-23 17:15:40,512 - DEBUG - stack ['$phi256.0', '$phi256.1']
2025-07-23 17:15:40,512 - DEBUG - end state. edges=[Edge(pc=252, stack=('$phi256.0', '$phi256.1'), blockstack=(), npush=0)]
2025-07-23 17:15:40,512 - DEBUG - pending: deque([State(pc_initial=496 nstack_initial=3), State(pc_initial=414 nstack_initial=3), State(pc_initial=74 nstack_initial=1), State(pc_initial=252 nstack_initial=2)])
2025-07-23 17:15:40,512 - DEBUG - stack: ['$phi496.0', '$phi496.1', '$phi496.2']
2025-07-23 17:15:40,513 - DEBUG - state.pc_initial: State(pc_initial=496 nstack_initial=3)
2025-07-23 17:15:40,513 - DEBUG - dispatch pc=496, inst=END_FOR(arg=None, lineno=395)
2025-07-23 17:15:40,513 - DEBUG - stack ['$phi496.0', '$phi496.1', '$phi496.2']
2025-07-23 17:15:40,513 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=213, lineno=395)
2025-07-23 17:15:40,513 - DEBUG - stack ['$phi496.0']
2025-07-23 17:15:40,513 - DEBUG - end state. edges=[Edge(pc=74, stack=('$phi496.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,513 - DEBUG - pending: deque([State(pc_initial=414 nstack_initial=3), State(pc_initial=74 nstack_initial=1), State(pc_initial=252 nstack_initial=2), State(pc_initial=74 nstack_initial=1)])
2025-07-23 17:15:40,514 - DEBUG - stack: ['$phi414.0', '$phi414.1', '$phi414.2']
2025-07-23 17:15:40,514 - DEBUG - state.pc_initial: State(pc_initial=414 nstack_initial=3)
2025-07-23 17:15:40,514 - DEBUG - dispatch pc=414, inst=STORE_FAST(arg=10, lineno=395)
2025-07-23 17:15:40,514 - DEBUG - stack ['$phi414.0', '$phi414.1', '$phi414.2']
2025-07-23 17:15:40,514 - DEBUG - dispatch pc=416, inst=PUSH_NULL(arg=None, lineno=396)
2025-07-23 17:15:40,514 - DEBUG - stack ['$phi414.0', '$phi414.1']
2025-07-23 17:15:40,514 - DEBUG - dispatch pc=418, inst=LOAD_FAST(arg=6, lineno=396)
2025-07-23 17:15:40,514 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=420, inst=LOAD_GLOBAL(arg=7, lineno=397)
2025-07-23 17:15:40,515 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=430, inst=LOAD_ATTR(arg=8, lineno=397)
2025-07-23 17:15:40,515 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$420load_global.5']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=450, inst=LOAD_FAST(arg=1, lineno=397)
2025-07-23 17:15:40,515 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=452, inst=LOAD_CONST(arg=0, lineno=397)
2025-07-23 17:15:40,515 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=454, inst=LOAD_CONST(arg=0, lineno=397)
2025-07-23 17:15:40,515 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8', '$const452.9.0']
2025-07-23 17:15:40,515 - DEBUG - dispatch pc=456, inst=BUILD_SLICE(arg=2, lineno=397)
2025-07-23 17:15:40,516 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8', '$const452.9.0', '$const454.10.0']
2025-07-23 17:15:40,516 - DEBUG - dispatch pc=458, inst=LOAD_FAST(arg=10, lineno=397)
2025-07-23 17:15:40,516 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8', '$456build_slice.12']
2025-07-23 17:15:40,516 - DEBUG - dispatch pc=460, inst=BUILD_TUPLE(arg=2, lineno=397)
2025-07-23 17:15:40,516 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8', '$456build_slice.12', '$j458.13']
2025-07-23 17:15:40,516 - DEBUG - dispatch pc=462, inst=BINARY_SUBSCR(arg=None, lineno=397)
2025-07-23 17:15:40,516 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$last_outs450.8', '$460build_tuple.14']
2025-07-23 17:15:40,516 - DEBUG - dispatch pc=466, inst=CALL(arg=1, lineno=397)
2025-07-23 17:15:40,516 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$null$420.6', '$430load_attr.7', '$462binary_subscr.15']
2025-07-23 17:15:40,517 - DEBUG - dispatch pc=474, inst=CALL(arg=1, lineno=396)
2025-07-23 17:15:40,517 - DEBUG - stack ['$phi414.0', '$phi414.1', '$null$416.3', '$link418.4', '$466call.16']
2025-07-23 17:15:40,517 - DEBUG - dispatch pc=482, inst=LOAD_FAST(arg=0, lineno=396)
2025-07-23 17:15:40,517 - DEBUG - stack ['$phi414.0', '$phi414.1', '$474call.17']
2025-07-23 17:15:40,517 - DEBUG - dispatch pc=484, inst=LOAD_FAST(arg=9, lineno=396)
2025-07-23 17:15:40,517 - DEBUG - stack ['$phi414.0', '$phi414.1', '$474call.17', '$averaged_outs482.18']
2025-07-23 17:15:40,517 - DEBUG - dispatch pc=486, inst=LOAD_FAST(arg=10, lineno=396)
2025-07-23 17:15:40,517 - DEBUG - stack ['$phi414.0', '$phi414.1', '$474call.17', '$averaged_outs482.18', '$i484.19']
2025-07-23 17:15:40,518 - DEBUG - dispatch pc=488, inst=BUILD_TUPLE(arg=2, lineno=396)
2025-07-23 17:15:40,518 - DEBUG - stack ['$phi414.0', '$phi414.1', '$474call.17', '$averaged_outs482.18', '$i484.19', '$j486.20']
2025-07-23 17:15:40,518 - DEBUG - dispatch pc=490, inst=STORE_SUBSCR(arg=None, lineno=396)
2025-07-23 17:15:40,518 - DEBUG - stack ['$phi414.0', '$phi414.1', '$474call.17', '$averaged_outs482.18', '$488build_tuple.21']
2025-07-23 17:15:40,518 - DEBUG - dispatch pc=494, inst=JUMP_BACKWARD(arg=43, lineno=396)
2025-07-23 17:15:40,518 - DEBUG - stack ['$phi414.0', '$phi414.1']
2025-07-23 17:15:40,519 - DEBUG - end state. edges=[Edge(pc=410, stack=('$phi414.0', '$phi414.1'), blockstack=(), npush=0)]
2025-07-23 17:15:40,519 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=252 nstack_initial=2), State(pc_initial=74 nstack_initial=1), State(pc_initial=410 nstack_initial=2)])
2025-07-23 17:15:40,519 - DEBUG - pending: deque([State(pc_initial=252 nstack_initial=2), State(pc_initial=74 nstack_initial=1), State(pc_initial=410 nstack_initial=2)])
2025-07-23 17:15:40,519 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=410 nstack_initial=2)])
2025-07-23 17:15:40,519 - DEBUG - pending: deque([State(pc_initial=410 nstack_initial=2)])
2025-07-23 17:15:40,520 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:40,520 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=1): {'$phi74.0'},
             State(pc_initial=78 nstack_initial=2): {'$phi78.1'},
             State(pc_initial=108 nstack_initial=1): set(),
             State(pc_initial=124 nstack_initial=1): set(),
             State(pc_initial=160 nstack_initial=1): set(),
             State(pc_initial=200 nstack_initial=1): set(),
             State(pc_initial=204 nstack_initial=1): set(),
             State(pc_initial=252 nstack_initial=2): {'$phi252.1'},
             State(pc_initial=256 nstack_initial=3): {'$phi256.2'},
             State(pc_initial=358 nstack_initial=3): set(),
             State(pc_initial=362 nstack_initial=1): set(),
             State(pc_initial=410 nstack_initial=2): {'$phi410.1'},
             State(pc_initial=414 nstack_initial=3): {'$phi414.2'},
             State(pc_initial=496 nstack_initial=3): set(),
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=524 nstack_initial=2): set()})
2025-07-23 17:15:40,521 - DEBUG - defmap: {'$phi252.1': State(pc_initial=204 nstack_initial=1),
 '$phi256.2': State(pc_initial=252 nstack_initial=2),
 '$phi358.2': State(pc_initial=252 nstack_initial=2),
 '$phi410.1': State(pc_initial=362 nstack_initial=1),
 '$phi414.2': State(pc_initial=410 nstack_initial=2),
 '$phi496.2': State(pc_initial=410 nstack_initial=2),
 '$phi524.1': State(pc_initial=74 nstack_initial=1),
 '$phi74.0': State(pc_initial=0 nstack_initial=0),
 '$phi78.1': State(pc_initial=74 nstack_initial=1)}
2025-07-23 17:15:40,521 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$phi78.0', State(pc_initial=78 nstack_initial=2))},
             '$phi124.0': {('$phi108.0',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi160.0': {('$phi108.0',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi200.0': {('$phi124.0',
                            State(pc_initial=124 nstack_initial=1)),
                           ('$phi160.0',
                            State(pc_initial=160 nstack_initial=1))},
             '$phi204.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi252.0': {('$phi204.0',
                            State(pc_initial=204 nstack_initial=1)),
                           ('$phi256.0',
                            State(pc_initial=256 nstack_initial=3))},
             '$phi252.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1)),
                           ('$phi256.1',
                            State(pc_initial=256 nstack_initial=3))},
             '$phi256.0': {('$phi252.0',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi256.1': {('$phi252.1',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi256.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.0': {('$phi252.0',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.1': {('$phi252.1',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi362.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=1))},
             '$phi410.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=1)),
                           ('$phi414.0',
                            State(pc_initial=414 nstack_initial=3))},
             '$phi410.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1)),
                           ('$phi414.1',
                            State(pc_initial=414 nstack_initial=3))},
             '$phi414.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi414.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi414.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi500.0': {('$phi78.0', State(pc_initial=78 nstack_initial=2))},
             '$phi524.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi524.1': {('$74for_iter.2',
                            State(pc_initial=74 nstack_initial=1))},
             '$phi74.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi358.0', State(pc_initial=358 nstack_initial=3)),
                          ('$phi496.0', State(pc_initial=496 nstack_initial=3)),
                          ('$phi500.0',
                           State(pc_initial=500 nstack_initial=1))},
             '$phi78.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi78.1': {('$74for_iter.2',
                           State(pc_initial=74 nstack_initial=1))}})
2025-07-23 17:15:40,522 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi124.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi160.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi200.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi204.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi252.0': {('$phi252.0',
                            State(pc_initial=252 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi252.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1)),
                           ('$phi252.1',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi256.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi256.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi358.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi358.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi362.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi410.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi410.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi414.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi414.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi414.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi496.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi496.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi500.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi524.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi358.0',
                            State(pc_initial=358 nstack_initial=3)),
                           ('$phi496.0',
                            State(pc_initial=496 nstack_initial=3)),
                           ('$phi500.0',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi524.1': {('$74for_iter.2',
                            State(pc_initial=74 nstack_initial=1))},
             '$phi74.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi78.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi78.1': {('$74for_iter.2',
                           State(pc_initial=74 nstack_initial=1))}})
2025-07-23 17:15:40,523 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi124.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi160.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi200.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi256.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi256.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi358.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi362.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi414.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi414.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi496.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi496.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi500.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi524.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi524.1': {('$74for_iter.2',
                            State(pc_initial=74 nstack_initial=1))},
             '$phi74.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi78.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi78.1': {('$74for_iter.2',
                           State(pc_initial=74 nstack_initial=1))}})
2025-07-23 17:15:40,524 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi124.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi160.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi200.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi256.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi256.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi358.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi358.1': {('$250get_iter.8',
                            State(pc_initial=204 nstack_initial=1))},
             '$phi358.2': {('$252for_iter.3',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi362.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi414.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi414.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi496.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi496.1': {('$408get_iter.8',
                            State(pc_initial=362 nstack_initial=1))},
             '$phi496.2': {('$410for_iter.3',
                            State(pc_initial=410 nstack_initial=2))},
             '$phi500.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi524.0': {('$72get_iter.11',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi524.1': {('$74for_iter.2',
                            State(pc_initial=74 nstack_initial=1))},
             '$phi74.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi78.0': {('$72get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi78.1': {('$74for_iter.2',
                           State(pc_initial=74 nstack_initial=1))}})
2025-07-23 17:15:40,525 - DEBUG - keep phismap: {'$phi252.1': {('$250get_iter.8', State(pc_initial=204 nstack_initial=1))},
 '$phi256.2': {('$252for_iter.3', State(pc_initial=252 nstack_initial=2))},
 '$phi410.1': {('$408get_iter.8', State(pc_initial=362 nstack_initial=1))},
 '$phi414.2': {('$410for_iter.3', State(pc_initial=410 nstack_initial=2))},
 '$phi74.0': {('$72get_iter.11', State(pc_initial=0 nstack_initial=0))},
 '$phi78.1': {('$74for_iter.2', State(pc_initial=74 nstack_initial=1))}}
2025-07-23 17:15:40,526 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi74.0': '$72get_iter.11'},
             State(pc_initial=74 nstack_initial=1): {'$phi78.1': '$74for_iter.2'},
             State(pc_initial=204 nstack_initial=1): {'$phi252.1': '$250get_iter.8'},
             State(pc_initial=252 nstack_initial=2): {'$phi256.2': '$252for_iter.3'},
             State(pc_initial=362 nstack_initial=1): {'$phi410.1': '$408get_iter.8'},
             State(pc_initial=410 nstack_initial=2): {'$phi414.2': '$410for_iter.3'}})
2025-07-23 17:15:40,526 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:40,526 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$last_outs4.0'}), (6, {'item': '$last_outs4.0', 'res': '$6load_attr.1'}), (26, {'res': '$const26.2.1'}), (28, {'index': '$const26.2.1', 'target': '$6load_attr.1', 'res': '$28binary_subscr.3'}), (32, {'value': '$28binary_subscr.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (44, {'idx': 2, 'res': '$44load_global.6'}), (54, {'res': '$averaged_outs54.8'}), (56, {'func': '$44load_global.6', 'args': ['$averaged_outs54.8'], 'kw_names': None, 'res': '$56call.9'}), (64, {'func': '$34load_global.4', 'args': ['$56call.9'], 'kw_names': None, 'res': '$64call.10'}), (72, {'value': '$64call.10', 'res': '$72get_iter.11'})), outgoing_phis={'$phi74.0': '$72get_iter.11'}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$72get_iter.11',)})
2025-07-23 17:15:40,527 - DEBUG - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'iterator': '$phi74.0', 'pair': '$74for_iter.1', 'indval': '$74for_iter.2', 'pred': '$74for_iter.3'}),), outgoing_phis={'$phi78.1': '$74for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={524: ('$phi74.0', '$74for_iter.2'), 78: ('$phi74.0', '$74for_iter.2')})
2025-07-23 17:15:40,527 - DEBUG - block_infos State(pc_initial=78 nstack_initial=2):
AdaptBlockInfo(insts=((78, {'value': '$phi78.1'}), (80, {'res': '$batch_positions80.2'}), (82, {'res': '$i82.3'}), (84, {'index': '$i82.3', 'target': '$batch_positions80.2', 'res': '$84binary_subscr.4'}), (88, {'res': '$batch_positions88.5'}), (90, {'res': '$i90.6'}), (92, {'res': '$const92.7.2'}), (94, {'op': '+', 'lhs': '$i90.6', 'rhs': '$const92.7.2', 'res': '$binop_add94.8'}), (98, {'index': '$binop_add94.8', 'target': '$batch_positions88.5', 'res': '$98binary_subscr.9'}), (102, {'lhs': '$84binary_subscr.4', 'rhs': '$98binary_subscr.9', 'res': '$102compare_op.10'}), (106, {'pred': '$102compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ('$phi78.0',), 500: ('$phi78.0',)})
2025-07-23 17:15:40,527 - DEBUG - block_infos State(pc_initial=108 nstack_initial=1):
AdaptBlockInfo(insts=((108, {'res': '$num_varying_rows108.1'}), (110, {'res': '$i110.2'}), (112, {'index': '$i110.2', 'target': '$num_varying_rows108.1', 'res': '$112binary_subscr.3'}), (116, {'res': '$sample_count116.4'}), (118, {'lhs': '$112binary_subscr.3', 'rhs': '$sample_count116.4', 'res': '$118compare_op.5'}), (122, {'pred': '$118compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi108.0',), 160: ('$phi108.0',)})
2025-07-23 17:15:40,527 - DEBUG - block_infos State(pc_initial=124 nstack_initial=1):
AdaptBlockInfo(insts=((124, {'res': '$outputs124.1'}), (126, {'res': '$batch_positions126.2'}), (128, {'res': '$i128.3'}), (130, {'index': '$i128.3', 'target': '$batch_positions126.2', 'res': '$130binary_subscr.4'}), (134, {'res': '$batch_positions134.5'}), (136, {'res': '$i136.6'}), (138, {'res': '$const138.7.2'}), (140, {'op': '+', 'lhs': '$i136.6', 'rhs': '$const138.7.2', 'res': '$binop_add140.8'}), (144, {'index': '$binop_add140.8', 'target': '$batch_positions134.5', 'res': '$144binary_subscr.9'}), (148, {'start': '$130binary_subscr.4', 'end': '$144binary_subscr.9', 'container': '$outputs124.1', 'res': '$148binary_slice.11', 'slicevar': '$148binary_slice.12', 'temp_res': '$148binary_slice.10'}), (150, {'res': '$last_outs150.13'}), (152, {'res': '$const152.14.0'}), (154, {'res': '$const154.15.0'}), (156, {'start': '$const152.14.0', 'end': '$const154.15.0', 'container': '$last_outs150.13', 'value': '$148binary_slice.11', 'res': '$156store_slice.17', 'slicevar': '$156store_slice.16'}), (158, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi124.0',)})
2025-07-23 17:15:40,528 - DEBUG - block_infos State(pc_initial=160 nstack_initial=1):
AdaptBlockInfo(insts=((160, {'res': '$outputs160.1'}), (162, {'res': '$batch_positions162.2'}), (164, {'res': '$i164.3'}), (166, {'index': '$i164.3', 'target': '$batch_positions162.2', 'res': '$166binary_subscr.4'}), (170, {'res': '$batch_positions170.5'}), (172, {'res': '$i172.6'}), (174, {'res': '$const174.7.2'}), (176, {'op': '+', 'lhs': '$i172.6', 'rhs': '$const174.7.2', 'res': '$binop_add176.8'}), (180, {'index': '$binop_add176.8', 'target': '$batch_positions170.5', 'res': '$180binary_subscr.9'}), (184, {'start': '$166binary_subscr.4', 'end': '$180binary_subscr.9', 'container': '$outputs160.1', 'res': '$184binary_slice.11', 'slicevar': '$184binary_slice.12', 'temp_res': '$184binary_slice.10'}), (186, {'res': '$last_outs186.13'}), (188, {'res': '$varying_rows188.14'}), (190, {'res': '$i190.15'}), (192, {'index': '$i190.15', 'target': '$varying_rows188.14', 'res': '$192binary_subscr.16'}), (196, {'target': '$last_outs186.13', 'index': '$192binary_subscr.16', 'value': '$184binary_slice.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi160.0',)})
2025-07-23 17:15:40,528 - DEBUG - block_infos State(pc_initial=200 nstack_initial=1):
AdaptBlockInfo(insts=((200, {'res': '$linearizing_weights200.1'}), (202, {'pred': '$linearizing_weights200.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={204: ('$phi200.0',), 362: ('$phi200.0',)})
2025-07-23 17:15:40,528 - DEBUG - block_infos State(pc_initial=204 nstack_initial=1):
AdaptBlockInfo(insts=((204, {'idx': 1, 'res': '$204load_global.1'}), (214, {'res': '$last_outs214.3'}), (216, {'item': '$last_outs214.3', 'res': '$216load_attr.4'}), (236, {'res': '$const236.5.3'}), (238, {'index': '$const236.5.3', 'target': '$216load_attr.4', 'res': '$238binary_subscr.6'}), (242, {'func': '$204load_global.1', 'args': ['$238binary_subscr.6'], 'kw_names': None, 'res': '$242call.7'}), (250, {'value': '$242call.7', 'res': '$250get_iter.8'})), outgoing_phis={'$phi252.1': '$250get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={252: ('$phi204.0', '$250get_iter.8')})
2025-07-23 17:15:40,528 - DEBUG - block_infos State(pc_initial=252 nstack_initial=2):
AdaptBlockInfo(insts=((252, {'iterator': '$phi252.1', 'pair': '$252for_iter.2', 'indval': '$252for_iter.3', 'pred': '$252for_iter.4'}),), outgoing_phis={'$phi256.2': '$252for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={358: ('$phi252.0', '$phi252.1', '$252for_iter.3'), 256: ('$phi252.0', '$phi252.1', '$252for_iter.3')})
2025-07-23 17:15:40,529 - DEBUG - block_infos State(pc_initial=256 nstack_initial=3):
AdaptBlockInfo(insts=((256, {'value': '$phi256.2'}), (258, {'idx': 3, 'res': '$258load_global.3'}), (268, {'item': '$258load_global.3', 'res': '$268load_attr.5'}), (288, {'res': '$linearizing_weights288.6'}), (290, {'res': '$const290.7.0'}), (292, {'res': '$const292.8.0'}), (294, {'start': '$const290.7.0', 'stop': '$const292.8.0', 'step': None, 'res': '$294build_slice.10', 'slicevar': '$294build_slice.9'}), (296, {'res': '$j296.11'}), (298, {'items': ['$294build_slice.10', '$j296.11'], 'res': '$298build_tuple.12'}), (300, {'index': '$298build_tuple.12', 'target': '$linearizing_weights288.6', 'res': '$300binary_subscr.13'}), (304, {}), (306, {'res': '$link306.15'}), (308, {'res': '$last_outs308.16'}), (310, {'res': '$const310.17.0'}), (312, {'res': '$const312.18.0'}), (314, {'start': '$const310.17.0', 'stop': '$const312.18.0', 'step': None, 'res': '$314build_slice.20', 'slicevar': '$314build_slice.19'}), (316, {'res': '$j316.21'}), (318, {'items': ['$314build_slice.20', '$j316.21'], 'res': '$318build_tuple.22'}), (320, {'index': '$318build_tuple.22', 'target': '$last_outs308.16', 'res': '$320binary_subscr.23'}), (324, {'func': '$link306.15', 'args': ['$320binary_subscr.23'], 'kw_names': None, 'res': '$324call.24'}), (332, {'op': '*', 'lhs': '$300binary_subscr.13', 'rhs': '$324call.24', 'res': '$binop_mul332.25'}), (336, {'func': '$268load_attr.5', 'args': ['$binop_mul332.25'], 'kw_names': None, 'res': '$336call.26'}), (344, {'res': '$averaged_outs344.27'}), (346, {'res': '$i346.28'}), (348, {'res': '$j348.29'}), (350, {'items': ['$i346.28', '$j348.29'], 'res': '$350build_tuple.30'}), (352, {'target': '$averaged_outs344.27', 'index': '$350build_tuple.30', 'value': '$336call.26'}), (356, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={252: ('$phi256.0', '$phi256.1')})
2025-07-23 17:15:40,529 - DEBUG - block_infos State(pc_initial=358 nstack_initial=3):
AdaptBlockInfo(insts=((360, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi358.0',)})
2025-07-23 17:15:40,529 - DEBUG - block_infos State(pc_initial=362 nstack_initial=1):
AdaptBlockInfo(insts=((362, {'idx': 1, 'res': '$362load_global.1'}), (372, {'res': '$last_outs372.3'}), (374, {'item': '$last_outs372.3', 'res': '$374load_attr.4'}), (394, {'res': '$const394.5.3'}), (396, {'index': '$const394.5.3', 'target': '$374load_attr.4', 'res': '$396binary_subscr.6'}), (400, {'func': '$362load_global.1', 'args': ['$396binary_subscr.6'], 'kw_names': None, 'res': '$400call.7'}), (408, {'value': '$400call.7', 'res': '$408get_iter.8'})), outgoing_phis={'$phi410.1': '$408get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={410: ('$phi362.0', '$408get_iter.8')})
2025-07-23 17:15:40,530 - DEBUG - block_infos State(pc_initial=410 nstack_initial=2):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.1', 'pair': '$410for_iter.2', 'indval': '$410for_iter.3', 'pred': '$410for_iter.4'}),), outgoing_phis={'$phi414.2': '$410for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={496: ('$phi410.0', '$phi410.1', '$410for_iter.3'), 414: ('$phi410.0', '$phi410.1', '$410for_iter.3')})
2025-07-23 17:15:40,530 - DEBUG - block_infos State(pc_initial=414 nstack_initial=3):
AdaptBlockInfo(insts=((414, {'value': '$phi414.2'}), (416, {}), (418, {'res': '$link418.4'}), (420, {'idx': 3, 'res': '$420load_global.5'}), (430, {'item': '$420load_global.5', 'res': '$430load_attr.7'}), (450, {'res': '$last_outs450.8'}), (452, {'res': '$const452.9.0'}), (454, {'res': '$const454.10.0'}), (456, {'start': '$const452.9.0', 'stop': '$const454.10.0', 'step': None, 'res': '$456build_slice.12', 'slicevar': '$456build_slice.11'}), (458, {'res': '$j458.13'}), (460, {'items': ['$456build_slice.12', '$j458.13'], 'res': '$460build_tuple.14'}), (462, {'index': '$460build_tuple.14', 'target': '$last_outs450.8', 'res': '$462binary_subscr.15'}), (466, {'func': '$430load_attr.7', 'args': ['$462binary_subscr.15'], 'kw_names': None, 'res': '$466call.16'}), (474, {'func': '$link418.4', 'args': ['$466call.16'], 'kw_names': None, 'res': '$474call.17'}), (482, {'res': '$averaged_outs482.18'}), (484, {'res': '$i484.19'}), (486, {'res': '$j486.20'}), (488, {'items': ['$i484.19', '$j486.20'], 'res': '$488build_tuple.21'}), (490, {'target': '$averaged_outs482.18', 'index': '$488build_tuple.21', 'value': '$474call.17'}), (494, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={410: ('$phi414.0', '$phi414.1')})
2025-07-23 17:15:40,530 - DEBUG - block_infos State(pc_initial=496 nstack_initial=3):
AdaptBlockInfo(insts=((498, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi496.0',)})
2025-07-23 17:15:40,530 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$averaged_outs500.1'}), (502, {'res': '$i502.2'}), (504, {'res': '$const504.3.2'}), (506, {'op': '-', 'lhs': '$i502.2', 'rhs': '$const504.3.2', 'res': '$binop_sub506.4'}), (510, {'index': '$binop_sub506.4', 'target': '$averaged_outs500.1', 'res': '$510binary_subscr.5'}), (514, {'res': '$averaged_outs514.6'}), (516, {'res': '$i516.7'}), (518, {'target': '$averaged_outs514.6', 'index': '$i516.7', 'value': '$510binary_subscr.5'}), (522, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi500.0',)})
2025-07-23 17:15:40,531 - DEBUG - block_infos State(pc_initial=524 nstack_initial=2):
AdaptBlockInfo(insts=((526, {'retval': '$const526.2', 'castval': '$526return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:40,533 - DEBUG - label 0:
    averaged_outs = arg(0, name=averaged_outs) ['averaged_outs']
    last_outs = arg(1, name=last_outs)       ['last_outs']
    outputs = arg(2, name=outputs)           ['outputs']
    batch_positions = arg(3, name=batch_positions) ['batch_positions']
    varying_rows = arg(4, name=varying_rows) ['varying_rows']
    num_varying_rows = arg(5, name=num_varying_rows) ['num_varying_rows']
    link = arg(6, name=link)                 ['link']
    linearizing_weights = arg(7, name=linearizing_weights) ['linearizing_weights']
    $6load_attr.1 = getattr(value=last_outs, attr=shape) ['$6load_attr.1', 'last_outs']
    $const26.2.1 = const(int, 0)             ['$const26.2.1']
    sample_count = getitem(value=$6load_attr.1, index=$const26.2.1, fn=<built-in function getitem>) ['$6load_attr.1', '$const26.2.1', 'sample_count']
    $34load_global.4 = global(range: <class 'range'>) ['$34load_global.4']
    $44load_global.6 = global(len: <built-in function len>) ['$44load_global.6']
    $56call.9 = call $44load_global.6(averaged_outs, func=$44load_global.6, args=[Var(averaged_outs, _masked_model.py:376)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.6', '$56call.9', 'averaged_outs']
    $64call.10 = call $34load_global.4($56call.9, func=$34load_global.4, args=[Var($56call.9, _masked_model.py:384)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', '$56call.9', '$64call.10']
    $72get_iter.11 = getiter(value=$64call.10) ['$64call.10', '$72get_iter.11']
    $phi74.0 = $72get_iter.11                ['$72get_iter.11', '$phi74.0']
    jump 74                                  []
label 74:
    $74for_iter.1 = iternext(value=$phi74.0) ['$74for_iter.1', '$phi74.0']
    $74for_iter.2 = pair_first(value=$74for_iter.1) ['$74for_iter.1', '$74for_iter.2']
    $74for_iter.3 = pair_second(value=$74for_iter.1) ['$74for_iter.1', '$74for_iter.3']
    $phi78.1 = $74for_iter.2                 ['$74for_iter.2', '$phi78.1']
    branch $74for_iter.3, 78, 524            ['$74for_iter.3']
label 78:
    i = $phi78.1                             ['$phi78.1', 'i']
    $84binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>) ['$84binary_subscr.4', 'batch_positions', 'i']
    $const92.7.2 = const(int, 1)             ['$const92.7.2']
    $binop_add94.8 = i + $const92.7.2        ['$binop_add94.8', '$const92.7.2', 'i']
    $98binary_subscr.9 = getitem(value=batch_positions, index=$binop_add94.8, fn=<built-in function getitem>) ['$98binary_subscr.9', '$binop_add94.8', 'batch_positions']
    $102compare_op.10 = $84binary_subscr.4 < $98binary_subscr.9 ['$102compare_op.10', '$84binary_subscr.4', '$98binary_subscr.9']
    bool106 = global(bool: <class 'bool'>)   ['bool106']
    $106pred = call bool106($102compare_op.10, func=bool106, args=(Var($102compare_op.10, _masked_model.py:385),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.10', '$106pred', 'bool106']
    branch $106pred, 108, 500                ['$106pred']
label 108:
    $112binary_subscr.3 = getitem(value=num_varying_rows, index=i, fn=<built-in function getitem>) ['$112binary_subscr.3', 'i', 'num_varying_rows']
    $118compare_op.5 = $112binary_subscr.3 == sample_count ['$112binary_subscr.3', '$118compare_op.5', 'sample_count']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($118compare_op.5, func=bool122, args=(Var($118compare_op.5, _masked_model.py:386),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.5', '$122pred', 'bool122']
    branch $122pred, 124, 160                ['$122pred']
label 124:
    $130binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>) ['$130binary_subscr.4', 'batch_positions', 'i']
    $const138.7.2 = const(int, 1)            ['$const138.7.2']
    $binop_add140.8 = i + $const138.7.2      ['$binop_add140.8', '$const138.7.2', 'i']
    $144binary_subscr.9 = getitem(value=batch_positions, index=$binop_add140.8, fn=<built-in function getitem>) ['$144binary_subscr.9', '$binop_add140.8', 'batch_positions']
    $148binary_slice.12 = global(slice: <class 'slice'>) ['$148binary_slice.12']
    $148binary_slice.10 = call $148binary_slice.12($130binary_subscr.4, $144binary_subscr.9, func=$148binary_slice.12, args=(Var($130binary_subscr.4, _masked_model.py:387), Var($144binary_subscr.9, _masked_model.py:387)), kws=(), vararg=None, varkwarg=None, target=None) ['$130binary_subscr.4', '$144binary_subscr.9', '$148binary_slice.10', '$148binary_slice.12']
    $148binary_slice.11 = getitem(value=outputs, index=$148binary_slice.10, fn=<built-in function getitem>) ['$148binary_slice.10', '$148binary_slice.11', 'outputs']
    $const152.14.0 = const(NoneType, None)   ['$const152.14.0']
    $const154.15.0 = const(NoneType, None)   ['$const154.15.0']
    $156store_slice.16 = global(slice: <class 'slice'>) ['$156store_slice.16']
    $156store_slice.17 = call $156store_slice.16($const152.14.0, $const154.15.0, func=$156store_slice.16, args=(Var($const152.14.0, _masked_model.py:387), Var($const154.15.0, _masked_model.py:387)), kws=(), vararg=None, varkwarg=None, target=None) ['$156store_slice.16', '$156store_slice.17', '$const152.14.0', '$const154.15.0']
    last_outs[$156store_slice.17] = $148binary_slice.11 ['$148binary_slice.11', '$156store_slice.17', 'last_outs']
    jump 200                                 []
label 160:
    $166binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>) ['$166binary_subscr.4', 'batch_positions', 'i']
    $const174.7.2 = const(int, 1)            ['$const174.7.2']
    $binop_add176.8 = i + $const174.7.2      ['$binop_add176.8', '$const174.7.2', 'i']
    $180binary_subscr.9 = getitem(value=batch_positions, index=$binop_add176.8, fn=<built-in function getitem>) ['$180binary_subscr.9', '$binop_add176.8', 'batch_positions']
    $184binary_slice.12 = global(slice: <class 'slice'>) ['$184binary_slice.12']
    $184binary_slice.10 = call $184binary_slice.12($166binary_subscr.4, $180binary_subscr.9, func=$184binary_slice.12, args=(Var($166binary_subscr.4, _masked_model.py:389), Var($180binary_subscr.9, _masked_model.py:389)), kws=(), vararg=None, varkwarg=None, target=None) ['$166binary_subscr.4', '$180binary_subscr.9', '$184binary_slice.10', '$184binary_slice.12']
    $184binary_slice.11 = getitem(value=outputs, index=$184binary_slice.10, fn=<built-in function getitem>) ['$184binary_slice.10', '$184binary_slice.11', 'outputs']
    $192binary_subscr.16 = getitem(value=varying_rows, index=i, fn=<built-in function getitem>) ['$192binary_subscr.16', 'i', 'varying_rows']
    last_outs[$192binary_subscr.16] = $184binary_slice.11 ['$184binary_slice.11', '$192binary_subscr.16', 'last_outs']
    jump 200                                 []
label 200:
    $constNone202 = const(NoneType, None)    ['$constNone202']
    $maybeNone202 = linearizing_weights is not $constNone202 ['$constNone202', '$maybeNone202', 'linearizing_weights']
    $bool202 = global(bool: <class 'bool'>)  ['$bool202']
    $pred202 = call $bool202($maybeNone202, func=$bool202, args=(Var($maybeNone202, _masked_model.py:391),), kws=(), vararg=None, varkwarg=None, target=None) ['$bool202', '$maybeNone202', '$pred202']
    branch $pred202, 204, 362                ['$pred202']
label 204:
    $204load_global.1 = global(range: <class 'range'>) ['$204load_global.1']
    $216load_attr.4 = getattr(value=last_outs, attr=shape) ['$216load_attr.4', 'last_outs']
    $const236.5.3 = const(int, -1)           ['$const236.5.3']
    $238binary_subscr.6 = getitem(value=$216load_attr.4, index=$const236.5.3, fn=<built-in function getitem>) ['$216load_attr.4', '$238binary_subscr.6', '$const236.5.3']
    $242call.7 = call $204load_global.1($238binary_subscr.6, func=$204load_global.1, args=[Var($238binary_subscr.6, _masked_model.py:392)], kws=(), vararg=None, varkwarg=None, target=None) ['$204load_global.1', '$238binary_subscr.6', '$242call.7']
    $250get_iter.8 = getiter(value=$242call.7) ['$242call.7', '$250get_iter.8']
    $phi252.1 = $250get_iter.8               ['$250get_iter.8', '$phi252.1']
    jump 252                                 []
label 252:
    $252for_iter.2 = iternext(value=$phi252.1) ['$252for_iter.2', '$phi252.1']
    $252for_iter.3 = pair_first(value=$252for_iter.2) ['$252for_iter.2', '$252for_iter.3']
    $252for_iter.4 = pair_second(value=$252for_iter.2) ['$252for_iter.2', '$252for_iter.4']
    $phi256.2 = $252for_iter.3               ['$252for_iter.3', '$phi256.2']
    branch $252for_iter.4, 256, 358          ['$252for_iter.4']
label 256:
    j = $phi256.2                            ['$phi256.2', 'j']
    $258load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$258load_global.3']
    $268load_attr.5 = getattr(value=$258load_global.3, attr=mean) ['$258load_global.3', '$268load_attr.5']
    $const290.7.0 = const(NoneType, None)    ['$const290.7.0']
    $const292.8.0 = const(NoneType, None)    ['$const292.8.0']
    $294build_slice.9 = global(slice: <class 'slice'>) ['$294build_slice.9']
    $294build_slice.10 = call $294build_slice.9($const290.7.0, $const292.8.0, func=$294build_slice.9, args=(Var($const290.7.0, _masked_model.py:393), Var($const292.8.0, _masked_model.py:393)), kws=(), vararg=None, varkwarg=None, target=None) ['$294build_slice.10', '$294build_slice.9', '$const290.7.0', '$const292.8.0']
    $298build_tuple.12 = build_tuple(items=[Var($294build_slice.10, _masked_model.py:393), Var(j, _masked_model.py:392)]) ['$294build_slice.10', '$298build_tuple.12', 'j']
    $300binary_subscr.13 = getitem(value=linearizing_weights, index=$298build_tuple.12, fn=<built-in function getitem>) ['$298build_tuple.12', '$300binary_subscr.13', 'linearizing_weights']
    $const310.17.0 = const(NoneType, None)   ['$const310.17.0']
    $const312.18.0 = const(NoneType, None)   ['$const312.18.0']
    $314build_slice.19 = global(slice: <class 'slice'>) ['$314build_slice.19']
    $314build_slice.20 = call $314build_slice.19($const310.17.0, $const312.18.0, func=$314build_slice.19, args=(Var($const310.17.0, _masked_model.py:393), Var($const312.18.0, _masked_model.py:393)), kws=(), vararg=None, varkwarg=None, target=None) ['$314build_slice.19', '$314build_slice.20', '$const310.17.0', '$const312.18.0']
    $318build_tuple.22 = build_tuple(items=[Var($314build_slice.20, _masked_model.py:393), Var(j, _masked_model.py:392)]) ['$314build_slice.20', '$318build_tuple.22', 'j']
    $320binary_subscr.23 = getitem(value=last_outs, index=$318build_tuple.22, fn=<built-in function getitem>) ['$318build_tuple.22', '$320binary_subscr.23', 'last_outs']
    $324call.24 = call link($320binary_subscr.23, func=link, args=[Var($320binary_subscr.23, _masked_model.py:393)], kws=(), vararg=None, varkwarg=None, target=None) ['$320binary_subscr.23', '$324call.24', 'link']
    $binop_mul332.25 = $300binary_subscr.13 * $324call.24 ['$300binary_subscr.13', '$324call.24', '$binop_mul332.25']
    $336call.26 = call $268load_attr.5($binop_mul332.25, func=$268load_attr.5, args=[Var($binop_mul332.25, _masked_model.py:393)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_attr.5', '$336call.26', '$binop_mul332.25']
    $350build_tuple.30 = build_tuple(items=[Var(i, _masked_model.py:384), Var(j, _masked_model.py:392)]) ['$350build_tuple.30', 'i', 'j']
    averaged_outs[$350build_tuple.30] = $336call.26 ['$336call.26', '$350build_tuple.30', 'averaged_outs']
    jump 252                                 []
label 358:
    jump 74                                  []
label 362:
    $362load_global.1 = global(range: <class 'range'>) ['$362load_global.1']
    $374load_attr.4 = getattr(value=last_outs, attr=shape) ['$374load_attr.4', 'last_outs']
    $const394.5.3 = const(int, -1)           ['$const394.5.3']
    $396binary_subscr.6 = getitem(value=$374load_attr.4, index=$const394.5.3, fn=<built-in function getitem>) ['$374load_attr.4', '$396binary_subscr.6', '$const394.5.3']
    $400call.7 = call $362load_global.1($396binary_subscr.6, func=$362load_global.1, args=[Var($396binary_subscr.6, _masked_model.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$362load_global.1', '$396binary_subscr.6', '$400call.7']
    $408get_iter.8 = getiter(value=$400call.7) ['$400call.7', '$408get_iter.8']
    $phi410.1 = $408get_iter.8               ['$408get_iter.8', '$phi410.1']
    jump 410                                 []
label 410:
    $410for_iter.2 = iternext(value=$phi410.1) ['$410for_iter.2', '$phi410.1']
    $410for_iter.3 = pair_first(value=$410for_iter.2) ['$410for_iter.2', '$410for_iter.3']
    $410for_iter.4 = pair_second(value=$410for_iter.2) ['$410for_iter.2', '$410for_iter.4']
    $phi414.2 = $410for_iter.3               ['$410for_iter.3', '$phi414.2']
    branch $410for_iter.4, 414, 496          ['$410for_iter.4']
label 414:
    j = $phi414.2                            ['$phi414.2', 'j']
    $420load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$420load_global.5']
    $430load_attr.7 = getattr(value=$420load_global.5, attr=mean) ['$420load_global.5', '$430load_attr.7']
    $const452.9.0 = const(NoneType, None)    ['$const452.9.0']
    $const454.10.0 = const(NoneType, None)   ['$const454.10.0']
    $456build_slice.11 = global(slice: <class 'slice'>) ['$456build_slice.11']
    $456build_slice.12 = call $456build_slice.11($const452.9.0, $const454.10.0, func=$456build_slice.11, args=(Var($const452.9.0, _masked_model.py:397), Var($const454.10.0, _masked_model.py:397)), kws=(), vararg=None, varkwarg=None, target=None) ['$456build_slice.11', '$456build_slice.12', '$const452.9.0', '$const454.10.0']
    $460build_tuple.14 = build_tuple(items=[Var($456build_slice.12, _masked_model.py:397), Var(j, _masked_model.py:392)]) ['$456build_slice.12', '$460build_tuple.14', 'j']
    $462binary_subscr.15 = getitem(value=last_outs, index=$460build_tuple.14, fn=<built-in function getitem>) ['$460build_tuple.14', '$462binary_subscr.15', 'last_outs']
    $466call.16 = call $430load_attr.7($462binary_subscr.15, func=$430load_attr.7, args=[Var($462binary_subscr.15, _masked_model.py:397)], kws=(), vararg=None, varkwarg=None, target=None) ['$430load_attr.7', '$462binary_subscr.15', '$466call.16']
    $474call.17 = call link($466call.16, func=link, args=[Var($466call.16, _masked_model.py:397)], kws=(), vararg=None, varkwarg=None, target=None) ['$466call.16', '$474call.17', 'link']
    $488build_tuple.21 = build_tuple(items=[Var(i, _masked_model.py:384), Var(j, _masked_model.py:392)]) ['$488build_tuple.21', 'i', 'j']
    averaged_outs[$488build_tuple.21] = $474call.17 ['$474call.17', '$488build_tuple.21', 'averaged_outs']
    jump 410                                 []
label 496:
    jump 74                                  []
label 500:
    $const504.3.2 = const(int, 1)            ['$const504.3.2']
    $binop_sub506.4 = i - $const504.3.2      ['$binop_sub506.4', '$const504.3.2', 'i']
    $510binary_subscr.5 = getitem(value=averaged_outs, index=$binop_sub506.4, fn=<built-in function getitem>) ['$510binary_subscr.5', '$binop_sub506.4', 'averaged_outs']
    averaged_outs[i] = $510binary_subscr.5   ['$510binary_subscr.5', 'averaged_outs', 'i']
    jump 74                                  []
label 524:
    $const526.2 = const(NoneType, None)      ['$const526.2']
    $526return_const.3 = cast(value=$const526.2) ['$526return_const.3', '$const526.2']
    return $526return_const.3                ['$526return_const.3']

2025-07-23 17:15:40,623 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:40,623 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,624 - DEBUG - on stmt: averaged_outs = arg(0, name=averaged_outs)
2025-07-23 17:15:40,624 - DEBUG - on stmt: last_outs = arg(1, name=last_outs)
2025-07-23 17:15:40,624 - DEBUG - on stmt: outputs = arg(2, name=outputs)
2025-07-23 17:15:40,624 - DEBUG - on stmt: batch_positions = arg(3, name=batch_positions)
2025-07-23 17:15:40,625 - DEBUG - on stmt: varying_rows = arg(4, name=varying_rows)
2025-07-23 17:15:40,625 - DEBUG - on stmt: num_varying_rows = arg(5, name=num_varying_rows)
2025-07-23 17:15:40,625 - DEBUG - on stmt: link = arg(6, name=link)
2025-07-23 17:15:40,625 - DEBUG - on stmt: linearizing_weights = arg(7, name=linearizing_weights)
2025-07-23 17:15:40,625 - DEBUG - on stmt: $6load_attr.1 = getattr(value=last_outs, attr=shape)
2025-07-23 17:15:40,626 - DEBUG - on stmt: $const26.2.1 = const(int, 0)
2025-07-23 17:15:40,626 - DEBUG - on stmt: sample_count = static_getitem(value=$6load_attr.1, index=0, index_var=$const26.2.1, fn=<built-in function getitem>)
2025-07-23 17:15:40,626 - DEBUG - on stmt: $34load_global.4 = global(range: <class 'range'>)
2025-07-23 17:15:40,626 - DEBUG - on stmt: $44load_global.6 = global(len: <built-in function len>)
2025-07-23 17:15:40,626 - DEBUG - on stmt: $56call.9 = call $44load_global.6(averaged_outs, func=$44load_global.6, args=[Var(averaged_outs, _masked_model.py:376)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,626 - DEBUG - on stmt: $64call.10 = call $34load_global.4($56call.9, func=$34load_global.4, args=[Var($56call.9, _masked_model.py:384)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,627 - DEBUG - on stmt: $72get_iter.11 = getiter(value=$64call.10)
2025-07-23 17:15:40,627 - DEBUG - on stmt: $phi74.0 = $72get_iter.11
2025-07-23 17:15:40,627 - DEBUG - on stmt: jump 74
2025-07-23 17:15:40,627 - DEBUG - ==== SSA block analysis pass on 74
2025-07-23 17:15:40,627 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,628 - DEBUG - on stmt: $74for_iter.1 = iternext(value=$phi74.0)
2025-07-23 17:15:40,628 - DEBUG - on stmt: $74for_iter.2 = pair_first(value=$74for_iter.1)
2025-07-23 17:15:40,628 - DEBUG - on stmt: $74for_iter.3 = pair_second(value=$74for_iter.1)
2025-07-23 17:15:40,628 - DEBUG - on stmt: $phi78.1 = $74for_iter.2
2025-07-23 17:15:40,628 - DEBUG - on stmt: branch $74for_iter.3, 78, 524
2025-07-23 17:15:40,628 - DEBUG - ==== SSA block analysis pass on 78
2025-07-23 17:15:40,628 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,628 - DEBUG - on stmt: i = $phi78.1
2025-07-23 17:15:40,629 - DEBUG - on stmt: $84binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:40,629 - DEBUG - on stmt: $const92.7.2 = const(int, 1)
2025-07-23 17:15:40,629 - DEBUG - on stmt: $binop_add94.8 = i + $const92.7.2
2025-07-23 17:15:40,629 - DEBUG - on stmt: $98binary_subscr.9 = getitem(value=batch_positions, index=$binop_add94.8, fn=<built-in function getitem>)
2025-07-23 17:15:40,629 - DEBUG - on stmt: $102compare_op.10 = $84binary_subscr.4 < $98binary_subscr.9
2025-07-23 17:15:40,629 - DEBUG - on stmt: bool106 = global(bool: <class 'bool'>)
2025-07-23 17:15:40,629 - DEBUG - on stmt: $106pred = call bool106($102compare_op.10, func=bool106, args=(Var($102compare_op.10, _masked_model.py:385),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,629 - DEBUG - on stmt: branch $106pred, 108, 500
2025-07-23 17:15:40,629 - DEBUG - ==== SSA block analysis pass on 108
2025-07-23 17:15:40,630 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,630 - DEBUG - on stmt: $112binary_subscr.3 = getitem(value=num_varying_rows, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:40,630 - DEBUG - on stmt: $118compare_op.5 = $112binary_subscr.3 == sample_count
2025-07-23 17:15:40,630 - DEBUG - on stmt: bool122 = global(bool: <class 'bool'>)
2025-07-23 17:15:40,630 - DEBUG - on stmt: $122pred = call bool122($118compare_op.5, func=bool122, args=(Var($118compare_op.5, _masked_model.py:386),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,630 - DEBUG - on stmt: branch $122pred, 124, 160
2025-07-23 17:15:40,630 - DEBUG - ==== SSA block analysis pass on 124
2025-07-23 17:15:40,630 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,630 - DEBUG - on stmt: $130binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $const138.7.2 = const(int, 1)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $binop_add140.8 = i + $const138.7.2
2025-07-23 17:15:40,631 - DEBUG - on stmt: $144binary_subscr.9 = getitem(value=batch_positions, index=$binop_add140.8, fn=<built-in function getitem>)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $148binary_slice.12 = global(slice: <class 'slice'>)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $148binary_slice.10 = call $148binary_slice.12($130binary_subscr.4, $144binary_subscr.9, func=$148binary_slice.12, args=(Var($130binary_subscr.4, _masked_model.py:387), Var($144binary_subscr.9, _masked_model.py:387)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $148binary_slice.11 = getitem(value=outputs, index=$148binary_slice.10, fn=<built-in function getitem>)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $const152.14.0 = const(NoneType, None)
2025-07-23 17:15:40,631 - DEBUG - on stmt: $const154.15.0 = const(NoneType, None)
2025-07-23 17:15:40,632 - DEBUG - on stmt: $156store_slice.16 = global(slice: <class 'slice'>)
2025-07-23 17:15:40,632 - DEBUG - on stmt: $156store_slice.17 = call $156store_slice.16($const152.14.0, $const154.15.0, func=$156store_slice.16, args=(Var($const152.14.0, _masked_model.py:387), Var($const154.15.0, _masked_model.py:387)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,632 - DEBUG - on stmt: last_outs[slice(None, None, None)] = $148binary_slice.11
2025-07-23 17:15:40,632 - DEBUG - on stmt: jump 200
2025-07-23 17:15:40,632 - DEBUG - ==== SSA block analysis pass on 160
2025-07-23 17:15:40,632 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,632 - DEBUG - on stmt: $166binary_subscr.4 = getitem(value=batch_positions, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:40,632 - DEBUG - on stmt: $const174.7.2 = const(int, 1)
2025-07-23 17:15:40,633 - DEBUG - on stmt: $binop_add176.8 = i + $const174.7.2
2025-07-23 17:15:40,633 - DEBUG - on stmt: $180binary_subscr.9 = getitem(value=batch_positions, index=$binop_add176.8, fn=<built-in function getitem>)
2025-07-23 17:15:40,633 - DEBUG - on stmt: $184binary_slice.12 = global(slice: <class 'slice'>)
2025-07-23 17:15:40,633 - DEBUG - on stmt: $184binary_slice.10 = call $184binary_slice.12($166binary_subscr.4, $180binary_subscr.9, func=$184binary_slice.12, args=(Var($166binary_subscr.4, _masked_model.py:389), Var($180binary_subscr.9, _masked_model.py:389)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,633 - DEBUG - on stmt: $184binary_slice.11 = getitem(value=outputs, index=$184binary_slice.10, fn=<built-in function getitem>)
2025-07-23 17:15:40,633 - DEBUG - on stmt: $192binary_subscr.16 = getitem(value=varying_rows, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:40,633 - DEBUG - on stmt: last_outs[$192binary_subscr.16] = $184binary_slice.11
2025-07-23 17:15:40,634 - DEBUG - on stmt: jump 200
2025-07-23 17:15:40,634 - DEBUG - ==== SSA block analysis pass on 200
2025-07-23 17:15:40,634 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,634 - DEBUG - on stmt: $constNone202 = const(NoneType, None)
2025-07-23 17:15:40,634 - DEBUG - on stmt: $maybeNone202 = const(int, 0)
2025-07-23 17:15:40,634 - DEBUG - on stmt: $bool202 = global(bool: <class 'bool'>)
2025-07-23 17:15:40,635 - DEBUG - on stmt: $pred202 = call $bool202($maybeNone202, func=$bool202, args=(Var($maybeNone202, _masked_model.py:391),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,635 - DEBUG - on stmt: jump 362
2025-07-23 17:15:40,635 - DEBUG - ==== SSA block analysis pass on 362
2025-07-23 17:15:40,635 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,635 - DEBUG - on stmt: $362load_global.1 = global(range: <class 'range'>)
2025-07-23 17:15:40,635 - DEBUG - on stmt: $374load_attr.4 = getattr(value=last_outs, attr=shape)
2025-07-23 17:15:40,635 - DEBUG - on stmt: $const394.5.3 = const(int, -1)
2025-07-23 17:15:40,635 - DEBUG - on stmt: $396binary_subscr.6 = static_getitem(value=$374load_attr.4, index=-1, index_var=$const394.5.3, fn=<built-in function getitem>)
2025-07-23 17:15:40,636 - DEBUG - on stmt: $400call.7 = call $362load_global.1($396binary_subscr.6, func=$362load_global.1, args=[Var($396binary_subscr.6, _masked_model.py:395)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,636 - DEBUG - on stmt: $408get_iter.8 = getiter(value=$400call.7)
2025-07-23 17:15:40,636 - DEBUG - on stmt: $phi410.1 = $408get_iter.8
2025-07-23 17:15:40,636 - DEBUG - on stmt: jump 410
2025-07-23 17:15:40,636 - DEBUG - ==== SSA block analysis pass on 410
2025-07-23 17:15:40,636 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,636 - DEBUG - on stmt: $410for_iter.2 = iternext(value=$phi410.1)
2025-07-23 17:15:40,636 - DEBUG - on stmt: $410for_iter.3 = pair_first(value=$410for_iter.2)
2025-07-23 17:15:40,637 - DEBUG - on stmt: $410for_iter.4 = pair_second(value=$410for_iter.2)
2025-07-23 17:15:40,637 - DEBUG - on stmt: $phi414.2 = $410for_iter.3
2025-07-23 17:15:40,637 - DEBUG - on stmt: branch $410for_iter.4, 414, 496
2025-07-23 17:15:40,637 - DEBUG - ==== SSA block analysis pass on 414
2025-07-23 17:15:40,637 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,637 - DEBUG - on stmt: j = $phi414.2
2025-07-23 17:15:40,637 - DEBUG - on stmt: $420load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:40,637 - DEBUG - on stmt: $430load_attr.7 = getattr(value=$420load_global.5, attr=mean)
2025-07-23 17:15:40,637 - DEBUG - on stmt: $const452.9.0 = const(NoneType, None)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $const454.10.0 = const(NoneType, None)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $456build_slice.11 = global(slice: <class 'slice'>)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $456build_slice.12 = call $456build_slice.11($const452.9.0, $const454.10.0, func=$456build_slice.11, args=(Var($const452.9.0, _masked_model.py:397), Var($const454.10.0, _masked_model.py:397)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $460build_tuple.14 = build_tuple(items=[Var($456build_slice.12, _masked_model.py:397), Var(j, _masked_model.py:392)])
2025-07-23 17:15:40,638 - DEBUG - on stmt: $462binary_subscr.15 = getitem(value=last_outs, index=$460build_tuple.14, fn=<built-in function getitem>)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $466call.16 = call $430load_attr.7($462binary_subscr.15, func=$430load_attr.7, args=[Var($462binary_subscr.15, _masked_model.py:397)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $474call.17 = call link($466call.16, func=link, args=[Var($466call.16, _masked_model.py:397)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,638 - DEBUG - on stmt: $488build_tuple.21 = build_tuple(items=[Var(i, _masked_model.py:384), Var(j, _masked_model.py:392)])
2025-07-23 17:15:40,638 - DEBUG - on stmt: averaged_outs[$488build_tuple.21] = $474call.17
2025-07-23 17:15:40,639 - DEBUG - on stmt: jump 410
2025-07-23 17:15:40,639 - DEBUG - ==== SSA block analysis pass on 496
2025-07-23 17:15:40,639 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,639 - DEBUG - on stmt: jump 525
2025-07-23 17:15:40,639 - DEBUG - ==== SSA block analysis pass on 500
2025-07-23 17:15:40,640 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,640 - DEBUG - on stmt: $const504.3.2 = const(int, 1)
2025-07-23 17:15:40,640 - DEBUG - on stmt: $binop_sub506.4 = i - $const504.3.2
2025-07-23 17:15:40,640 - DEBUG - on stmt: $510binary_subscr.5 = getitem(value=averaged_outs, index=$binop_sub506.4, fn=<built-in function getitem>)
2025-07-23 17:15:40,640 - DEBUG - on stmt: averaged_outs[i] = $510binary_subscr.5
2025-07-23 17:15:40,640 - DEBUG - on stmt: jump 525
2025-07-23 17:15:40,640 - DEBUG - ==== SSA block analysis pass on 524
2025-07-23 17:15:40,640 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,640 - DEBUG - on stmt: $const526.2 = const(NoneType, None)
2025-07-23 17:15:40,641 - DEBUG - on stmt: $526return_const.3 = cast(value=$const526.2)
2025-07-23 17:15:40,641 - DEBUG - on stmt: return $526return_const.3
2025-07-23 17:15:40,641 - DEBUG - ==== SSA block analysis pass on 525
2025-07-23 17:15:40,641 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D53E30>
2025-07-23 17:15:40,641 - DEBUG - on stmt: jump 74
2025-07-23 17:15:40,641 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102compare_op.10': [(<numba.core.ir.Assign object at 0x000001F6D7CEB290>,
                                    78)],
             '$106pred': [(<numba.core.ir.Assign object at 0x000001F6D7CEB4A0>,
                           78)],
             '$112binary_subscr.3': [(<numba.core.ir.Assign object at 0x000001F6D7CEB6E0>,
                                      108)],
             '$118compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6D7CEB8F0>,
                                   108)],
             '$122pred': [(<numba.core.ir.Assign object at 0x000001F6D7CEBB00>,
                           108)],
             '$130binary_subscr.4': [(<numba.core.ir.Assign object at 0x000001F6D7CEBE90>,
                                      124)],
             '$144binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001F6D7D3C410>,
                                      124)],
             '$148binary_slice.10': [(<numba.core.ir.Assign object at 0x000001F6D7D3C5F0>,
                                      124)],
             '$148binary_slice.11': [(<numba.core.ir.Assign object at 0x000001F6D7D3C6E0>,
                                      124)],
             '$148binary_slice.12': [(<numba.core.ir.Assign object at 0x000001F6D7D3C500>,
                                      124)],
             '$156store_slice.16': [(<numba.core.ir.Assign object at 0x000001F6D7D3CB30>,
                                     124)],
             '$156store_slice.17': [(<numba.core.ir.Assign object at 0x000001F6D7D3CC20>,
                                     124)],
             '$166binary_subscr.4': [(<numba.core.ir.Assign object at 0x000001F6D7D3CEF0>,
                                      160)],
             '$180binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001F6D7D3D460>,
                                      160)],
             '$184binary_slice.10': [(<numba.core.ir.Assign object at 0x000001F6D7D3D670>,
                                      160)],
             '$184binary_slice.11': [(<numba.core.ir.Assign object at 0x000001F6D7D3D790>,
                                      160)],
             '$184binary_slice.12': [(<numba.core.ir.Assign object at 0x000001F6D7D3D550>,
                                      160)],
             '$192binary_subscr.16': [(<numba.core.ir.Assign object at 0x000001F6D7D3DBE0>,
                                       160)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x000001F6D7CE9F70>,
                                   0)],
             '$362load_global.1': [(<numba.core.ir.Assign object at 0x000001F6D7D40950>,
                                    362)],
             '$374load_attr.4': [(<numba.core.ir.Assign object at 0x000001F6D7D40EC0>,
                                  362)],
             '$396binary_subscr.6': [(<numba.core.ir.Assign object at 0x000001F6D7D50500>,
                                      362)],
             '$400call.7': [(<numba.core.ir.Assign object at 0x000001F6D7D412E0>,
                             362)],
             '$408get_iter.8': [(<numba.core.ir.Assign object at 0x000001F6D7D41400>,
                                 362)],
             '$410for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6D7D41670>,
                                 410)],
             '$410for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6D7D41790>,
                                 410)],
             '$410for_iter.4': [(<numba.core.ir.Assign object at 0x000001F6D7D418B0>,
                                 410)],
             '$420load_global.5': [(<numba.core.ir.Assign object at 0x000001F6D7D41C70>,
                                    414)],
             '$430load_attr.7': [(<numba.core.ir.Assign object at 0x000001F6D7D41DC0>,
                                  414)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x000001F6D7CE9FD0>,
                                   0)],
             '$456build_slice.11': [(<numba.core.ir.Assign object at 0x000001F6D7D42210>,
                                     414)],
             '$456build_slice.12': [(<numba.core.ir.Assign object at 0x000001F6D7D42330>,
                                     414)],
             '$460build_tuple.14': [(<numba.core.ir.Assign object at 0x000001F6D7D42570>,
                                     414)],
             '$462binary_subscr.15': [(<numba.core.ir.Assign object at 0x000001F6D7D426F0>,
                                       414)],
             '$466call.16': [(<numba.core.ir.Assign object at 0x000001F6D7D42870>,
                              414)],
             '$474call.17': [(<numba.core.ir.Assign object at 0x000001F6D7D429F0>,
                              414)],
             '$488build_tuple.21': [(<numba.core.ir.Assign object at 0x000001F6D7D42DE0>,
                                     414)],
             '$510binary_subscr.5': [(<numba.core.ir.Assign object at 0x000001F6D7D43350>,
                                      500)],
             '$526return_const.3': [(<numba.core.ir.Assign object at 0x000001F6D7D436E0>,
                                     524)],
             '$56call.9': [(<numba.core.ir.Assign object at 0x000001F6D7CEA3C0>,
                            0)],
             '$64call.10': [(<numba.core.ir.Assign object at 0x000001F6D7CEA4B0>,
                             0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6D7CE9E20>,
                                0)],
             '$72get_iter.11': [(<numba.core.ir.Assign object at 0x000001F6D7CEA540>,
                                 0)],
             '$74for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6D7CEA690>,
                                74)],
             '$74for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6D7CEA720>,
                                74)],
             '$74for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6D7CEA7B0>,
                                74)],
             '$84binary_subscr.4': [(<numba.core.ir.Assign object at 0x000001F6D7CEAC60>,
                                     78)],
             '$98binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001F6D7CEB170>,
                                     78)],
             '$binop_add140.8': [(<numba.core.ir.Assign object at 0x000001F6D7D3C2F0>,
                                  124)],
             '$binop_add176.8': [(<numba.core.ir.Assign object at 0x000001F6D7D3D310>,
                                  160)],
             '$binop_add94.8': [(<numba.core.ir.Assign object at 0x000001F6D7CEB050>,
                                 78)],
             '$binop_sub506.4': [(<numba.core.ir.Assign object at 0x000001F6D7D43200>,
                                  500)],
             '$bool202': [(<numba.core.ir.Assign object at 0x000001F6D7D3DDC0>,
                           200)],
             '$const138.7.2': [(<numba.core.ir.Assign object at 0x000001F6D7D3C1A0>,
                                124)],
             '$const152.14.0': [(<numba.core.ir.Assign object at 0x000001F6D7D3C8F0>,
                                 124)],
             '$const154.15.0': [(<numba.core.ir.Assign object at 0x000001F6D7D3CA10>,
                                 124)],
             '$const174.7.2': [(<numba.core.ir.Assign object at 0x000001F6D7D3D1C0>,
                                160)],
             '$const26.2.1': [(<numba.core.ir.Assign object at 0x000001F6D7CE88C0>,
                               0)],
             '$const394.5.3': [(<numba.core.ir.Assign object at 0x000001F6D7D40FE0>,
                                362)],
             '$const452.9.0': [(<numba.core.ir.Assign object at 0x000001F6D7D41FD0>,
                                414)],
             '$const454.10.0': [(<numba.core.ir.Assign object at 0x000001F6D7D420F0>,
                                 414)],
             '$const504.3.2': [(<numba.core.ir.Assign object at 0x000001F6D7D43080>,
                                500)],
             '$const526.2': [(<numba.core.ir.Assign object at 0x000001F6D7D43530>,
                              524)],
             '$const92.7.2': [(<numba.core.ir.Assign object at 0x000001F6D7CEAF30>,
                               78)],
             '$constNone202': [(<numba.core.ir.Assign object at 0x000001F6D7D3D970>,
                                200)],
             '$maybeNone202': [(<numba.core.ir.Assign object at 0x000001F6D7D3DCD0>,
                                200)],
             '$phi410.1': [(<numba.core.ir.Assign object at 0x000001F6D7D40DA0>,
                            362)],
             '$phi414.2': [(<numba.core.ir.Assign object at 0x000001F6D7D41940>,
                            410)],
             '$phi74.0': [(<numba.core.ir.Assign object at 0x000001F6D7CE9D90>,
                           0)],
             '$phi78.1': [(<numba.core.ir.Assign object at 0x000001F6D7CEA600>,
                           74)],
             '$pred202': [(<numba.core.ir.Assign object at 0x000001F6D7D3DEE0>,
                           200)],
             'averaged_outs': [(<numba.core.ir.Assign object at 0x000001F6D7CEA0C0>,
                                0)],
             'batch_positions': [(<numba.core.ir.Assign object at 0x000001F6D7CE9DF0>,
                                  0)],
             'bool106': [(<numba.core.ir.Assign object at 0x000001F6D7CEB3B0>,
                          78)],
             'bool122': [(<numba.core.ir.Assign object at 0x000001F6D7CEBA10>,
                          108)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6D7CEA930>, 78)],
             'j': [(<numba.core.ir.Assign object at 0x000001F6D7D41A60>, 414)],
             'last_outs': [(<numba.core.ir.Assign object at 0x000001F6D7CEA150>,
                            0)],
             'linearizing_weights': [(<numba.core.ir.Assign object at 0x000001F6D7CE8B30>,
                                      0)],
             'link': [(<numba.core.ir.Assign object at 0x000001F6D7CE9C10>, 0)],
             'num_varying_rows': [(<numba.core.ir.Assign object at 0x000001F6D7CE9A90>,
                                   0)],
             'outputs': [(<numba.core.ir.Assign object at 0x000001F6D7CEA0F0>,
                          0)],
             'sample_count': [(<numba.core.ir.Assign object at 0x000001F6D7D52150>,
                               0)],
             'varying_rows': [(<numba.core.ir.Assign object at 0x000001F6D7CE9C70>,
                               0)]})
2025-07-23 17:15:40,644 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6D7D3DF40>
2025-07-23 17:15:40,923 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	COPY_FREE_VARS(arg=1, lineno=436)
           4	RESUME(arg=0, lineno=436)
           6	LOAD_DEREF(arg=3, lineno=439)
           8	STORE_FAST(arg=1, lineno=439)
          10	LOAD_GLOBAL(arg=1, lineno=440)
          20	LOAD_ATTR(arg=2, lineno=440)
          40	LOAD_FAST(arg=0, lineno=440)
          42	CALL(arg=1, lineno=440)
          50	GET_ITER(arg=None, lineno=440)
>         52	FOR_ITER(arg=21, lineno=440)
          56	STORE_FAST(arg=2, lineno=440)
          58	LOAD_FAST(arg=1, lineno=441)
          60	LOAD_FAST(arg=2, lineno=441)
          62	LOAD_ATTR(arg=5, lineno=441)
          82	CALL(arg=0, lineno=441)
          90	BINARY_OP(arg=13, lineno=441)
          94	STORE_FAST(arg=1, lineno=441)
          96	JUMP_BACKWARD(arg=23, lineno=441)
>         98	END_FOR(arg=None, lineno=440)
         100	LOAD_FAST(arg=1, lineno=442)
         102	LOAD_FAST(arg=0, lineno=442)
         104	LOAD_ATTR(arg=6, lineno=442)
         124	BINARY_OP(arg=11, lineno=442)
         128	RETURN_VALUE(arg=None, lineno=442)
2025-07-23 17:15:40,923 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:40,924 - DEBUG - stack: []
2025-07-23 17:15:40,924 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:40,924 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=436)
2025-07-23 17:15:40,924 - DEBUG - stack []
2025-07-23 17:15:40,924 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=436)
2025-07-23 17:15:40,925 - DEBUG - stack []
2025-07-23 17:15:40,925 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=436)
2025-07-23 17:15:40,925 - DEBUG - stack []
2025-07-23 17:15:40,925 - DEBUG - dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=439)
2025-07-23 17:15:40,926 - DEBUG - stack []
2025-07-23 17:15:40,926 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=439)
2025-07-23 17:15:40,926 - DEBUG - stack ['$6load_deref.0']
2025-07-23 17:15:40,926 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=440)
2025-07-23 17:15:40,926 - DEBUG - stack []
2025-07-23 17:15:40,927 - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=440)
2025-07-23 17:15:40,927 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2025-07-23 17:15:40,927 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=440)
2025-07-23 17:15:40,927 - DEBUG - stack ['$null$10.2', '$20load_attr.3']
2025-07-23 17:15:40,927 - DEBUG - dispatch pc=42, inst=CALL(arg=1, lineno=440)
2025-07-23 17:15:40,927 - DEBUG - stack ['$null$10.2', '$20load_attr.3', '$a40.4']
2025-07-23 17:15:40,928 - DEBUG - dispatch pc=50, inst=GET_ITER(arg=None, lineno=440)
2025-07-23 17:15:40,928 - DEBUG - stack ['$42call.5']
2025-07-23 17:15:40,928 - DEBUG - end state. edges=[Edge(pc=52, stack=('$50get_iter.6',), blockstack=(), npush=0)]
2025-07-23 17:15:40,928 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2025-07-23 17:15:40,928 - DEBUG - stack: ['$phi52.0']
2025-07-23 17:15:40,928 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=1)
2025-07-23 17:15:40,928 - DEBUG - dispatch pc=52, inst=FOR_ITER(arg=21, lineno=440)
2025-07-23 17:15:40,929 - DEBUG - stack ['$phi52.0']
2025-07-23 17:15:40,929 - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0), Edge(pc=56, stack=('$phi52.0', '$52for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:40,929 - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=2), State(pc_initial=56 nstack_initial=2)])
2025-07-23 17:15:40,929 - DEBUG - stack: ['$phi98.0', '$phi98.1']
2025-07-23 17:15:40,929 - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=2)
2025-07-23 17:15:40,929 - DEBUG - dispatch pc=98, inst=END_FOR(arg=None, lineno=440)
2025-07-23 17:15:40,929 - DEBUG - stack ['$phi98.0', '$phi98.1']
2025-07-23 17:15:40,930 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=442)
2025-07-23 17:15:40,930 - DEBUG - stack []
2025-07-23 17:15:40,930 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=442)
2025-07-23 17:15:40,930 - DEBUG - stack ['$c100.2']
2025-07-23 17:15:40,931 - DEBUG - dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=442)
2025-07-23 17:15:40,931 - DEBUG - stack ['$c100.2', '$a102.3']
2025-07-23 17:15:40,931 - DEBUG - dispatch pc=124, inst=BINARY_OP(arg=11, lineno=442)
2025-07-23 17:15:40,931 - DEBUG - stack ['$c100.2', '$104load_attr.4']
2025-07-23 17:15:40,932 - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=442)
2025-07-23 17:15:40,932 - DEBUG - stack ['$binop_truediv124.5']
2025-07-23 17:15:40,933 - DEBUG - end state. edges=[]
2025-07-23 17:15:40,933 - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=2)])
2025-07-23 17:15:40,933 - DEBUG - stack: ['$phi56.0', '$phi56.1']
2025-07-23 17:15:40,933 - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=2)
2025-07-23 17:15:40,933 - DEBUG - dispatch pc=56, inst=STORE_FAST(arg=2, lineno=440)
2025-07-23 17:15:40,933 - DEBUG - stack ['$phi56.0', '$phi56.1']
2025-07-23 17:15:40,934 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=441)
2025-07-23 17:15:40,934 - DEBUG - stack ['$phi56.0']
2025-07-23 17:15:40,934 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=441)
2025-07-23 17:15:40,934 - DEBUG - stack ['$phi56.0', '$c58.2']
2025-07-23 17:15:40,934 - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=441)
2025-07-23 17:15:40,934 - DEBUG - stack ['$phi56.0', '$c58.2', '$v60.3']
2025-07-23 17:15:40,934 - DEBUG - dispatch pc=82, inst=CALL(arg=0, lineno=441)
2025-07-23 17:15:40,935 - DEBUG - stack ['$phi56.0', '$c58.2', '$null$62.5', '$62load_attr.4']
2025-07-23 17:15:40,935 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=13, lineno=441)
2025-07-23 17:15:40,935 - DEBUG - stack ['$phi56.0', '$c58.2', '$82call.6']
2025-07-23 17:15:40,935 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=1, lineno=441)
2025-07-23 17:15:40,935 - DEBUG - stack ['$phi56.0', '$binop_iadd90.7']
2025-07-23 17:15:40,935 - DEBUG - dispatch pc=96, inst=JUMP_BACKWARD(arg=23, lineno=441)
2025-07-23 17:15:40,936 - DEBUG - stack ['$phi56.0']
2025-07-23 17:15:40,936 - DEBUG - end state. edges=[Edge(pc=52, stack=('$phi56.0',), blockstack=(), npush=0)]
2025-07-23 17:15:40,936 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=1)])
2025-07-23 17:15:40,936 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:40,937 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=1): {'$phi52.0'},
             State(pc_initial=56 nstack_initial=2): {'$phi56.1'},
             State(pc_initial=98 nstack_initial=2): set()})
2025-07-23 17:15:40,937 - DEBUG - defmap: {'$phi52.0': State(pc_initial=0 nstack_initial=0),
 '$phi56.1': State(pc_initial=52 nstack_initial=1),
 '$phi98.1': State(pc_initial=52 nstack_initial=1)}
2025-07-23 17:15:40,937 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi56.0', State(pc_initial=56 nstack_initial=2))},
             '$phi56.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-07-23 17:15:40,938 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=1))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-07-23 17:15:40,938 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-07-23 17:15:40,939 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi52.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi56.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))},
             '$phi98.0': {('$50get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.1': {('$52for_iter.2',
                           State(pc_initial=52 nstack_initial=1))}})
2025-07-23 17:15:40,940 - DEBUG - keep phismap: {'$phi52.0': {('$50get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi56.1': {('$52for_iter.2', State(pc_initial=52 nstack_initial=1))}}
2025-07-23 17:15:40,940 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi52.0': '$50get_iter.6'},
             State(pc_initial=52 nstack_initial=1): {'$phi56.1': '$52for_iter.2'}})
2025-07-23 17:15:40,940 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:40,941 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'item': '$10load_global.1', 'res': '$20load_attr.3'}), (40, {'res': '$a40.4'}), (42, {'func': '$20load_attr.3', 'args': ['$a40.4'], 'kw_names': None, 'res': '$42call.5'}), (50, {'value': '$42call.5', 'res': '$50get_iter.6'})), outgoing_phis={'$phi52.0': '$50get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$50get_iter.6',)})
2025-07-23 17:15:40,941 - DEBUG - block_infos State(pc_initial=52 nstack_initial=1):
AdaptBlockInfo(insts=((52, {'iterator': '$phi52.0', 'pair': '$52for_iter.1', 'indval': '$52for_iter.2', 'pred': '$52for_iter.3'}),), outgoing_phis={'$phi56.1': '$52for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi52.0', '$52for_iter.2'), 56: ('$phi52.0', '$52for_iter.2')})
2025-07-23 17:15:40,941 - DEBUG - block_infos State(pc_initial=56 nstack_initial=2):
AdaptBlockInfo(insts=((56, {'value': '$phi56.1'}), (58, {'res': '$c58.2'}), (60, {'res': '$v60.3'}), (62, {'item': '$v60.3', 'res': '$62load_attr.4'}), (82, {'func': '$62load_attr.4', 'args': [], 'kw_names': None, 'res': '$82call.6'}), (90, {'op': '+=', 'lhs': '$c58.2', 'rhs': '$82call.6', 'res': '$binop_iadd90.7'}), (94, {'value': '$binop_iadd90.7'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: ('$phi56.0',)})
2025-07-23 17:15:40,941 - DEBUG - block_infos State(pc_initial=98 nstack_initial=2):
AdaptBlockInfo(insts=((100, {'res': '$c100.2'}), (102, {'res': '$a102.3'}), (104, {'item': '$a102.3', 'res': '$104load_attr.4'}), (124, {'op': '/', 'lhs': '$c100.2', 'rhs': '$104load_attr.4', 'res': '$binop_truediv124.5'}), (128, {'retval': '$binop_truediv124.5', 'castval': '$128return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:40,942 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$20load_attr.3']
    $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_attr.3', '$42call.5', 'a']
    $50get_iter.6 = getiter(value=$42call.5) ['$42call.5', '$50get_iter.6']
    $phi52.0 = $50get_iter.6                 ['$50get_iter.6', '$phi52.0']
    jump 52                                  []
label 52:
    $52for_iter.1 = iternext(value=$phi52.0) ['$52for_iter.1', '$phi52.0']
    $52for_iter.2 = pair_first(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.2']
    $52for_iter.3 = pair_second(value=$52for_iter.1) ['$52for_iter.1', '$52for_iter.3']
    $phi56.1 = $52for_iter.2                 ['$52for_iter.2', '$phi56.1']
    branch $52for_iter.3, 56, 98             ['$52for_iter.3']
label 56:
    v = $phi56.1                             ['$phi56.1', 'v']
    $62load_attr.4 = getattr(value=v, attr=item) ['$62load_attr.4', 'v']
    $82call.6 = call $62load_attr.4(func=$62load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_attr.4', '$82call.6']
    $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined) ['$82call.6', '$binop_iadd90.7', 'c']
    c = $binop_iadd90.7                      ['$binop_iadd90.7', 'c']
    jump 52                                  []
label 98:
    $104load_attr.4 = getattr(value=a, attr=size) ['$104load_attr.4', 'a']
    $binop_truediv124.5 = c / $104load_attr.4 ['$104load_attr.4', '$binop_truediv124.5', 'c']
    $128return_value.6 = cast(value=$binop_truediv124.5) ['$128return_value.6', '$binop_truediv124.5']
    return $128return_value.6                ['$128return_value.6']

2025-07-23 17:15:40,968 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:40,968 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D51790>
2025-07-23 17:15:40,968 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:40,969 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-07-23 17:15:40,969 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:40,969 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-07-23 17:15:40,969 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,969 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-07-23 17:15:40,970 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-07-23 17:15:40,970 - DEBUG - on stmt: jump 52
2025-07-23 17:15:40,970 - DEBUG - ==== SSA block analysis pass on 52
2025-07-23 17:15:40,970 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D51790>
2025-07-23 17:15:40,971 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-07-23 17:15:40,971 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-07-23 17:15:40,971 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-07-23 17:15:40,971 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-07-23 17:15:40,972 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-07-23 17:15:40,972 - DEBUG - ==== SSA block analysis pass on 56
2025-07-23 17:15:40,972 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D51790>
2025-07-23 17:15:40,972 - DEBUG - on stmt: v = $phi56.1
2025-07-23 17:15:40,972 - DEBUG - on stmt: $62load_attr.4 = getattr(value=v, attr=item)
2025-07-23 17:15:40,973 - DEBUG - on stmt: $82call.6 = call $62load_attr.4(func=$62load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,973 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:40,973 - DEBUG - on stmt: c = $binop_iadd90.7
2025-07-23 17:15:40,973 - DEBUG - on stmt: jump 52
2025-07-23 17:15:40,973 - DEBUG - ==== SSA block analysis pass on 98
2025-07-23 17:15:40,974 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7D51790>
2025-07-23 17:15:40,974 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-07-23 17:15:40,974 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-07-23 17:15:40,974 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-07-23 17:15:40,974 - DEBUG - on stmt: return $128return_value.6
2025-07-23 17:15:40,975 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104load_attr.4': [(<numba.core.ir.Assign object at 0x000001F6D7DD8980>,
                                  98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x000001F6D7D50650>,
                                   0)],
             '$128return_value.6': [(<numba.core.ir.Assign object at 0x000001F6D7DD8BF0>,
                                     98)],
             '$20load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6D7D50860>,
                                 0)],
             '$42call.5': [(<numba.core.ir.Assign object at 0x000001F6D7D50140>,
                            0)],
             '$50get_iter.6': [(<numba.core.ir.Assign object at 0x000001F6D7D510A0>,
                                0)],
             '$52for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6D7D511F0>,
                                52)],
             '$52for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6D7D51490>,
                                52)],
             '$52for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6D7D51280>,
                                52)],
             '$62load_attr.4': [(<numba.core.ir.Assign object at 0x000001F6D7DD82C0>,
                                 56)],
             '$82call.6': [(<numba.core.ir.Assign object at 0x000001F6D7DD8470>,
                            56)],
             '$binop_iadd90.7': [(<numba.core.ir.Assign object at 0x000001F6D7DD85C0>,
                                  56)],
             '$binop_truediv124.5': [(<numba.core.ir.Assign object at 0x000001F6D7DD8AD0>,
                                      98)],
             '$phi52.0': [(<numba.core.ir.Assign object at 0x000001F6D7D50410>,
                           0)],
             '$phi56.1': [(<numba.core.ir.Assign object at 0x000001F6D7D513A0>,
                           52)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6D7D51CA0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x000001F6D7D51F40>, 0),
                   (<numba.core.ir.Assign object at 0x000001F6D7DD8620>, 56)],
             'v': [(<numba.core.ir.Assign object at 0x000001F6D7D512B0>, 56)]})
2025-07-23 17:15:40,976 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6D7CE9010>
2025-07-23 17:15:40,976 - DEBUG - Fix SSA violator on var c
2025-07-23 17:15:40,976 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:40,977 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6D7CE8F50>
2025-07-23 17:15:40,977 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:40,977 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-07-23 17:15:40,977 - DEBUG - first assign: c
2025-07-23 17:15:40,977 - DEBUG - replaced with: c = freevar(acc_init: 0.0)
2025-07-23 17:15:40,977 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:40,978 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-07-23 17:15:40,978 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,978 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-07-23 17:15:40,978 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-07-23 17:15:40,978 - DEBUG - on stmt: jump 52
2025-07-23 17:15:40,978 - DEBUG - ==== SSA block rewrite pass on 52
2025-07-23 17:15:40,978 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6D7CE8F50>
2025-07-23 17:15:40,978 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-07-23 17:15:40,979 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-07-23 17:15:40,979 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-07-23 17:15:40,979 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-07-23 17:15:40,979 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-07-23 17:15:40,979 - DEBUG - ==== SSA block rewrite pass on 56
2025-07-23 17:15:40,979 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6D7CE8F50>
2025-07-23 17:15:40,980 - DEBUG - on stmt: v = $phi56.1
2025-07-23 17:15:40,980 - DEBUG - on stmt: $62load_attr.4 = getattr(value=v, attr=item)
2025-07-23 17:15:40,980 - DEBUG - on stmt: $82call.6 = call $62load_attr.4(func=$62load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:40,980 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:40,980 - DEBUG - on stmt: c = $binop_iadd90.7
2025-07-23 17:15:40,981 - DEBUG - replaced with: c.1 = $binop_iadd90.7
2025-07-23 17:15:40,981 - DEBUG - on stmt: jump 52
2025-07-23 17:15:40,981 - DEBUG - ==== SSA block rewrite pass on 98
2025-07-23 17:15:40,981 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6D7CE8F50>
2025-07-23 17:15:41,131 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-07-23 17:15:41,132 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-07-23 17:15:41,132 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-07-23 17:15:41,133 - DEBUG - on stmt: return $128return_value.6
2025-07-23 17:15:41,133 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F6D7D50C50>],
             56: [<numba.core.ir.Assign object at 0x000001F6D7D50A70>]})
2025-07-23 17:15:41,133 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:41,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6D7CE8F50>
2025-07-23 17:15:41,135 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:41,135 - DEBUG - on stmt: c = freevar(acc_init: 0.0)
2025-07-23 17:15:41,136 - DEBUG - on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:41,136 - DEBUG - on stmt: $20load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
2025-07-23 17:15:41,136 - DEBUG - on stmt: $42call.5 = call $20load_attr.3(a, func=$20load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:41,136 - DEBUG - on stmt: $50get_iter.6 = getiter(value=$42call.5)
2025-07-23 17:15:41,137 - DEBUG - on stmt: $phi52.0 = $50get_iter.6
2025-07-23 17:15:41,137 - DEBUG - on stmt: jump 52
2025-07-23 17:15:41,137 - DEBUG - ==== SSA block rewrite pass on 52
2025-07-23 17:15:41,138 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6D7CE8F50>
2025-07-23 17:15:41,138 - DEBUG - on stmt: $52for_iter.1 = iternext(value=$phi52.0)
2025-07-23 17:15:41,138 - DEBUG - on stmt: $52for_iter.2 = pair_first(value=$52for_iter.1)
2025-07-23 17:15:41,138 - DEBUG - on stmt: $52for_iter.3 = pair_second(value=$52for_iter.1)
2025-07-23 17:15:41,138 - DEBUG - on stmt: $phi56.1 = $52for_iter.2
2025-07-23 17:15:41,138 - DEBUG - on stmt: branch $52for_iter.3, 56, 98
2025-07-23 17:15:41,138 - DEBUG - ==== SSA block rewrite pass on 56
2025-07-23 17:15:41,139 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6D7CE8F50>
2025-07-23 17:15:41,139 - DEBUG - on stmt: v = $phi56.1
2025-07-23 17:15:41,139 - DEBUG - on stmt: $62load_attr.4 = getattr(value=v, attr=item)
2025-07-23 17:15:41,139 - DEBUG - on stmt: $82call.6 = call $62load_attr.4(func=$62load_attr.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:41,139 - DEBUG - on stmt: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:41,139 - DEBUG - find_def var='c' stmt=$binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:41,140 - DEBUG - find_def_from_top label 56
2025-07-23 17:15:41,140 - DEBUG - idom 52 from label 56
2025-07-23 17:15:41,140 - DEBUG - find_def_from_bottom label 52
2025-07-23 17:15:41,140 - DEBUG - find_def_from_top label 52
2025-07-23 17:15:41,141 - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 52
2025-07-23 17:15:41,141 - DEBUG - find_def_from_bottom label 0
2025-07-23 17:15:41,141 - DEBUG - incoming_def c = freevar(acc_init: 0.0)
2025-07-23 17:15:41,141 - DEBUG - find_def_from_bottom label 56
2025-07-23 17:15:41,141 - DEBUG - incoming_def c.1 = $binop_iadd90.7
2025-07-23 17:15:41,142 - DEBUG - replaced with: $binop_iadd90.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$82call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:41,142 - DEBUG - on stmt: c.1 = $binop_iadd90.7
2025-07-23 17:15:41,142 - DEBUG - on stmt: jump 52
2025-07-23 17:15:41,142 - DEBUG - ==== SSA block rewrite pass on 98
2025-07-23 17:15:41,142 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6D7CE8F50>
2025-07-23 17:15:41,142 - DEBUG - on stmt: $104load_attr.4 = getattr(value=a, attr=size)
2025-07-23 17:15:41,142 - DEBUG - on stmt: $binop_truediv124.5 = c / $104load_attr.4
2025-07-23 17:15:41,143 - DEBUG - find_def var='c' stmt=$binop_truediv124.5 = c / $104load_attr.4
2025-07-23 17:15:41,143 - DEBUG - find_def_from_top label 98
2025-07-23 17:15:41,143 - DEBUG - idom 52 from label 98
2025-07-23 17:15:41,143 - DEBUG - find_def_from_bottom label 52
2025-07-23 17:15:41,143 - DEBUG - replaced with: $binop_truediv124.5 = c.2 / $104load_attr.4
2025-07-23 17:15:41,143 - DEBUG - on stmt: $128return_value.6 = cast(value=$binop_truediv124.5)
2025-07-23 17:15:41,143 - DEBUG - on stmt: return $128return_value.6
2025-07-23 17:15:41,428 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3601)
           2	RESUME(arg=0, lineno=3601)
           4	LOAD_GLOBAL(arg=1, lineno=3602)
          14	LOAD_FAST(arg=0, lineno=3602)
          16	CALL(arg=1, lineno=3602)
          24	STORE_FAST(arg=2, lineno=3602)
          26	LOAD_GLOBAL(arg=3, lineno=3603)
          36	LOAD_FAST(arg=2, lineno=3603)
          38	CALL(arg=1, lineno=3603)
          46	GET_ITER(arg=None, lineno=3603)
>         48	FOR_ITER(arg=39, lineno=3603)
          52	STORE_FAST(arg=3, lineno=3603)
          54	LOAD_FAST(arg=0, lineno=3604)
          56	LOAD_FAST(arg=3, lineno=3604)
          58	BINARY_SUBSCR(arg=None, lineno=3604)
          62	LOAD_FAST(arg=1, lineno=3604)
          64	LOAD_GLOBAL(arg=1, lineno=3604)
          74	LOAD_FAST(arg=1, lineno=3604)
          76	CALL(arg=1, lineno=3604)
          84	LOAD_FAST(arg=2, lineno=3604)
          86	BINARY_OP(arg=10, lineno=3604)
          90	LOAD_FAST(arg=3, lineno=3604)
          92	BINARY_OP(arg=0, lineno=3604)
          96	BINARY_SUBSCR(arg=None, lineno=3604)
         100	COMPARE_OP(arg=55, lineno=3604)
         104	POP_JUMP_IF_TRUE(arg=1, lineno=3604)
         106	JUMP_BACKWARD(arg=30, lineno=3604)
>        108	LOAD_GLOBAL(arg=5, lineno=3605)
         118	LOAD_CONST(arg=1, lineno=3605)
         120	CALL(arg=1, lineno=3605)
         128	RAISE_VARARGS(arg=1, lineno=3605)
>        130	END_FOR(arg=None, lineno=3603)
         132	RETURN_CONST(arg=0, lineno=3603)
2025-07-23 17:15:41,428 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:41,428 - DEBUG - stack: []
2025-07-23 17:15:41,428 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:41,428 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3601)
2025-07-23 17:15:41,429 - DEBUG - stack []
2025-07-23 17:15:41,429 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=3601)
2025-07-23 17:15:41,430 - DEBUG - stack []
2025-07-23 17:15:41,430 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3602)
2025-07-23 17:15:41,430 - DEBUG - stack []
2025-07-23 17:15:41,430 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=3602)
2025-07-23 17:15:41,431 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:41,431 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=3602)
2025-07-23 17:15:41,431 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$shape14.2']
2025-07-23 17:15:41,431 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=3602)
2025-07-23 17:15:41,431 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:41,432 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=3603)
2025-07-23 17:15:41,432 - DEBUG - stack []
2025-07-23 17:15:41,432 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3603)
2025-07-23 17:15:41,432 - DEBUG - stack ['$null$26.5', '$26load_global.4']
2025-07-23 17:15:41,433 - DEBUG - dispatch pc=38, inst=CALL(arg=1, lineno=3603)
2025-07-23 17:15:41,433 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$n36.6']
2025-07-23 17:15:41,433 - DEBUG - dispatch pc=46, inst=GET_ITER(arg=None, lineno=3603)
2025-07-23 17:15:41,433 - DEBUG - stack ['$38call.7']
2025-07-23 17:15:41,433 - DEBUG - end state. edges=[Edge(pc=48, stack=('$46get_iter.8',), blockstack=(), npush=0)]
2025-07-23 17:15:41,434 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2025-07-23 17:15:41,434 - DEBUG - stack: ['$phi48.0']
2025-07-23 17:15:41,434 - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=1)
2025-07-23 17:15:41,434 - DEBUG - dispatch pc=48, inst=FOR_ITER(arg=39, lineno=3603)
2025-07-23 17:15:41,434 - DEBUG - stack ['$phi48.0']
2025-07-23 17:15:41,435 - DEBUG - end state. edges=[Edge(pc=130, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0), Edge(pc=52, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:41,435 - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=2), State(pc_initial=52 nstack_initial=2)])
2025-07-23 17:15:41,435 - DEBUG - stack: ['$phi130.0', '$phi130.1']
2025-07-23 17:15:41,435 - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=2)
2025-07-23 17:15:41,436 - DEBUG - dispatch pc=130, inst=END_FOR(arg=None, lineno=3603)
2025-07-23 17:15:41,436 - DEBUG - stack ['$phi130.0', '$phi130.1']
2025-07-23 17:15:41,436 - DEBUG - dispatch pc=132, inst=RETURN_CONST(arg=0, lineno=3603)
2025-07-23 17:15:41,436 - DEBUG - stack []
2025-07-23 17:15:41,437 - DEBUG - end state. edges=[]
2025-07-23 17:15:41,437 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=2)])
2025-07-23 17:15:41,437 - DEBUG - stack: ['$phi52.0', '$phi52.1']
2025-07-23 17:15:41,437 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=2)
2025-07-23 17:15:41,437 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=3, lineno=3603)
2025-07-23 17:15:41,438 - DEBUG - stack ['$phi52.0', '$phi52.1']
2025-07-23 17:15:41,438 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=3604)
2025-07-23 17:15:41,438 - DEBUG - stack ['$phi52.0']
2025-07-23 17:15:41,438 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=3604)
2025-07-23 17:15:41,438 - DEBUG - stack ['$phi52.0', '$shape54.2']
2025-07-23 17:15:41,438 - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=3604)
2025-07-23 17:15:41,438 - DEBUG - stack ['$phi52.0', '$shape54.2', '$i56.3']
2025-07-23 17:15:41,438 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=3604)
2025-07-23 17:15:41,439 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4']
2025-07-23 17:15:41,439 - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=1, lineno=3604)
2025-07-23 17:15:41,440 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5']
2025-07-23 17:15:41,440 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=3604)
2025-07-23 17:15:41,440 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6']
2025-07-23 17:15:41,440 - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=3604)
2025-07-23 17:15:41,441 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$null$64.7', '$64load_global.6', '$main_shape74.8']
2025-07-23 17:15:41,441 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=3604)
2025-07-23 17:15:41,441 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9']
2025-07-23 17:15:41,441 - DEBUG - dispatch pc=86, inst=BINARY_OP(arg=10, lineno=3604)
2025-07-23 17:15:41,442 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$76call.9', '$n84.10']
2025-07-23 17:15:41,442 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=3, lineno=3604)
2025-07-23 17:15:41,442 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11']
2025-07-23 17:15:41,442 - DEBUG - dispatch pc=92, inst=BINARY_OP(arg=0, lineno=3604)
2025-07-23 17:15:41,442 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_sub86.11', '$i90.12']
2025-07-23 17:15:41,443 - DEBUG - dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=3604)
2025-07-23 17:15:41,443 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$main_shape62.5', '$binop_add92.13']
2025-07-23 17:15:41,443 - DEBUG - dispatch pc=100, inst=COMPARE_OP(arg=55, lineno=3604)
2025-07-23 17:15:41,443 - DEBUG - stack ['$phi52.0', '$58binary_subscr.4', '$96binary_subscr.14']
2025-07-23 17:15:41,443 - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_TRUE(arg=1, lineno=3604)
2025-07-23 17:15:41,444 - DEBUG - stack ['$phi52.0', '$100compare_op.15']
2025-07-23 17:15:41,444 - DEBUG - end state. edges=[Edge(pc=106, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=108, stack=('$phi52.0',), blockstack=(), npush=0)]
2025-07-23 17:15:41,444 - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=1), State(pc_initial=108 nstack_initial=1)])
2025-07-23 17:15:41,444 - DEBUG - stack: ['$phi106.0']
2025-07-23 17:15:41,444 - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=1)
2025-07-23 17:15:41,445 - DEBUG - dispatch pc=106, inst=JUMP_BACKWARD(arg=30, lineno=3604)
2025-07-23 17:15:41,445 - DEBUG - stack ['$phi106.0']
2025-07-23 17:15:41,445 - DEBUG - end state. edges=[Edge(pc=48, stack=('$phi106.0',), blockstack=(), npush=0)]
2025-07-23 17:15:41,445 - DEBUG - pending: deque([State(pc_initial=108 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
2025-07-23 17:15:41,445 - DEBUG - stack: ['$phi108.0']
2025-07-23 17:15:41,446 - DEBUG - state.pc_initial: State(pc_initial=108 nstack_initial=1)
2025-07-23 17:15:41,446 - DEBUG - dispatch pc=108, inst=LOAD_GLOBAL(arg=5, lineno=3605)
2025-07-23 17:15:41,446 - DEBUG - stack ['$phi108.0']
2025-07-23 17:15:41,446 - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=3605)
2025-07-23 17:15:41,446 - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1']
2025-07-23 17:15:41,447 - DEBUG - dispatch pc=120, inst=CALL(arg=1, lineno=3605)
2025-07-23 17:15:41,447 - DEBUG - stack ['$phi108.0', '$null$108.2', '$108load_global.1', '$const118.3.1']
2025-07-23 17:15:41,447 - DEBUG - dispatch pc=128, inst=RAISE_VARARGS(arg=1, lineno=3605)
2025-07-23 17:15:41,447 - DEBUG - stack ['$phi108.0', '$120call.4']
2025-07-23 17:15:41,447 - DEBUG - end state. edges=[]
2025-07-23 17:15:41,447 - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1)])
2025-07-23 17:15:41,447 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:41,449 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=106 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=1): set(),
             State(pc_initial=130 nstack_initial=2): set()})
2025-07-23 17:15:41,449 - DEBUG - defmap: {'$phi130.1': State(pc_initial=48 nstack_initial=1),
 '$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=48 nstack_initial=1)}
2025-07-23 17:15:41,449 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi108.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi130.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi106.0',
                           State(pc_initial=106 nstack_initial=1))},
             '$phi52.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-07-23 17:15:41,450 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi108.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi106.0',
                            State(pc_initial=106 nstack_initial=1))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-07-23 17:15:41,450 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-07-23 17:15:41,451 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi106.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi108.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.0': {('$46get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi130.1': {('$48for_iter.2',
                            State(pc_initial=48 nstack_initial=1))},
             '$phi48.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$46get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
2025-07-23 17:15:41,452 - DEBUG - keep phismap: {'$phi48.0': {('$46get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
2025-07-23 17:15:41,452 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.8'},
             State(pc_initial=48 nstack_initial=1): {'$phi52.1': '$48for_iter.2'}})
2025-07-23 17:15:41,453 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:41,453 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$shape14.2'}), (16, {'func': '$4load_global.0', 'args': ['$shape14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'idx': 1, 'res': '$26load_global.4'}), (36, {'res': '$n36.6'}), (38, {'func': '$26load_global.4', 'args': ['$n36.6'], 'kw_names': None, 'res': '$38call.7'}), (46, {'value': '$38call.7', 'res': '$46get_iter.8'})), outgoing_phis={'$phi48.0': '$46get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.8',)})
2025-07-23 17:15:41,453 - DEBUG - block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi52.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ('$phi48.0', '$48for_iter.2'), 52: ('$phi48.0', '$48for_iter.2')})
2025-07-23 17:15:41,453 - DEBUG - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$shape54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$shape54.2', 'res': '$58binary_subscr.4'}), (62, {'res': '$main_shape62.5'}), (64, {'idx': 0, 'res': '$64load_global.6'}), (74, {'res': '$main_shape74.8'}), (76, {'func': '$64load_global.6', 'args': ['$main_shape74.8'], 'kw_names': None, 'res': '$76call.9'}), (84, {'res': '$n84.10'}), (86, {'op': '-', 'lhs': '$76call.9', 'rhs': '$n84.10', 'res': '$binop_sub86.11'}), (90, {'res': '$i90.12'}), (92, {'op': '+', 'lhs': '$binop_sub86.11', 'rhs': '$i90.12', 'res': '$binop_add92.13'}), (96, {'index': '$binop_add92.13', 'target': '$main_shape62.5', 'res': '$96binary_subscr.14'}), (100, {'lhs': '$58binary_subscr.4', 'rhs': '$96binary_subscr.14', 'res': '$100compare_op.15'}), (104, {'pred': '$100compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ('$phi52.0',), 108: ('$phi52.0',)})
2025-07-23 17:15:41,453 - DEBUG - block_infos State(pc_initial=106 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi106.0',)})
2025-07-23 17:15:41,454 - DEBUG - block_infos State(pc_initial=108 nstack_initial=1):
AdaptBlockInfo(insts=((108, {'idx': 2, 'res': '$108load_global.1'}), (118, {'res': '$const118.3.1'}), (120, {'func': '$108load_global.1', 'args': ['$const118.3.1'], 'kw_names': None, 'res': '$120call.4'}), (128, {'exc': '$120call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:41,454 - DEBUG - block_infos State(pc_initial=130 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'retval': '$const132.2', 'castval': '$132return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:41,455 - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $26load_global.4 = global(range: <class 'range'>) ['$26load_global.4']
    $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.4', '$38call.7', 'n']
    $46get_iter.8 = getiter(value=$38call.7) ['$38call.7', '$46get_iter.8']
    $phi48.0 = $46get_iter.8                 ['$46get_iter.8', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi52.1 = $48for_iter.2                 ['$48for_iter.2', '$phi52.1']
    branch $48for_iter.3, 52, 130            ['$48for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'i', 'shape']
    $64load_global.6 = global(len: <built-in function len>) ['$64load_global.6']
    $76call.9 = call $64load_global.6(main_shape, func=$64load_global.6, args=[Var(main_shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.6', '$76call.9', 'main_shape']
    $binop_sub86.11 = $76call.9 - n          ['$76call.9', '$binop_sub86.11', 'n']
    $binop_add92.13 = $binop_sub86.11 + i    ['$binop_add92.13', '$binop_sub86.11', 'i']
    $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>) ['$96binary_subscr.14', '$binop_add92.13', 'main_shape']
    $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14 ['$100compare_op.15', '$58binary_subscr.4', '$96binary_subscr.14']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.15', '$104pred', 'bool104']
    branch $104pred, 108, 106                ['$104pred']
label 106:
    jump 48                                  []
label 108:
    $108load_global.1 = global(ValueError: <class 'ValueError'>) ['$108load_global.1']
    $const118.3.1 = const(str, nditer(): operands could not be broadcast together) ['$const118.3.1']
    $120call.4 = call $108load_global.1($const118.3.1, func=$108load_global.1, args=[Var($const118.3.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_global.1', '$120call.4', '$const118.3.1']
    raise $120call.4                         ['$120call.4']
label 130:
    $const132.2 = const(NoneType, None)      ['$const132.2']
    $132return_const.3 = cast(value=$const132.2) ['$132return_const.3', '$const132.2']
    return $132return_const.3                ['$132return_const.3']

2025-07-23 17:15:41,539 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:41,539 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,539 - DEBUG - on stmt: shape = arg(0, name=shape)
2025-07-23 17:15:41,540 - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
2025-07-23 17:15:41,540 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:41,540 - DEBUG - on stmt: n = const(int, 1)
2025-07-23 17:15:41,540 - DEBUG - on stmt: $26load_global.4 = global(range: <class 'range'>)
2025-07-23 17:15:41,541 - DEBUG - on stmt: $38call.7 = call $26load_global.4(n, func=$26load_global.4, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:41,541 - DEBUG - on stmt: $46get_iter.8 = getiter(value=$38call.7)
2025-07-23 17:15:41,541 - DEBUG - on stmt: $phi48.0 = $46get_iter.8
2025-07-23 17:15:41,541 - DEBUG - on stmt: jump 48
2025-07-23 17:15:41,541 - DEBUG - ==== SSA block analysis pass on 48
2025-07-23 17:15:41,542 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,542 - DEBUG - on stmt: $48for_iter.1 = iternext(value=$phi48.0)
2025-07-23 17:15:41,542 - DEBUG - on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
2025-07-23 17:15:41,542 - DEBUG - on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
2025-07-23 17:15:41,542 - DEBUG - on stmt: $phi52.1 = $48for_iter.2
2025-07-23 17:15:41,543 - DEBUG - on stmt: branch $48for_iter.3, 52, 130
2025-07-23 17:15:41,543 - DEBUG - ==== SSA block analysis pass on 52
2025-07-23 17:15:41,543 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,543 - DEBUG - on stmt: i = $phi52.1
2025-07-23 17:15:41,543 - DEBUG - on stmt: $58binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2025-07-23 17:15:41,543 - DEBUG - on stmt: $64load_global.6 = global(len: <built-in function len>)
2025-07-23 17:15:41,544 - DEBUG - on stmt: $76call.9 = const(int, 1)
2025-07-23 17:15:41,544 - DEBUG - on stmt: $binop_sub86.11 = $76call.9 - n
2025-07-23 17:15:41,544 - DEBUG - on stmt: $binop_add92.13 = $binop_sub86.11 + i
2025-07-23 17:15:41,544 - DEBUG - on stmt: $96binary_subscr.14 = getitem(value=main_shape, index=$binop_add92.13, fn=<built-in function getitem>)
2025-07-23 17:15:41,544 - DEBUG - on stmt: $100compare_op.15 = $58binary_subscr.4 != $96binary_subscr.14
2025-07-23 17:15:41,545 - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
2025-07-23 17:15:41,545 - DEBUG - on stmt: $104pred = call bool104($100compare_op.15, func=bool104, args=(Var($100compare_op.15, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:41,545 - DEBUG - on stmt: branch $104pred, 108, 106
2025-07-23 17:15:41,545 - DEBUG - ==== SSA block analysis pass on 106
2025-07-23 17:15:41,545 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,545 - DEBUG - on stmt: jump 48
2025-07-23 17:15:41,545 - DEBUG - ==== SSA block analysis pass on 108
2025-07-23 17:15:41,546 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,546 - DEBUG - on stmt: $108load_global.1 = global(ValueError: <class 'ValueError'>)
2025-07-23 17:15:41,546 - DEBUG - on stmt: $const118.3.1 = const(str, nditer(): operands could not be broadcast together)
2025-07-23 17:15:41,546 - DEBUG - on stmt: $120call.4 = call $108load_global.1($const118.3.1, func=$108load_global.1, args=[Var($const118.3.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:41,546 - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2025-07-23 17:15:41,547 - DEBUG - ==== SSA block analysis pass on 130
2025-07-23 17:15:41,547 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7E5BC50>
2025-07-23 17:15:41,547 - DEBUG - on stmt: $const132.2 = const(NoneType, None)
2025-07-23 17:15:41,547 - DEBUG - on stmt: $132return_const.3 = cast(value=$const132.2)
2025-07-23 17:15:41,547 - DEBUG - on stmt: return $132return_const.3
2025-07-23 17:15:41,547 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100compare_op.15': [(<numba.core.ir.Assign object at 0x000001F6D7E72900>,
                                    52)],
             '$104pred': [(<numba.core.ir.Assign object at 0x000001F6D7E72B40>,
                           52)],
             '$108load_global.1': [(<numba.core.ir.Assign object at 0x000001F6D7E72C30>,
                                    108)],
             '$120call.4': [(<numba.core.ir.Assign object at 0x000001F6D7E72F30>,
                             108)],
             '$132return_const.3': [(<numba.core.ir.Assign object at 0x000001F6D7E73230>,
                                     130)],
             '$26load_global.4': [(<numba.core.ir.Assign object at 0x000001F6D7E70FE0>,
                                   0)],
             '$38call.7': [(<numba.core.ir.Assign object at 0x000001F6D7E71280>,
                            0)],
             '$46get_iter.8': [(<numba.core.ir.Assign object at 0x000001F6D7E713A0>,
                                0)],
             '$48for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6D7E71580>,
                                48)],
             '$48for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6D7E716A0>,
                                48)],
             '$48for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6D7E717C0>,
                                48)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6D7E70B60>,
                                  0)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x000001F6D7E71D60>,
                                     52)],
             '$64load_global.6': [(<numba.core.ir.Assign object at 0x000001F6D7E71F40>,
                                   52)],
             '$76call.9': [(<numba.core.ir.Assign object at 0x000001F6D7E721E0>,
                            52)],
             '$96binary_subscr.14': [(<numba.core.ir.Assign object at 0x000001F6D7E727B0>,
                                      52)],
             '$binop_add92.13': [(<numba.core.ir.Assign object at 0x000001F6D7E72660>,
                                  52)],
             '$binop_sub86.11': [(<numba.core.ir.Assign object at 0x000001F6D7E72420>,
                                  52)],
             '$const118.3.1': [(<numba.core.ir.Assign object at 0x000001F6D7E72D80>,
                                108)],
             '$const132.2': [(<numba.core.ir.Assign object at 0x000001F6D7E73110>,
                              130)],
             '$phi48.0': [(<numba.core.ir.Assign object at 0x000001F6D7E70EC0>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x000001F6D7E71850>,
                           48)],
             'bool104': [(<numba.core.ir.Assign object at 0x000001F6D7E72A20>,
                          52)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6D7E71A00>, 52)],
             'main_shape': [(<numba.core.ir.Assign object at 0x000001F6D7E70A10>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x000001F6D7E70E00>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x000001F6D7E709B0>,
                        0)]})
2025-07-23 17:15:41,549 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6D7E5BC50>
2025-07-23 17:15:44,866 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=5)
           2	RESUME(arg=0, lineno=5)
           4	LOAD_FAST(arg=0, lineno=8)
           6	RETURN_VALUE(arg=None, lineno=8)
2025-07-23 17:15:44,866 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:44,866 - DEBUG - stack: []
2025-07-23 17:15:44,866 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:44,866 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=5)
2025-07-23 17:15:44,867 - DEBUG - stack []
2025-07-23 17:15:44,867 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=5)
2025-07-23 17:15:44,867 - DEBUG - stack []
2025-07-23 17:15:44,867 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=8)
2025-07-23 17:15:44,868 - DEBUG - stack []
2025-07-23 17:15:44,868 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=8)
2025-07-23 17:15:44,868 - DEBUG - stack ['$x4.0']
2025-07-23 17:15:44,868 - DEBUG - end state. edges=[]
2025-07-23 17:15:44,868 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:44,869 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:44,869 - DEBUG - defmap: {}
2025-07-23 17:15:44,869 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:44,869 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:44,869 - DEBUG - keep phismap: {}
2025-07-23 17:15:44,870 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:44,870 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:44,870 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'retval': '$x4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:44,870 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $6return_value.1 = cast(value=x)         ['$6return_value.1', 'x']
    return $6return_value.1                  ['$6return_value.1']

2025-07-23 17:15:44,872 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:44,872 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6D7DDA1E0>
2025-07-23 17:15:44,872 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-23 17:15:44,872 - DEBUG - on stmt: $6return_value.1 = cast(value=x)
2025-07-23 17:15:44,873 - DEBUG - on stmt: return $6return_value.1
2025-07-23 17:15:44,873 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x000001F6DA43CDD0>,
                                   0)],
             'x': [(<numba.core.ir.Assign object at 0x000001F6DA43CB60>, 0)]})
2025-07-23 17:15:44,873 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6D7DDA1E0>
2025-07-23 17:15:45,069 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1650)
           2	RESUME(arg=0, lineno=1650)
           4	LOAD_GLOBAL(arg=1, lineno=1651)
          14	LOAD_FAST(arg=0, lineno=1651)
          16	CALL(arg=1, lineno=1651)
          24	LOAD_CONST(arg=1, lineno=1651)
          26	COMPARE_OP(arg=40, lineno=1651)
          30	POP_JUMP_IF_FALSE(arg=10, lineno=1651)
          32	LOAD_CONST(arg=2, lineno=1652)
          34	LOAD_FAST(arg=0, lineno=1652)
          36	LOAD_CONST(arg=3, lineno=1652)
          38	BINARY_SUBSCR(arg=None, lineno=1652)
          42	FORMAT_VALUE(arg=0, lineno=1652)
          44	LOAD_CONST(arg=4, lineno=1652)
          46	BUILD_STRING(arg=3, lineno=1652)
          48	STORE_FAST(arg=2, lineno=1652)
          50	JUMP_FORWARD(arg=44, lineno=1652)
>         52	LOAD_CONST(arg=2, lineno=1654)
          54	LOAD_CONST(arg=5, lineno=1654)
          56	LOAD_ATTR(arg=3, lineno=1654)
          76	LOAD_FAST(arg=0, lineno=1654)
          78	GET_ITER(arg=None, lineno=1654)
          80	LOAD_FAST_AND_CLEAR(arg=3, lineno=1654)
          82	SWAP(arg=2, lineno=1654)
          84	BUILD_LIST(arg=0, lineno=1654)
          86	SWAP(arg=2, lineno=1654)
>         88	FOR_ITER(arg=13, lineno=1654)
          92	STORE_FAST(arg=3, lineno=1654)
          94	LOAD_GLOBAL(arg=5, lineno=1654)
         104	LOAD_FAST(arg=3, lineno=1654)
         106	CALL(arg=1, lineno=1654)
         114	LIST_APPEND(arg=2, lineno=1654)
         116	JUMP_BACKWARD(arg=15, lineno=1654)
>        118	END_FOR(arg=None, lineno=1654)
         120	SWAP(arg=2, lineno=1654)
         122	STORE_FAST(arg=3, lineno=1654)
         124	CALL(arg=1, lineno=1654)
         132	FORMAT_VALUE(arg=0, lineno=1654)
         134	LOAD_CONST(arg=6, lineno=1654)
         136	BUILD_STRING(arg=3, lineno=1654)
         138	STORE_FAST(arg=2, lineno=1654)
>        140	LOAD_GLOBAL(arg=1, lineno=1655)
         150	LOAD_FAST(arg=1, lineno=1655)
         152	CALL(arg=1, lineno=1655)
         160	LOAD_CONST(arg=1, lineno=1655)
         162	COMPARE_OP(arg=40, lineno=1655)
         166	POP_JUMP_IF_FALSE(arg=10, lineno=1655)
         168	LOAD_CONST(arg=2, lineno=1656)
         170	LOAD_FAST(arg=1, lineno=1656)
         172	LOAD_CONST(arg=3, lineno=1656)
         174	BINARY_SUBSCR(arg=None, lineno=1656)
         178	FORMAT_VALUE(arg=0, lineno=1656)
         180	LOAD_CONST(arg=4, lineno=1656)
         182	BUILD_STRING(arg=3, lineno=1656)
         184	STORE_FAST(arg=4, lineno=1656)
         186	JUMP_FORWARD(arg=44, lineno=1656)
>        188	LOAD_CONST(arg=2, lineno=1658)
         190	LOAD_CONST(arg=5, lineno=1658)
         192	LOAD_ATTR(arg=3, lineno=1658)
         212	LOAD_FAST(arg=1, lineno=1658)
         214	GET_ITER(arg=None, lineno=1658)
         216	LOAD_FAST_AND_CLEAR(arg=3, lineno=1658)
         218	SWAP(arg=2, lineno=1658)
         220	BUILD_LIST(arg=0, lineno=1658)
         222	SWAP(arg=2, lineno=1658)
>        224	FOR_ITER(arg=13, lineno=1658)
         228	STORE_FAST(arg=3, lineno=1658)
         230	LOAD_GLOBAL(arg=5, lineno=1658)
         240	LOAD_FAST(arg=3, lineno=1658)
         242	CALL(arg=1, lineno=1658)
         250	LIST_APPEND(arg=2, lineno=1658)
         252	JUMP_BACKWARD(arg=15, lineno=1658)
>        254	END_FOR(arg=None, lineno=1658)
         256	SWAP(arg=2, lineno=1658)
         258	STORE_FAST(arg=3, lineno=1658)
         260	CALL(arg=1, lineno=1658)
         268	FORMAT_VALUE(arg=0, lineno=1658)
         270	LOAD_CONST(arg=6, lineno=1658)
         272	BUILD_STRING(arg=3, lineno=1658)
         274	STORE_FAST(arg=4, lineno=1658)
>        276	LOAD_CONST(arg=7, lineno=1659)
         278	LOAD_FAST(arg=2, lineno=1659)
         280	FORMAT_VALUE(arg=0, lineno=1659)
         282	LOAD_CONST(arg=8, lineno=1659)
         284	LOAD_FAST(arg=4, lineno=1660)
         286	FORMAT_VALUE(arg=0, lineno=1660)
         288	BUILD_STRING(arg=4, lineno=1659)
         290	STORE_FAST(arg=5, lineno=1659)
         292	LOAD_GLOBAL(arg=7, lineno=1661)
         302	LOAD_FAST(arg=5, lineno=1661)
         304	CALL(arg=1, lineno=1661)
         312	RAISE_VARARGS(arg=1, lineno=1661)
         314	SWAP(arg=2, lineno=1661)
         316	POP_TOP(arg=None, lineno=1661)
         318	SWAP(arg=2, lineno=1654)
         320	STORE_FAST(arg=3, lineno=1654)
         322	RERAISE(arg=0, lineno=1654)
         324	SWAP(arg=2, lineno=1654)
         326	POP_TOP(arg=None, lineno=1654)
         328	SWAP(arg=2, lineno=1658)
         330	STORE_FAST(arg=3, lineno=1658)
         332	RERAISE(arg=0, lineno=1658)
2025-07-23 17:15:45,069 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,069 - DEBUG - stack: []
2025-07-23 17:15:45,070 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,070 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1650)
2025-07-23 17:15:45,070 - DEBUG - stack []
2025-07-23 17:15:45,070 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1650)
2025-07-23 17:15:45,070 - DEBUG - stack []
2025-07-23 17:15:45,070 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1651)
2025-07-23 17:15:45,070 - DEBUG - stack []
2025-07-23 17:15:45,070 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1651)
2025-07-23 17:15:45,071 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:45,071 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1651)
2025-07-23 17:15:45,071 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$src_shapes14.2']
2025-07-23 17:15:45,071 - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1651)
2025-07-23 17:15:45,071 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:45,071 - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=40, lineno=1651)
2025-07-23 17:15:45,071 - DEBUG - stack ['$16call.3', '$const24.4.1']
2025-07-23 17:15:45,072 - DEBUG - dispatch pc=30, inst=POP_JUMP_IF_FALSE(arg=10, lineno=1651)
2025-07-23 17:15:45,072 - DEBUG - stack ['$26compare_op.5']
2025-07-23 17:15:45,072 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,072 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-07-23 17:15:45,072 - DEBUG - stack: []
2025-07-23 17:15:45,072 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2025-07-23 17:15:45,073 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=1652)
2025-07-23 17:15:45,073 - DEBUG - stack []
2025-07-23 17:15:45,073 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=1652)
2025-07-23 17:15:45,073 - DEBUG - stack ['$const32.0.2']
2025-07-23 17:15:45,073 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=1652)
2025-07-23 17:15:45,074 - DEBUG - stack ['$const32.0.2', '$src_shapes34.1']
2025-07-23 17:15:45,074 - DEBUG - dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=1652)
2025-07-23 17:15:45,074 - DEBUG - stack ['$const32.0.2', '$src_shapes34.1', '$const36.2.3']
2025-07-23 17:15:45,074 - DEBUG - dispatch pc=42, inst=FORMAT_VALUE(arg=0, lineno=1652)
2025-07-23 17:15:45,074 - DEBUG - stack ['$const32.0.2', '$38binary_subscr.3']
2025-07-23 17:15:45,074 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=4, lineno=1652)
2025-07-23 17:15:45,074 - DEBUG - stack ['$const32.0.2', '$42format_value.5']
2025-07-23 17:15:45,074 - DEBUG - dispatch pc=46, inst=BUILD_STRING(arg=3, lineno=1652)
2025-07-23 17:15:45,075 - DEBUG - stack ['$const32.0.2', '$42format_value.5', '$const44.6.4']
2025-07-23 17:15:45,075 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=1652)
2025-07-23 17:15:45,075 - DEBUG - stack ['$46build_string.8']
2025-07-23 17:15:45,075 - DEBUG - dispatch pc=50, inst=JUMP_FORWARD(arg=44, lineno=1652)
2025-07-23 17:15:45,075 - DEBUG - stack []
2025-07-23 17:15:45,075 - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,075 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
2025-07-23 17:15:45,075 - DEBUG - stack: []
2025-07-23 17:15:45,075 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-23 17:15:45,076 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=1654)
2025-07-23 17:15:45,076 - DEBUG - stack []
2025-07-23 17:15:45,076 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=5, lineno=1654)
2025-07-23 17:15:45,076 - DEBUG - stack ['$const52.0.2']
2025-07-23 17:15:45,076 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=3, lineno=1654)
2025-07-23 17:15:45,076 - DEBUG - stack ['$const52.0.2', '$const54.1.5']
2025-07-23 17:15:45,076 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=1654)
2025-07-23 17:15:45,077 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2']
2025-07-23 17:15:45,077 - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=1654)
2025-07-23 17:15:45,077 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$src_shapes76.4']
2025-07-23 17:15:45,077 - DEBUG - dispatch pc=80, inst=LOAD_FAST_AND_CLEAR(arg=3, lineno=1654)
2025-07-23 17:15:45,077 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$78get_iter.5']
2025-07-23 17:15:45,077 - DEBUG - dispatch pc=82, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:45,077 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$78get_iter.5', '$x80.6']
2025-07-23 17:15:45,077 - DEBUG - dispatch pc=84, inst=BUILD_LIST(arg=0, lineno=1654)
2025-07-23 17:15:45,077 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$78get_iter.5']
2025-07-23 17:15:45,078 - DEBUG - dispatch pc=86, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:45,078 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$78get_iter.5', '$84build_list.7']
2025-07-23 17:15:45,078 - DEBUG - end state. edges=[Edge(pc=88, stack=('$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$84build_list.7', '$78get_iter.5'), blockstack=(), npush=0)]
2025-07-23 17:15:45,078 - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:45,078 - DEBUG - stack: []
2025-07-23 17:15:45,078 - DEBUG - state.pc_initial: State(pc_initial=140 nstack_initial=0)
2025-07-23 17:15:45,078 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1655)
2025-07-23 17:15:45,078 - DEBUG - stack []
2025-07-23 17:15:45,079 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=1655)
2025-07-23 17:15:45,079 - DEBUG - stack ['$null$140.1', '$140load_global.0']
2025-07-23 17:15:45,079 - DEBUG - dispatch pc=152, inst=CALL(arg=1, lineno=1655)
2025-07-23 17:15:45,079 - DEBUG - stack ['$null$140.1', '$140load_global.0', '$index_shape150.2']
2025-07-23 17:15:45,079 - DEBUG - dispatch pc=160, inst=LOAD_CONST(arg=1, lineno=1655)
2025-07-23 17:15:45,079 - DEBUG - stack ['$152call.3']
2025-07-23 17:15:45,079 - DEBUG - dispatch pc=162, inst=COMPARE_OP(arg=40, lineno=1655)
2025-07-23 17:15:45,079 - DEBUG - stack ['$152call.3', '$const160.4.1']
2025-07-23 17:15:45,079 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=10, lineno=1655)
2025-07-23 17:15:45,079 - DEBUG - stack ['$162compare_op.5']
2025-07-23 17:15:45,079 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=188, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,080 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=6), State(pc_initial=168 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
2025-07-23 17:15:45,080 - DEBUG - stack: ['$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5']
2025-07-23 17:15:45,080 - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=6)
2025-07-23 17:15:45,080 - DEBUG - dispatch pc=88, inst=FOR_ITER(arg=13, lineno=1654)
2025-07-23 17:15:45,080 - DEBUG - stack ['$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5']
2025-07-23 17:15:45,080 - DEBUG - end state. edges=[Edge(pc=118, stack=('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), blockstack=(), npush=0), Edge(pc=92, stack=('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), blockstack=(), npush=0)]
2025-07-23 17:15:45,080 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7)])
2025-07-23 17:15:45,081 - DEBUG - stack: []
2025-07-23 17:15:45,081 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2025-07-23 17:15:45,081 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1656)
2025-07-23 17:15:45,081 - DEBUG - stack []
2025-07-23 17:15:45,081 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=1, lineno=1656)
2025-07-23 17:15:45,081 - DEBUG - stack ['$const168.0.2']
2025-07-23 17:15:45,081 - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=3, lineno=1656)
2025-07-23 17:15:45,081 - DEBUG - stack ['$const168.0.2', '$index_shape170.1']
2025-07-23 17:15:45,081 - DEBUG - dispatch pc=174, inst=BINARY_SUBSCR(arg=None, lineno=1656)
2025-07-23 17:15:45,082 - DEBUG - stack ['$const168.0.2', '$index_shape170.1', '$const172.2.3']
2025-07-23 17:15:45,082 - DEBUG - dispatch pc=178, inst=FORMAT_VALUE(arg=0, lineno=1656)
2025-07-23 17:15:45,082 - DEBUG - stack ['$const168.0.2', '$174binary_subscr.3']
2025-07-23 17:15:45,082 - DEBUG - dispatch pc=180, inst=LOAD_CONST(arg=4, lineno=1656)
2025-07-23 17:15:45,082 - DEBUG - stack ['$const168.0.2', '$178format_value.5']
2025-07-23 17:15:45,082 - DEBUG - dispatch pc=182, inst=BUILD_STRING(arg=3, lineno=1656)
2025-07-23 17:15:45,082 - DEBUG - stack ['$const168.0.2', '$178format_value.5', '$const180.6.4']
2025-07-23 17:15:45,082 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=4, lineno=1656)
2025-07-23 17:15:45,082 - DEBUG - stack ['$182build_string.8']
2025-07-23 17:15:45,083 - DEBUG - dispatch pc=186, inst=JUMP_FORWARD(arg=44, lineno=1656)
2025-07-23 17:15:45,083 - DEBUG - stack []
2025-07-23 17:15:45,083 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,083 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0)])
2025-07-23 17:15:45,083 - DEBUG - stack: []
2025-07-23 17:15:45,083 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2025-07-23 17:15:45,084 - DEBUG - dispatch pc=188, inst=LOAD_CONST(arg=2, lineno=1658)
2025-07-23 17:15:45,084 - DEBUG - stack []
2025-07-23 17:15:45,084 - DEBUG - dispatch pc=190, inst=LOAD_CONST(arg=5, lineno=1658)
2025-07-23 17:15:45,084 - DEBUG - stack ['$const188.0.2']
2025-07-23 17:15:45,084 - DEBUG - dispatch pc=192, inst=LOAD_ATTR(arg=3, lineno=1658)
2025-07-23 17:15:45,084 - DEBUG - stack ['$const188.0.2', '$const190.1.5']
2025-07-23 17:15:45,084 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=1, lineno=1658)
2025-07-23 17:15:45,084 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2']
2025-07-23 17:15:45,085 - DEBUG - dispatch pc=214, inst=GET_ITER(arg=None, lineno=1658)
2025-07-23 17:15:45,085 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$index_shape212.4']
2025-07-23 17:15:45,085 - DEBUG - dispatch pc=216, inst=LOAD_FAST_AND_CLEAR(arg=3, lineno=1658)
2025-07-23 17:15:45,085 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$214get_iter.5']
2025-07-23 17:15:45,085 - DEBUG - dispatch pc=218, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:45,085 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$214get_iter.5', '$x216.6']
2025-07-23 17:15:45,085 - DEBUG - dispatch pc=220, inst=BUILD_LIST(arg=0, lineno=1658)
2025-07-23 17:15:45,085 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$214get_iter.5']
2025-07-23 17:15:45,086 - DEBUG - dispatch pc=222, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:45,086 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$214get_iter.5', '$220build_list.7']
2025-07-23 17:15:45,086 - DEBUG - end state. edges=[Edge(pc=224, stack=('$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$220build_list.7', '$214get_iter.5'), blockstack=(), npush=0)]
2025-07-23 17:15:45,086 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:45,086 - DEBUG - stack: ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4', '$phi118.5', '$phi118.6']
2025-07-23 17:15:45,086 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=7)
2025-07-23 17:15:45,086 - DEBUG - dispatch pc=118, inst=END_FOR(arg=None, lineno=1654)
2025-07-23 17:15:45,086 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4', '$phi118.5', '$phi118.6']
2025-07-23 17:15:45,086 - DEBUG - dispatch pc=120, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:45,087 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4']
2025-07-23 17:15:45,087 - DEBUG - dispatch pc=122, inst=STORE_FAST(arg=3, lineno=1654)
2025-07-23 17:15:45,087 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.4', '$phi118.3']
2025-07-23 17:15:45,087 - DEBUG - dispatch pc=124, inst=CALL(arg=1, lineno=1654)
2025-07-23 17:15:45,087 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.4']
2025-07-23 17:15:45,087 - DEBUG - dispatch pc=132, inst=FORMAT_VALUE(arg=0, lineno=1654)
2025-07-23 17:15:45,087 - DEBUG - stack ['$phi118.0', '$124call.7']
2025-07-23 17:15:45,087 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=6, lineno=1654)
2025-07-23 17:15:45,087 - DEBUG - stack ['$phi118.0', '$132format_value.9']
2025-07-23 17:15:45,088 - DEBUG - dispatch pc=136, inst=BUILD_STRING(arg=3, lineno=1654)
2025-07-23 17:15:45,088 - DEBUG - stack ['$phi118.0', '$132format_value.9', '$const134.10.6']
2025-07-23 17:15:45,088 - DEBUG - dispatch pc=138, inst=STORE_FAST(arg=2, lineno=1654)
2025-07-23 17:15:45,088 - DEBUG - stack ['$136build_string.12']
2025-07-23 17:15:45,088 - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,088 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0)])
2025-07-23 17:15:45,088 - DEBUG - stack: ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$phi92.6']
2025-07-23 17:15:45,088 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=7)
2025-07-23 17:15:45,088 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=3, lineno=1654)
2025-07-23 17:15:45,089 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$phi92.6']
2025-07-23 17:15:45,089 - DEBUG - dispatch pc=94, inst=LOAD_GLOBAL(arg=5, lineno=1654)
2025-07-23 17:15:45,089 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5']
2025-07-23 17:15:45,089 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=3, lineno=1654)
2025-07-23 17:15:45,089 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$null$94.8', '$94load_global.7']
2025-07-23 17:15:45,089 - DEBUG - dispatch pc=106, inst=CALL(arg=1, lineno=1654)
2025-07-23 17:15:45,089 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$null$94.8', '$94load_global.7', '$x104.9']
2025-07-23 17:15:45,089 - DEBUG - dispatch pc=114, inst=LIST_APPEND(arg=2, lineno=1654)
2025-07-23 17:15:45,090 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$106call.10']
2025-07-23 17:15:45,090 - DEBUG - dispatch pc=116, inst=JUMP_BACKWARD(arg=15, lineno=1654)
2025-07-23 17:15:45,090 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5']
2025-07-23 17:15:45,090 - DEBUG - end state. edges=[Edge(pc=88, stack=('$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5'), blockstack=(), npush=0)]
2025-07-23 17:15:45,090 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:45,090 - DEBUG - stack: []
2025-07-23 17:15:45,090 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2025-07-23 17:15:45,090 - DEBUG - dispatch pc=276, inst=LOAD_CONST(arg=7, lineno=1659)
2025-07-23 17:15:45,090 - DEBUG - stack []
2025-07-23 17:15:45,091 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=2, lineno=1659)
2025-07-23 17:15:45,091 - DEBUG - stack ['$const276.0.7']
2025-07-23 17:15:45,091 - DEBUG - dispatch pc=280, inst=FORMAT_VALUE(arg=0, lineno=1659)
2025-07-23 17:15:45,091 - DEBUG - stack ['$const276.0.7', '$shape_str278.1']
2025-07-23 17:15:45,091 - DEBUG - dispatch pc=282, inst=LOAD_CONST(arg=8, lineno=1659)
2025-07-23 17:15:45,091 - DEBUG - stack ['$const276.0.7', '$280format_value.3']
2025-07-23 17:15:45,091 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=4, lineno=1660)
2025-07-23 17:15:45,092 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8']
2025-07-23 17:15:45,092 - DEBUG - dispatch pc=286, inst=FORMAT_VALUE(arg=0, lineno=1660)
2025-07-23 17:15:45,092 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$index_str284.5']
2025-07-23 17:15:45,092 - DEBUG - dispatch pc=288, inst=BUILD_STRING(arg=4, lineno=1659)
2025-07-23 17:15:45,092 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$286format_value.7']
2025-07-23 17:15:45,092 - DEBUG - dispatch pc=290, inst=STORE_FAST(arg=5, lineno=1659)
2025-07-23 17:15:45,092 - DEBUG - stack ['$288build_string.10']
2025-07-23 17:15:45,092 - DEBUG - dispatch pc=292, inst=LOAD_GLOBAL(arg=7, lineno=1661)
2025-07-23 17:15:45,092 - DEBUG - stack []
2025-07-23 17:15:45,093 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=1661)
2025-07-23 17:15:45,093 - DEBUG - stack ['$null$292.12', '$292load_global.11']
2025-07-23 17:15:45,093 - DEBUG - dispatch pc=304, inst=CALL(arg=1, lineno=1661)
2025-07-23 17:15:45,093 - DEBUG - stack ['$null$292.12', '$292load_global.11', '$msg302.13']
2025-07-23 17:15:45,093 - DEBUG - dispatch pc=312, inst=RAISE_VARARGS(arg=1, lineno=1661)
2025-07-23 17:15:45,093 - DEBUG - stack ['$304call.14']
2025-07-23 17:15:45,093 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,093 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:45,093 - DEBUG - stack: ['$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5']
2025-07-23 17:15:45,094 - DEBUG - state.pc_initial: State(pc_initial=224 nstack_initial=6)
2025-07-23 17:15:45,094 - DEBUG - dispatch pc=224, inst=FOR_ITER(arg=13, lineno=1658)
2025-07-23 17:15:45,094 - DEBUG - stack ['$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5']
2025-07-23 17:15:45,094 - DEBUG - end state. edges=[Edge(pc=254, stack=('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), blockstack=(), npush=0), Edge(pc=228, stack=('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), blockstack=(), npush=0)]
2025-07-23 17:15:45,094 - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6), State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:45,094 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=6), State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:45,094 - DEBUG - pending: deque([State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:45,094 - DEBUG - stack: ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4', '$phi254.5', '$phi254.6']
2025-07-23 17:15:45,095 - DEBUG - state.pc_initial: State(pc_initial=254 nstack_initial=7)
2025-07-23 17:15:45,095 - DEBUG - dispatch pc=254, inst=END_FOR(arg=None, lineno=1658)
2025-07-23 17:15:45,095 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4', '$phi254.5', '$phi254.6']
2025-07-23 17:15:45,095 - DEBUG - dispatch pc=256, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:45,095 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4']
2025-07-23 17:15:45,095 - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=3, lineno=1658)
2025-07-23 17:15:45,095 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.4', '$phi254.3']
2025-07-23 17:15:45,095 - DEBUG - dispatch pc=260, inst=CALL(arg=1, lineno=1658)
2025-07-23 17:15:45,095 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.4']
2025-07-23 17:15:45,096 - DEBUG - dispatch pc=268, inst=FORMAT_VALUE(arg=0, lineno=1658)
2025-07-23 17:15:45,096 - DEBUG - stack ['$phi254.0', '$260call.7']
2025-07-23 17:15:45,096 - DEBUG - dispatch pc=270, inst=LOAD_CONST(arg=6, lineno=1658)
2025-07-23 17:15:45,096 - DEBUG - stack ['$phi254.0', '$268format_value.9']
2025-07-23 17:15:45,096 - DEBUG - dispatch pc=272, inst=BUILD_STRING(arg=3, lineno=1658)
2025-07-23 17:15:45,096 - DEBUG - stack ['$phi254.0', '$268format_value.9', '$const270.10.6']
2025-07-23 17:15:45,096 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=4, lineno=1658)
2025-07-23 17:15:45,096 - DEBUG - stack ['$272build_string.12']
2025-07-23 17:15:45,096 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,097 - DEBUG - pending: deque([State(pc_initial=228 nstack_initial=7), State(pc_initial=276 nstack_initial=0)])
2025-07-23 17:15:45,097 - DEBUG - stack: ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$phi228.6']
2025-07-23 17:15:45,097 - DEBUG - state.pc_initial: State(pc_initial=228 nstack_initial=7)
2025-07-23 17:15:45,097 - DEBUG - dispatch pc=228, inst=STORE_FAST(arg=3, lineno=1658)
2025-07-23 17:15:45,097 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$phi228.6']
2025-07-23 17:15:45,097 - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=5, lineno=1658)
2025-07-23 17:15:45,097 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5']
2025-07-23 17:15:45,097 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=3, lineno=1658)
2025-07-23 17:15:45,097 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$null$230.8', '$230load_global.7']
2025-07-23 17:15:45,098 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=1658)
2025-07-23 17:15:45,098 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$null$230.8', '$230load_global.7', '$x240.9']
2025-07-23 17:15:45,098 - DEBUG - dispatch pc=250, inst=LIST_APPEND(arg=2, lineno=1658)
2025-07-23 17:15:45,098 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$242call.10']
2025-07-23 17:15:45,098 - DEBUG - dispatch pc=252, inst=JUMP_BACKWARD(arg=15, lineno=1658)
2025-07-23 17:15:45,098 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5']
2025-07-23 17:15:45,098 - DEBUG - end state. edges=[Edge(pc=224, stack=('$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5'), blockstack=(), npush=0)]
2025-07-23 17:15:45,098 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:45,099 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:45,099 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,099 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=6): {'$phi88.5'},
             State(pc_initial=92 nstack_initial=7): {'$phi92.6', '$phi92.4'},
             State(pc_initial=118 nstack_initial=7): {'$phi118.0',
                                                      '$phi118.2',
                                                      '$phi118.3',
                                                      '$phi118.4'},
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=6): {'$phi224.5'},
             State(pc_initial=228 nstack_initial=7): {'$phi228.6', '$phi228.4'},
             State(pc_initial=254 nstack_initial=7): {'$phi254.0',
                                                      '$phi254.2',
                                                      '$phi254.3',
                                                      '$phi254.4'},
             State(pc_initial=276 nstack_initial=0): set()})
2025-07-23 17:15:45,100 - DEBUG - defmap: {'$null$224.1': State(pc_initial=188 nstack_initial=0),
 '$null$88.1': State(pc_initial=52 nstack_initial=0),
 '$phi118.6': State(pc_initial=88 nstack_initial=6),
 '$phi224.0': State(pc_initial=188 nstack_initial=0),
 '$phi224.2': State(pc_initial=188 nstack_initial=0),
 '$phi224.3': State(pc_initial=188 nstack_initial=0),
 '$phi224.4': State(pc_initial=188 nstack_initial=0),
 '$phi224.5': State(pc_initial=188 nstack_initial=0),
 '$phi228.6': State(pc_initial=224 nstack_initial=6),
 '$phi254.6': State(pc_initial=224 nstack_initial=6),
 '$phi88.0': State(pc_initial=52 nstack_initial=0),
 '$phi88.2': State(pc_initial=52 nstack_initial=0),
 '$phi88.3': State(pc_initial=52 nstack_initial=0),
 '$phi88.4': State(pc_initial=52 nstack_initial=0),
 '$phi88.5': State(pc_initial=52 nstack_initial=0),
 '$phi92.6': State(pc_initial=88 nstack_initial=6)}
2025-07-23 17:15:45,100 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$88.1',
                              State(pc_initial=88 nstack_initial=6))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0)),
                             ('$null$228.1',
                              State(pc_initial=228 nstack_initial=7))},
             '$null$228.1': {('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$254.1': {('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0)),
                            ('$null$92.1',
                             State(pc_initial=92 nstack_initial=7))},
             '$null$92.1': {('$null$88.1',
                             State(pc_initial=88 nstack_initial=6))},
             '$phi118.0': {('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi118.2': {('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi118.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6))},
             '$phi118.4': {('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi118.5': {('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.2',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.3': {('$phi228.3',
                            State(pc_initial=228 nstack_initial=7)),
                           ('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.4',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.5',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi228.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.2': {('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.4': {('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.5': {('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.2': {('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.4': {('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.5': {('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=7))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.2', State(pc_initial=92 nstack_initial=7))},
             '$phi88.3': {('$phi92.3', State(pc_initial=92 nstack_initial=7)),
                          ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.4', State(pc_initial=92 nstack_initial=7))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.5', State(pc_initial=92 nstack_initial=7))},
             '$phi92.0': {('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi92.2': {('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi92.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6))},
             '$phi92.4': {('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi92.5': {('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:45,103 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0)),
                             ('$null$92.1',
                              State(pc_initial=92 nstack_initial=7))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0)),
                             ('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0)),
                            ('$null$88.1',
                             State(pc_initial=88 nstack_initial=6))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.0', State(pc_initial=92 nstack_initial=7))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.2', State(pc_initial=92 nstack_initial=7))},
             '$phi118.3': {('$phi92.3', State(pc_initial=92 nstack_initial=7)),
                           ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.4', State(pc_initial=92 nstack_initial=7))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.5', State(pc_initial=92 nstack_initial=7))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6)),
                           ('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi88.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6)),
                          ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:45,106 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:45,108 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:45,111 - DEBUG - keep phismap: {'$phi118.0': {('$const52.0.2', State(pc_initial=52 nstack_initial=0))},
 '$phi118.2': {('$56load_attr.2', State(pc_initial=52 nstack_initial=0))},
 '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
 '$phi118.4': {('$84build_list.7', State(pc_initial=52 nstack_initial=0))},
 '$phi224.5': {('$214get_iter.5', State(pc_initial=188 nstack_initial=0))},
 '$phi228.4': {('$220build_list.7', State(pc_initial=188 nstack_initial=0))},
 '$phi228.6': {('$224for_iter.7', State(pc_initial=224 nstack_initial=6))},
 '$phi254.0': {('$const188.0.2', State(pc_initial=188 nstack_initial=0))},
 '$phi254.2': {('$192load_attr.2', State(pc_initial=188 nstack_initial=0))},
 '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
 '$phi254.4': {('$220build_list.7', State(pc_initial=188 nstack_initial=0))},
 '$phi88.5': {('$78get_iter.5', State(pc_initial=52 nstack_initial=0))},
 '$phi92.4': {('$84build_list.7', State(pc_initial=52 nstack_initial=0))},
 '$phi92.6': {('$88for_iter.7', State(pc_initial=88 nstack_initial=6))}}
2025-07-23 17:15:45,111 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=52 nstack_initial=0): {'$phi118.0': '$const52.0.2',
                                                     '$phi118.2': '$56load_attr.2',
                                                     '$phi118.3': '$x80.6',
                                                     '$phi118.4': '$84build_list.7',
                                                     '$phi88.5': '$78get_iter.5',
                                                     '$phi92.4': '$84build_list.7'},
             State(pc_initial=88 nstack_initial=6): {'$phi92.6': '$88for_iter.7'},
             State(pc_initial=188 nstack_initial=0): {'$phi224.5': '$214get_iter.5',
                                                      '$phi228.4': '$220build_list.7',
                                                      '$phi254.0': '$const188.0.2',
                                                      '$phi254.2': '$192load_attr.2',
                                                      '$phi254.3': '$x216.6',
                                                      '$phi254.4': '$220build_list.7'},
             State(pc_initial=224 nstack_initial=6): {'$phi228.6': '$224for_iter.7'}})
2025-07-23 17:15:45,112 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,113 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$src_shapes14.2'}), (16, {'func': '$4load_global.0', 'args': ['$src_shapes14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$const24.4.1'}), (26, {'lhs': '$16call.3', 'rhs': '$const24.4.1', 'res': '$26compare_op.5'}), (30, {'pred': '$26compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 52: ()})
2025-07-23 17:15:45,113 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$const32.0.2'}), (34, {'res': '$src_shapes34.1'}), (36, {'res': '$const36.2.3'}), (38, {'index': '$const36.2.3', 'target': '$src_shapes34.1', 'res': '$38binary_subscr.3'}), (42, {'value': '$38binary_subscr.3', 'res': '$42format_value.5', 'strvar': '$42format_value.4'}), (44, {'res': '$const44.6.4'}), (46, {'strings': ['$const32.0.2', '$42format_value.5', '$const44.6.4'], 'tmps': ['$46build_string.7', '$46build_string.8']}), (48, {'value': '$46build_string.8'}), (50, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
2025-07-23 17:15:45,113 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$const52.0.2'}), (54, {'res': '$const54.1.5'}), (56, {'item': '$const54.1.5', 'res': '$56load_attr.2'}), (76, {'res': '$src_shapes76.4'}), (78, {'value': '$src_shapes76.4', 'res': '$78get_iter.5'}), (80, {'res': '$x80.6'}), (84, {'items': [], 'res': '$84build_list.7'})), outgoing_phis={'$phi92.4': '$84build_list.7', '$phi88.5': '$78get_iter.5', '$phi118.4': '$84build_list.7', '$phi118.0': '$const52.0.2', '$phi118.2': '$56load_attr.2', '$phi118.3': '$x80.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$84build_list.7', '$78get_iter.5')})
2025-07-23 17:15:45,113 - DEBUG - block_infos State(pc_initial=88 nstack_initial=6):
AdaptBlockInfo(insts=((88, {'iterator': '$phi88.5', 'pair': '$88for_iter.6', 'indval': '$88for_iter.7', 'pred': '$88for_iter.8'}),), outgoing_phis={'$phi92.6': '$88for_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), 92: ('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7')})
2025-07-23 17:15:45,114 - DEBUG - block_infos State(pc_initial=92 nstack_initial=7):
AdaptBlockInfo(insts=((92, {'value': '$phi92.6'}), (94, {'idx': 2, 'res': '$94load_global.7'}), (104, {'res': '$x104.9'}), (106, {'func': '$94load_global.7', 'args': ['$x104.9'], 'kw_names': None, 'res': '$106call.10'}), (114, {'target': '$phi92.4', 'value': '$106call.10', 'appendvar': '$114list_append.11', 'res': '$114list_append.12'}), (116, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5')})
2025-07-23 17:15:45,114 - DEBUG - block_infos State(pc_initial=118 nstack_initial=7):
AdaptBlockInfo(insts=((122, {'value': '$phi118.3'}), (124, {'func': '$phi118.2', 'args': ['$phi118.4'], 'kw_names': None, 'res': '$124call.7'}), (132, {'value': '$124call.7', 'res': '$132format_value.9', 'strvar': '$132format_value.8'}), (134, {'res': '$const134.10.6'}), (136, {'strings': ['$phi118.0', '$132format_value.9', '$const134.10.6'], 'tmps': ['$136build_string.11', '$136build_string.12']}), (138, {'value': '$136build_string.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
2025-07-23 17:15:45,114 - DEBUG - block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'idx': 0, 'res': '$140load_global.0'}), (150, {'res': '$index_shape150.2'}), (152, {'func': '$140load_global.0', 'args': ['$index_shape150.2'], 'kw_names': None, 'res': '$152call.3'}), (160, {'res': '$const160.4.1'}), (162, {'lhs': '$152call.3', 'rhs': '$const160.4.1', 'res': '$162compare_op.5'}), (166, {'pred': '$162compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 188: ()})
2025-07-23 17:15:45,114 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$const168.0.2'}), (170, {'res': '$index_shape170.1'}), (172, {'res': '$const172.2.3'}), (174, {'index': '$const172.2.3', 'target': '$index_shape170.1', 'res': '$174binary_subscr.3'}), (178, {'value': '$174binary_subscr.3', 'res': '$178format_value.5', 'strvar': '$178format_value.4'}), (180, {'res': '$const180.6.4'}), (182, {'strings': ['$const168.0.2', '$178format_value.5', '$const180.6.4'], 'tmps': ['$182build_string.7', '$182build_string.8']}), (184, {'value': '$182build_string.8'}), (186, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2025-07-23 17:15:45,115 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$const188.0.2'}), (190, {'res': '$const190.1.5'}), (192, {'item': '$const190.1.5', 'res': '$192load_attr.2'}), (212, {'res': '$index_shape212.4'}), (214, {'value': '$index_shape212.4', 'res': '$214get_iter.5'}), (216, {'res': '$x216.6'}), (220, {'items': [], 'res': '$220build_list.7'})), outgoing_phis={'$phi254.0': '$const188.0.2', '$phi254.2': '$192load_attr.2', '$phi254.4': '$220build_list.7', '$phi254.3': '$x216.6', '$phi228.4': '$220build_list.7', '$phi224.5': '$214get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$220build_list.7', '$214get_iter.5')})
2025-07-23 17:15:45,115 - DEBUG - block_infos State(pc_initial=224 nstack_initial=6):
AdaptBlockInfo(insts=((224, {'iterator': '$phi224.5', 'pair': '$224for_iter.6', 'indval': '$224for_iter.7', 'pred': '$224for_iter.8'}),), outgoing_phis={'$phi228.6': '$224for_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), 228: ('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7')})
2025-07-23 17:15:45,115 - DEBUG - block_infos State(pc_initial=228 nstack_initial=7):
AdaptBlockInfo(insts=((228, {'value': '$phi228.6'}), (230, {'idx': 2, 'res': '$230load_global.7'}), (240, {'res': '$x240.9'}), (242, {'func': '$230load_global.7', 'args': ['$x240.9'], 'kw_names': None, 'res': '$242call.10'}), (250, {'target': '$phi228.4', 'value': '$242call.10', 'appendvar': '$250list_append.11', 'res': '$250list_append.12'}), (252, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5')})
2025-07-23 17:15:45,115 - DEBUG - block_infos State(pc_initial=254 nstack_initial=7):
AdaptBlockInfo(insts=((258, {'value': '$phi254.3'}), (260, {'func': '$phi254.2', 'args': ['$phi254.4'], 'kw_names': None, 'res': '$260call.7'}), (268, {'value': '$260call.7', 'res': '$268format_value.9', 'strvar': '$268format_value.8'}), (270, {'res': '$const270.10.6'}), (272, {'strings': ['$phi254.0', '$268format_value.9', '$const270.10.6'], 'tmps': ['$272build_string.11', '$272build_string.12']}), (274, {'value': '$272build_string.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2025-07-23 17:15:45,115 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$const276.0.7'}), (278, {'res': '$shape_str278.1'}), (280, {'value': '$shape_str278.1', 'res': '$280format_value.3', 'strvar': '$280format_value.2'}), (282, {'res': '$const282.4.8'}), (284, {'res': '$index_str284.5'}), (286, {'value': '$index_str284.5', 'res': '$286format_value.7', 'strvar': '$286format_value.6'}), (288, {'strings': ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$286format_value.7'], 'tmps': ['$288build_string.8', '$288build_string.9', '$288build_string.10']}), (290, {'value': '$288build_string.10'}), (292, {'idx': 3, 'res': '$292load_global.11'}), (302, {'res': '$msg302.13'}), (304, {'func': '$292load_global.11', 'args': ['$msg302.13'], 'kw_names': None, 'res': '$304call.14'}), (312, {'exc': '$304call.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,119 - DEBUG - label 0:
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    index_shape = arg(1, name=index_shape)   ['index_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(src_shapes, func=$4load_global.0, args=[Var(src_shapes, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'src_shapes']
    $const24.4.1 = const(int, 1)             ['$const24.4.1']
    $26compare_op.5 = $16call.3 == $const24.4.1 ['$16call.3', '$26compare_op.5', '$const24.4.1']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.5', '$30pred', 'bool30']
    branch $30pred, 32, 52                   ['$30pred']
label 32:
    $const32.0.2 = const(str, ()             ['$const32.0.2']
    $const36.2.3 = const(int, 0)             ['$const36.2.3']
    $38binary_subscr.3 = getitem(value=src_shapes, index=$const36.2.3, fn=<built-in function getitem>) ['$38binary_subscr.3', '$const36.2.3', 'src_shapes']
    $42format_value.4 = global(str: <class 'str'>) ['$42format_value.4']
    $42format_value.5 = call $42format_value.4($38binary_subscr.3, func=$42format_value.4, args=(Var($38binary_subscr.3, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$38binary_subscr.3', '$42format_value.4', '$42format_value.5']
    $const44.6.4 = const(str, ,))            ['$const44.6.4']
    $46build_string.7 = $const32.0.2 + $42format_value.5 ['$42format_value.5', '$46build_string.7', '$const32.0.2']
    shape_str = $46build_string.7 + $const44.6.4 ['$46build_string.7', '$const44.6.4', 'shape_str']
    jump 140                                 []
label 52:
    $const52.0.2 = const(str, ()             ['$const52.0.2']
    $const54.1.5 = const(str, , )            ['$const54.1.5']
    $56load_attr.2 = getattr(value=$const54.1.5, attr=join) ['$56load_attr.2', '$const54.1.5']
    $78get_iter.5 = getiter(value=src_shapes) ['$78get_iter.5', 'src_shapes']
    $x80.6 = undef()                         ['$x80.6']
    $84build_list.7 = build_list(items=[])   ['$84build_list.7']
    $phi92.4 = $84build_list.7               ['$84build_list.7', '$phi92.4']
    $phi88.5 = $78get_iter.5                 ['$78get_iter.5', '$phi88.5']
    $phi118.4 = $84build_list.7              ['$84build_list.7', '$phi118.4']
    $phi118.0 = $const52.0.2                 ['$const52.0.2', '$phi118.0']
    $phi118.2 = $56load_attr.2               ['$56load_attr.2', '$phi118.2']
    $phi118.3 = $x80.6                       ['$phi118.3', '$x80.6']
    jump 88                                  []
label 88:
    $88for_iter.6 = iternext(value=$phi88.5) ['$88for_iter.6', '$phi88.5']
    $88for_iter.7 = pair_first(value=$88for_iter.6) ['$88for_iter.6', '$88for_iter.7']
    $88for_iter.8 = pair_second(value=$88for_iter.6) ['$88for_iter.6', '$88for_iter.8']
    $phi92.6 = $88for_iter.7                 ['$88for_iter.7', '$phi92.6']
    branch $88for_iter.8, 92, 118            ['$88for_iter.8']
label 92:
    x = $phi92.6                             ['$phi92.6', 'x']
    $94load_global.7 = global(str: <class 'str'>) ['$94load_global.7']
    $106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$106call.10', '$94load_global.7', 'x']
    $114list_append.11 = getattr(value=$phi92.4, attr=append) ['$114list_append.11', '$phi92.4']
    $114list_append.12 = call $114list_append.11($106call.10, func=$114list_append.11, args=(Var($106call.10, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$106call.10', '$114list_append.11', '$114list_append.12']
    jump 88                                  []
label 118:
    x = $phi118.3                            ['$phi118.3', 'x']
    $124call.7 = call $phi118.2($phi118.4, func=$phi118.2, args=[Var($phi118.4, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$124call.7', '$phi118.2', '$phi118.4']
    $132format_value.8 = global(str: <class 'str'>) ['$132format_value.8']
    $132format_value.9 = call $132format_value.8($124call.7, func=$132format_value.8, args=(Var($124call.7, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$124call.7', '$132format_value.8', '$132format_value.9']
    $const134.10.6 = const(str, ))           ['$const134.10.6']
    $136build_string.11 = $phi118.0 + $132format_value.9 ['$132format_value.9', '$136build_string.11', '$phi118.0']
    shape_str = $136build_string.11 + $const134.10.6 ['$136build_string.11', '$const134.10.6', 'shape_str']
    jump 140                                 []
label 140:
    $140load_global.0 = global(len: <built-in function len>) ['$140load_global.0']
    $152call.3 = call $140load_global.0(index_shape, func=$140load_global.0, args=[Var(index_shape, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$152call.3', 'index_shape']
    $const160.4.1 = const(int, 1)            ['$const160.4.1']
    $162compare_op.5 = $152call.3 == $const160.4.1 ['$152call.3', '$162compare_op.5', '$const160.4.1']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None) ['$162compare_op.5', '$166pred', 'bool166']
    branch $166pred, 168, 188                ['$166pred']
label 168:
    $const168.0.2 = const(str, ()            ['$const168.0.2']
    $const172.2.3 = const(int, 0)            ['$const172.2.3']
    $174binary_subscr.3 = getitem(value=index_shape, index=$const172.2.3, fn=<built-in function getitem>) ['$174binary_subscr.3', '$const172.2.3', 'index_shape']
    $178format_value.4 = global(str: <class 'str'>) ['$178format_value.4']
    $178format_value.5 = call $178format_value.4($174binary_subscr.3, func=$178format_value.4, args=(Var($174binary_subscr.3, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$174binary_subscr.3', '$178format_value.4', '$178format_value.5']
    $const180.6.4 = const(str, ,))           ['$const180.6.4']
    $182build_string.7 = $const168.0.2 + $178format_value.5 ['$178format_value.5', '$182build_string.7', '$const168.0.2']
    index_str = $182build_string.7 + $const180.6.4 ['$182build_string.7', '$const180.6.4', 'index_str']
    jump 276                                 []
label 188:
    $const188.0.2 = const(str, ()            ['$const188.0.2']
    $const190.1.5 = const(str, , )           ['$const190.1.5']
    $192load_attr.2 = getattr(value=$const190.1.5, attr=join) ['$192load_attr.2', '$const190.1.5']
    $214get_iter.5 = getiter(value=index_shape) ['$214get_iter.5', 'index_shape']
    $220build_list.7 = build_list(items=[])  ['$220build_list.7']
    $phi254.0 = $const188.0.2                ['$const188.0.2', '$phi254.0']
    $phi254.2 = $192load_attr.2              ['$192load_attr.2', '$phi254.2']
    $phi254.4 = $220build_list.7             ['$220build_list.7', '$phi254.4']
    $phi254.3 = x                            ['$phi254.3', 'x']
    $phi228.4 = $220build_list.7             ['$220build_list.7', '$phi228.4']
    $phi224.5 = $214get_iter.5               ['$214get_iter.5', '$phi224.5']
    jump 224                                 []
label 224:
    $224for_iter.6 = iternext(value=$phi224.5) ['$224for_iter.6', '$phi224.5']
    $224for_iter.7 = pair_first(value=$224for_iter.6) ['$224for_iter.6', '$224for_iter.7']
    $224for_iter.8 = pair_second(value=$224for_iter.6) ['$224for_iter.6', '$224for_iter.8']
    $phi228.6 = $224for_iter.7               ['$224for_iter.7', '$phi228.6']
    branch $224for_iter.8, 228, 254          ['$224for_iter.8']
label 228:
    x = $phi228.6                            ['$phi228.6', 'x']
    $230load_global.7 = global(str: <class 'str'>) ['$230load_global.7']
    $242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.7', '$242call.10', 'x']
    $250list_append.11 = getattr(value=$phi228.4, attr=append) ['$250list_append.11', '$phi228.4']
    $250list_append.12 = call $250list_append.11($242call.10, func=$250list_append.11, args=(Var($242call.10, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$242call.10', '$250list_append.11', '$250list_append.12']
    jump 224                                 []
label 254:
    x = $phi254.3                            ['$phi254.3', 'x']
    $260call.7 = call $phi254.2($phi254.4, func=$phi254.2, args=[Var($phi254.4, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None) ['$260call.7', '$phi254.2', '$phi254.4']
    $268format_value.8 = global(str: <class 'str'>) ['$268format_value.8']
    $268format_value.9 = call $268format_value.8($260call.7, func=$268format_value.8, args=(Var($260call.7, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$260call.7', '$268format_value.8', '$268format_value.9']
    $const270.10.6 = const(str, ))           ['$const270.10.6']
    $272build_string.11 = $phi254.0 + $268format_value.9 ['$268format_value.9', '$272build_string.11', '$phi254.0']
    index_str = $272build_string.11 + $const270.10.6 ['$272build_string.11', '$const270.10.6', 'index_str']
    jump 276                                 []
label 276:
    $const276.0.7 = const(str, cannot assign slice of shape ) ['$const276.0.7']
    $280format_value.2 = global(str: <class 'str'>) ['$280format_value.2']
    $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$280format_value.2', '$280format_value.3', 'shape_str']
    $const282.4.8 = const(str,  from input of shape ) ['$const282.4.8']
    $286format_value.6 = global(str: <class 'str'>) ['$286format_value.6']
    $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$286format_value.6', '$286format_value.7', 'index_str']
    $288build_string.8 = $const276.0.7 + $280format_value.3 ['$280format_value.3', '$288build_string.8', '$const276.0.7']
    $288build_string.9 = $288build_string.8 + $const282.4.8 ['$288build_string.8', '$288build_string.9', '$const282.4.8']
    msg = $288build_string.9 + $286format_value.7 ['$286format_value.7', '$288build_string.9', 'msg']
    $292load_global.11 = global(ValueError: <class 'ValueError'>) ['$292load_global.11']
    $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None) ['$292load_global.11', '$304call.14', 'msg']
    raise $304call.14                        ['$304call.14']

2025-07-23 17:15:45,150 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,150 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,150 - DEBUG - on stmt: src_shapes = arg(0, name=src_shapes)
2025-07-23 17:15:45,150 - DEBUG - on stmt: index_shape = arg(1, name=index_shape)
2025-07-23 17:15:45,150 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,151 - DEBUG - on stmt: $16call.3 = const(int, 2)
2025-07-23 17:15:45,151 - DEBUG - on stmt: $const24.4.1 = const(int, 1)
2025-07-23 17:15:45,151 - DEBUG - on stmt: $26compare_op.5 = const(bool, False)
2025-07-23 17:15:45,152 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,152 - DEBUG - on stmt: $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,152 - DEBUG - on stmt: jump 52
2025-07-23 17:15:45,153 - DEBUG - ==== SSA block analysis pass on 52
2025-07-23 17:15:45,153 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,153 - DEBUG - on stmt: $const52.0.2 = const(str, ()
2025-07-23 17:15:45,153 - DEBUG - on stmt: $const54.1.5 = const(str, , )
2025-07-23 17:15:45,153 - DEBUG - on stmt: $56load_attr.2 = getattr(value=$const54.1.5, attr=join)
2025-07-23 17:15:45,154 - DEBUG - on stmt: $78get_iter.5 = getiter(value=src_shapes)
2025-07-23 17:15:45,154 - DEBUG - on stmt: $x80.6 = undef()
2025-07-23 17:15:45,154 - DEBUG - on stmt: $84build_list.7 = build_list(items=[])
2025-07-23 17:15:45,154 - DEBUG - on stmt: $phi92.4 = $84build_list.7
2025-07-23 17:15:45,154 - DEBUG - on stmt: $phi88.5 = $78get_iter.5
2025-07-23 17:15:45,154 - DEBUG - on stmt: $phi118.4 = $84build_list.7
2025-07-23 17:15:45,155 - DEBUG - on stmt: $phi118.0 = $const52.0.2
2025-07-23 17:15:45,155 - DEBUG - on stmt: $phi118.2 = $56load_attr.2
2025-07-23 17:15:45,155 - DEBUG - on stmt: $phi118.3 = $x80.6
2025-07-23 17:15:45,155 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,155 - DEBUG - ==== SSA block analysis pass on 88
2025-07-23 17:15:45,155 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,156 - DEBUG - on stmt: $88for_iter.6 = iternext(value=$phi88.5)
2025-07-23 17:15:45,156 - DEBUG - on stmt: $88for_iter.7 = pair_first(value=$88for_iter.6)
2025-07-23 17:15:45,156 - DEBUG - on stmt: $88for_iter.8 = pair_second(value=$88for_iter.6)
2025-07-23 17:15:45,156 - DEBUG - on stmt: $phi92.6 = $88for_iter.7
2025-07-23 17:15:45,156 - DEBUG - on stmt: branch $88for_iter.8, 92, 118
2025-07-23 17:15:45,156 - DEBUG - ==== SSA block analysis pass on 92
2025-07-23 17:15:45,156 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,157 - DEBUG - on stmt: x = $phi92.6
2025-07-23 17:15:45,157 - DEBUG - on stmt: $94load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,157 - DEBUG - on stmt: $106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,157 - DEBUG - on stmt: $114list_append.11 = getattr(value=$phi92.4, attr=append)
2025-07-23 17:15:45,157 - DEBUG - on stmt: $114list_append.12 = call $114list_append.11($106call.10, func=$114list_append.11, args=(Var($106call.10, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,157 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,157 - DEBUG - ==== SSA block analysis pass on 118
2025-07-23 17:15:45,157 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,158 - DEBUG - on stmt: x = $phi118.3
2025-07-23 17:15:45,158 - DEBUG - on stmt: $124call.7 = call $phi118.2($phi118.4, func=$phi118.2, args=[Var($phi118.4, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,158 - DEBUG - on stmt: $132format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,158 - DEBUG - on stmt: $132format_value.9 = call $132format_value.8($124call.7, func=$132format_value.8, args=(Var($124call.7, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,158 - DEBUG - on stmt: $const134.10.6 = const(str, ))
2025-07-23 17:15:45,158 - DEBUG - on stmt: $136build_string.11 = $phi118.0 + $132format_value.9
2025-07-23 17:15:45,158 - DEBUG - on stmt: shape_str = $136build_string.11 + $const134.10.6
2025-07-23 17:15:45,158 - DEBUG - on stmt: jump 140
2025-07-23 17:15:45,159 - DEBUG - ==== SSA block analysis pass on 140
2025-07-23 17:15:45,159 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,159 - DEBUG - on stmt: $140load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,159 - DEBUG - on stmt: $152call.3 = const(int, 2)
2025-07-23 17:15:45,159 - DEBUG - on stmt: $const160.4.1 = const(int, 1)
2025-07-23 17:15:45,159 - DEBUG - on stmt: $162compare_op.5 = const(bool, False)
2025-07-23 17:15:45,159 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,159 - DEBUG - on stmt: $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,159 - DEBUG - on stmt: jump 188
2025-07-23 17:15:45,160 - DEBUG - ==== SSA block analysis pass on 188
2025-07-23 17:15:45,160 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,160 - DEBUG - on stmt: $const188.0.2 = const(str, ()
2025-07-23 17:15:45,160 - DEBUG - on stmt: $const190.1.5 = const(str, , )
2025-07-23 17:15:45,160 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$const190.1.5, attr=join)
2025-07-23 17:15:45,160 - DEBUG - on stmt: $214get_iter.5 = getiter(value=index_shape)
2025-07-23 17:15:45,160 - DEBUG - on stmt: $220build_list.7 = build_list(items=[])
2025-07-23 17:15:45,160 - DEBUG - on stmt: $phi254.0 = $const188.0.2
2025-07-23 17:15:45,161 - DEBUG - on stmt: $phi254.2 = $192load_attr.2
2025-07-23 17:15:45,161 - DEBUG - on stmt: $phi254.4 = $220build_list.7
2025-07-23 17:15:45,161 - DEBUG - on stmt: $phi254.3 = x
2025-07-23 17:15:45,161 - DEBUG - on stmt: $phi228.4 = $220build_list.7
2025-07-23 17:15:45,161 - DEBUG - on stmt: $phi224.5 = $214get_iter.5
2025-07-23 17:15:45,161 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,161 - DEBUG - ==== SSA block analysis pass on 224
2025-07-23 17:15:45,161 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,161 - DEBUG - on stmt: $224for_iter.6 = iternext(value=$phi224.5)
2025-07-23 17:15:45,162 - DEBUG - on stmt: $224for_iter.7 = pair_first(value=$224for_iter.6)
2025-07-23 17:15:45,162 - DEBUG - on stmt: $224for_iter.8 = pair_second(value=$224for_iter.6)
2025-07-23 17:15:45,162 - DEBUG - on stmt: $phi228.6 = $224for_iter.7
2025-07-23 17:15:45,162 - DEBUG - on stmt: branch $224for_iter.8, 228, 254
2025-07-23 17:15:45,162 - DEBUG - ==== SSA block analysis pass on 228
2025-07-23 17:15:45,162 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,162 - DEBUG - on stmt: x = $phi228.6
2025-07-23 17:15:45,162 - DEBUG - on stmt: $230load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,162 - DEBUG - on stmt: $242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,163 - DEBUG - on stmt: $250list_append.11 = getattr(value=$phi228.4, attr=append)
2025-07-23 17:15:45,163 - DEBUG - on stmt: $250list_append.12 = call $250list_append.11($242call.10, func=$250list_append.11, args=(Var($242call.10, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,163 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,163 - DEBUG - ==== SSA block analysis pass on 254
2025-07-23 17:15:45,163 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,163 - DEBUG - on stmt: x = $phi254.3
2025-07-23 17:15:45,163 - DEBUG - on stmt: $260call.7 = call $phi254.2($phi254.4, func=$phi254.2, args=[Var($phi254.4, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,163 - DEBUG - on stmt: $268format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,164 - DEBUG - on stmt: $268format_value.9 = call $268format_value.8($260call.7, func=$268format_value.8, args=(Var($260call.7, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,164 - DEBUG - on stmt: $const270.10.6 = const(str, ))
2025-07-23 17:15:45,164 - DEBUG - on stmt: $272build_string.11 = $phi254.0 + $268format_value.9
2025-07-23 17:15:45,164 - DEBUG - on stmt: index_str = $272build_string.11 + $const270.10.6
2025-07-23 17:15:45,164 - DEBUG - on stmt: jump 276
2025-07-23 17:15:45,164 - DEBUG - ==== SSA block analysis pass on 276
2025-07-23 17:15:45,164 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA4F5820>
2025-07-23 17:15:45,164 - DEBUG - on stmt: $const276.0.7 = const(str, cannot assign slice of shape )
2025-07-23 17:15:45,164 - DEBUG - on stmt: $280format_value.2 = global(str: <class 'str'>)
2025-07-23 17:15:45,165 - DEBUG - on stmt: $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,165 - DEBUG - on stmt: $const282.4.8 = const(str,  from input of shape )
2025-07-23 17:15:45,165 - DEBUG - on stmt: $286format_value.6 = global(str: <class 'str'>)
2025-07-23 17:15:45,165 - DEBUG - on stmt: $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,165 - DEBUG - on stmt: $288build_string.8 = $const276.0.7 + $280format_value.3
2025-07-23 17:15:45,165 - DEBUG - on stmt: $288build_string.9 = $288build_string.8 + $const282.4.8
2025-07-23 17:15:45,165 - DEBUG - on stmt: msg = $288build_string.9 + $286format_value.7
2025-07-23 17:15:45,165 - DEBUG - on stmt: $292load_global.11 = global(ValueError: <class 'ValueError'>)
2025-07-23 17:15:45,166 - DEBUG - on stmt: $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,166 - DEBUG - on stmt: <dynamic> raise <class 'ValueError'>(Var(msg, arrayobj.py:1659))
2025-07-23 17:15:45,166 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106call.10': [(<numba.core.ir.Assign object at 0x000001F6DA514C50>,
                              92)],
             '$114list_append.11': [(<numba.core.ir.Assign object at 0x000001F6DA514DA0>,
                                     92)],
             '$114list_append.12': [(<numba.core.ir.Assign object at 0x000001F6DA514EC0>,
                                     92)],
             '$124call.7': [(<numba.core.ir.Assign object at 0x000001F6DA515160>,
                             118)],
             '$132format_value.8': [(<numba.core.ir.Assign object at 0x000001F6DA5152B0>,
                                     118)],
             '$132format_value.9': [(<numba.core.ir.Assign object at 0x000001F6DA5153D0>,
                                     118)],
             '$136build_string.11': [(<numba.core.ir.Assign object at 0x000001F6DA5156A0>,
                                      118)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA515970>,
                                    140)],
             '$152call.3': [(<numba.core.ir.Assign object at 0x000001F6DA515C10>,
                             140)],
             '$162compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6DA515EB0>,
                                   140)],
             '$166pred': [(<numba.core.ir.Assign object at 0x000001F6DA516120>,
                           140)],
             '$16call.3': [(<numba.core.ir.Assign object at 0x000001F6DA4F6AB0>,
                            0)],
             '$192load_attr.2': [(<numba.core.ir.Assign object at 0x000001F6DA517170>,
                                  188)],
             '$214get_iter.5': [(<numba.core.ir.Assign object at 0x000001F6DA5173B0>,
                                 188)],
             '$220build_list.7': [(<numba.core.ir.Assign object at 0x000001F6DA5175F0>,
                                   188)],
             '$224for_iter.6': [(<numba.core.ir.Assign object at 0x000001F6DA517C20>,
                                 224)],
             '$224for_iter.7': [(<numba.core.ir.Assign object at 0x000001F6DA517D40>,
                                 224)],
             '$224for_iter.8': [(<numba.core.ir.Assign object at 0x000001F6DA517E60>,
                                 224)],
             '$230load_global.7': [(<numba.core.ir.Assign object at 0x000001F6DA5181D0>,
                                    228)],
             '$242call.10': [(<numba.core.ir.Assign object at 0x000001F6DA518470>,
                              228)],
             '$250list_append.11': [(<numba.core.ir.Assign object at 0x000001F6DA5185C0>,
                                     228)],
             '$250list_append.12': [(<numba.core.ir.Assign object at 0x000001F6DA5186E0>,
                                     228)],
             '$260call.7': [(<numba.core.ir.Assign object at 0x000001F6DA5189B0>,
                             254)],
             '$268format_value.8': [(<numba.core.ir.Assign object at 0x000001F6DA518B00>,
                                     254)],
             '$268format_value.9': [(<numba.core.ir.Assign object at 0x000001F6DA518C20>,
                                     254)],
             '$26compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6DA4F5CD0>,
                                  0)],
             '$272build_string.11': [(<numba.core.ir.Assign object at 0x000001F6DA518EF0>,
                                      254)],
             '$280format_value.2': [(<numba.core.ir.Assign object at 0x000001F6DA519430>,
                                     276)],
             '$280format_value.3': [(<numba.core.ir.Assign object at 0x000001F6DA519550>,
                                     276)],
             '$286format_value.6': [(<numba.core.ir.Assign object at 0x000001F6DA5198E0>,
                                     276)],
             '$286format_value.7': [(<numba.core.ir.Assign object at 0x000001F6DA519A00>,
                                     276)],
             '$288build_string.8': [(<numba.core.ir.Assign object at 0x000001F6DA519B80>,
                                     276)],
             '$288build_string.9': [(<numba.core.ir.Assign object at 0x000001F6DA519CA0>,
                                     276)],
             '$292load_global.11': [(<numba.core.ir.Assign object at 0x000001F6DA519FA0>,
                                     276)],
             '$304call.14': [(<numba.core.ir.Assign object at 0x000001F6DA51A240>,
                              276)],
             '$30pred': [(<numba.core.ir.Assign object at 0x000001F6DA4F6570>,
                          0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA4F6540>,
                                  0)],
             '$56load_attr.2': [(<numba.core.ir.Assign object at 0x000001F6DA4F76E0>,
                                 52)],
             '$78get_iter.5': [(<numba.core.ir.Assign object at 0x000001F6DA4F7920>,
                                52)],
             '$84build_list.7': [(<numba.core.ir.Assign object at 0x000001F6DA4F7D40>,
                                  52)],
             '$88for_iter.6': [(<numba.core.ir.Assign object at 0x000001F6DA5143E0>,
                                88)],
             '$88for_iter.7': [(<numba.core.ir.Assign object at 0x000001F6DA514500>,
                                88)],
             '$88for_iter.8': [(<numba.core.ir.Assign object at 0x000001F6DA514620>,
                                88)],
             '$94load_global.7': [(<numba.core.ir.Assign object at 0x000001F6DA5149B0>,
                                   92)],
             '$const134.10.6': [(<numba.core.ir.Assign object at 0x000001F6DA5154F0>,
                                 118)],
             '$const160.4.1': [(<numba.core.ir.Assign object at 0x000001F6DA515D30>,
                                140)],
             '$const188.0.2': [(<numba.core.ir.Assign object at 0x000001F6DA516ED0>,
                                188)],
             '$const190.1.5': [(<numba.core.ir.Assign object at 0x000001F6DA517020>,
                                188)],
             '$const24.4.1': [(<numba.core.ir.Assign object at 0x000001F6DA4F6C60>,
                               0)],
             '$const270.10.6': [(<numba.core.ir.Assign object at 0x000001F6DA518D40>,
                                 254)],
             '$const276.0.7': [(<numba.core.ir.Assign object at 0x000001F6DA5191C0>,
                                276)],
             '$const282.4.8': [(<numba.core.ir.Assign object at 0x000001F6DA519670>,
                                276)],
             '$const52.0.2': [(<numba.core.ir.Assign object at 0x000001F6DA4F7440>,
                               52)],
             '$const54.1.5': [(<numba.core.ir.Assign object at 0x000001F6DA4F7590>,
                               52)],
             '$phi118.0': [(<numba.core.ir.Assign object at 0x000001F6DA4F7FB0>,
                            52)],
             '$phi118.2': [(<numba.core.ir.Assign object at 0x000001F6DA5140B0>,
                            52)],
             '$phi118.3': [(<numba.core.ir.Assign object at 0x000001F6DA514170>,
                            52)],
             '$phi118.4': [(<numba.core.ir.Assign object at 0x000001F6DA4F7EF0>,
                            52)],
             '$phi224.5': [(<numba.core.ir.Assign object at 0x000001F6DA517980>,
                            188)],
             '$phi228.4': [(<numba.core.ir.Assign object at 0x000001F6DA5178C0>,
                            188)],
             '$phi228.6': [(<numba.core.ir.Assign object at 0x000001F6DA517EF0>,
                            224)],
             '$phi254.0': [(<numba.core.ir.Assign object at 0x000001F6DA5174A0>,
                            188)],
             '$phi254.2': [(<numba.core.ir.Assign object at 0x000001F6DA517680>,
                            188)],
             '$phi254.3': [(<numba.core.ir.Assign object at 0x000001F6DA517800>,
                            188)],
             '$phi254.4': [(<numba.core.ir.Assign object at 0x000001F6DA517740>,
                            188)],
             '$phi88.5': [(<numba.core.ir.Assign object at 0x000001F6DA4F7E30>,
                           52)],
             '$phi92.4': [(<numba.core.ir.Assign object at 0x000001F6DA4F6630>,
                           52)],
             '$phi92.6': [(<numba.core.ir.Assign object at 0x000001F6DA5146B0>,
                           88)],
             '$x80.6': [(<numba.core.ir.Assign object at 0x000001F6DA4F7BF0>,
                         52)],
             'bool166': [(<numba.core.ir.Assign object at 0x000001F6DA516000>,
                          140)],
             'bool30': [(<numba.core.ir.Assign object at 0x000001F6DA4F5D90>,
                         0)],
             'index_shape': [(<numba.core.ir.Assign object at 0x000001F6DA4F6A20>,
                              0)],
             'index_str': [(<numba.core.ir.Assign object at 0x000001F6DA519010>,
                            254)],
             'msg': [(<numba.core.ir.Assign object at 0x000001F6DA519DC0>,
                      276)],
             'shape_str': [(<numba.core.ir.Assign object at 0x000001F6DA5157C0>,
                            118)],
             'src_shapes': [(<numba.core.ir.Assign object at 0x000001F6DA4F6990>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x000001F6DA514860>, 92),
                   (<numba.core.ir.Assign object at 0x000001F6DA514FB0>, 118),
                   (<numba.core.ir.Assign object at 0x000001F6DA518080>, 228),
                   (<numba.core.ir.Assign object at 0x000001F6DA518800>, 254)]})
2025-07-23 17:15:45,171 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA515AF0>
2025-07-23 17:15:45,171 - DEBUG - Fix SSA violator on var x
2025-07-23 17:15:45,171 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,172 - DEBUG - on stmt: src_shapes = arg(0, name=src_shapes)
2025-07-23 17:15:45,172 - DEBUG - on stmt: index_shape = arg(1, name=index_shape)
2025-07-23 17:15:45,172 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,172 - DEBUG - on stmt: $16call.3 = const(int, 2)
2025-07-23 17:15:45,172 - DEBUG - on stmt: $const24.4.1 = const(int, 1)
2025-07-23 17:15:45,172 - DEBUG - on stmt: $26compare_op.5 = const(bool, False)
2025-07-23 17:15:45,172 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,173 - DEBUG - on stmt: $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,173 - DEBUG - on stmt: jump 52
2025-07-23 17:15:45,173 - DEBUG - ==== SSA block rewrite pass on 52
2025-07-23 17:15:45,173 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,173 - DEBUG - on stmt: $const52.0.2 = const(str, ()
2025-07-23 17:15:45,173 - DEBUG - on stmt: $const54.1.5 = const(str, , )
2025-07-23 17:15:45,173 - DEBUG - on stmt: $56load_attr.2 = getattr(value=$const54.1.5, attr=join)
2025-07-23 17:15:45,173 - DEBUG - on stmt: $78get_iter.5 = getiter(value=src_shapes)
2025-07-23 17:15:45,174 - DEBUG - on stmt: $x80.6 = undef()
2025-07-23 17:15:45,174 - DEBUG - on stmt: $84build_list.7 = build_list(items=[])
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi92.4 = $84build_list.7
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi88.5 = $78get_iter.5
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi118.4 = $84build_list.7
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi118.0 = $const52.0.2
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi118.2 = $56load_attr.2
2025-07-23 17:15:45,174 - DEBUG - on stmt: $phi118.3 = $x80.6
2025-07-23 17:15:45,174 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,175 - DEBUG - ==== SSA block rewrite pass on 88
2025-07-23 17:15:45,175 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,175 - DEBUG - on stmt: $88for_iter.6 = iternext(value=$phi88.5)
2025-07-23 17:15:45,175 - DEBUG - on stmt: $88for_iter.7 = pair_first(value=$88for_iter.6)
2025-07-23 17:15:45,175 - DEBUG - on stmt: $88for_iter.8 = pair_second(value=$88for_iter.6)
2025-07-23 17:15:45,175 - DEBUG - on stmt: $phi92.6 = $88for_iter.7
2025-07-23 17:15:45,175 - DEBUG - on stmt: branch $88for_iter.8, 92, 118
2025-07-23 17:15:45,175 - DEBUG - ==== SSA block rewrite pass on 92
2025-07-23 17:15:45,175 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,175 - DEBUG - on stmt: x = $phi92.6
2025-07-23 17:15:45,176 - DEBUG - first assign: x
2025-07-23 17:15:45,176 - DEBUG - replaced with: x = $phi92.6
2025-07-23 17:15:45,176 - DEBUG - on stmt: $94load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,176 - DEBUG - on stmt: $106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,176 - DEBUG - on stmt: $114list_append.11 = getattr(value=$phi92.4, attr=append)
2025-07-23 17:15:45,176 - DEBUG - on stmt: $114list_append.12 = call $114list_append.11($106call.10, func=$114list_append.11, args=(Var($106call.10, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,176 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,176 - DEBUG - ==== SSA block rewrite pass on 118
2025-07-23 17:15:45,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,177 - DEBUG - on stmt: x = $phi118.3
2025-07-23 17:15:45,177 - DEBUG - replaced with: x.1 = $phi118.3
2025-07-23 17:15:45,177 - DEBUG - on stmt: $124call.7 = call $phi118.2($phi118.4, func=$phi118.2, args=[Var($phi118.4, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,177 - DEBUG - on stmt: $132format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,177 - DEBUG - on stmt: $132format_value.9 = call $132format_value.8($124call.7, func=$132format_value.8, args=(Var($124call.7, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,177 - DEBUG - on stmt: $const134.10.6 = const(str, ))
2025-07-23 17:15:45,177 - DEBUG - on stmt: $136build_string.11 = $phi118.0 + $132format_value.9
2025-07-23 17:15:45,177 - DEBUG - on stmt: shape_str = $136build_string.11 + $const134.10.6
2025-07-23 17:15:45,177 - DEBUG - on stmt: jump 140
2025-07-23 17:15:45,177 - DEBUG - ==== SSA block rewrite pass on 140
2025-07-23 17:15:45,177 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,177 - DEBUG - on stmt: $140load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,177 - DEBUG - on stmt: $152call.3 = const(int, 2)
2025-07-23 17:15:45,179 - DEBUG - on stmt: $const160.4.1 = const(int, 1)
2025-07-23 17:15:45,179 - DEBUG - on stmt: $162compare_op.5 = const(bool, False)
2025-07-23 17:15:45,179 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,179 - DEBUG - on stmt: $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,179 - DEBUG - on stmt: jump 188
2025-07-23 17:15:45,179 - DEBUG - ==== SSA block rewrite pass on 188
2025-07-23 17:15:45,179 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,180 - DEBUG - on stmt: $const188.0.2 = const(str, ()
2025-07-23 17:15:45,180 - DEBUG - on stmt: $const190.1.5 = const(str, , )
2025-07-23 17:15:45,180 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$const190.1.5, attr=join)
2025-07-23 17:15:45,180 - DEBUG - on stmt: $214get_iter.5 = getiter(value=index_shape)
2025-07-23 17:15:45,180 - DEBUG - on stmt: $220build_list.7 = build_list(items=[])
2025-07-23 17:15:45,180 - DEBUG - on stmt: $phi254.0 = $const188.0.2
2025-07-23 17:15:45,180 - DEBUG - on stmt: $phi254.2 = $192load_attr.2
2025-07-23 17:15:45,180 - DEBUG - on stmt: $phi254.4 = $220build_list.7
2025-07-23 17:15:45,180 - DEBUG - on stmt: $phi254.3 = x
2025-07-23 17:15:45,181 - DEBUG - on stmt: $phi228.4 = $220build_list.7
2025-07-23 17:15:45,181 - DEBUG - on stmt: $phi224.5 = $214get_iter.5
2025-07-23 17:15:45,181 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,181 - DEBUG - ==== SSA block rewrite pass on 224
2025-07-23 17:15:45,181 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,181 - DEBUG - on stmt: $224for_iter.6 = iternext(value=$phi224.5)
2025-07-23 17:15:45,181 - DEBUG - on stmt: $224for_iter.7 = pair_first(value=$224for_iter.6)
2025-07-23 17:15:45,181 - DEBUG - on stmt: $224for_iter.8 = pair_second(value=$224for_iter.6)
2025-07-23 17:15:45,181 - DEBUG - on stmt: $phi228.6 = $224for_iter.7
2025-07-23 17:15:45,182 - DEBUG - on stmt: branch $224for_iter.8, 228, 254
2025-07-23 17:15:45,182 - DEBUG - ==== SSA block rewrite pass on 228
2025-07-23 17:15:45,182 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,182 - DEBUG - on stmt: x = $phi228.6
2025-07-23 17:15:45,182 - DEBUG - replaced with: x.2 = $phi228.6
2025-07-23 17:15:45,182 - DEBUG - on stmt: $230load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,182 - DEBUG - on stmt: $242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,182 - DEBUG - on stmt: $250list_append.11 = getattr(value=$phi228.4, attr=append)
2025-07-23 17:15:45,182 - DEBUG - on stmt: $250list_append.12 = call $250list_append.11($242call.10, func=$250list_append.11, args=(Var($242call.10, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,183 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,183 - DEBUG - ==== SSA block rewrite pass on 254
2025-07-23 17:15:45,183 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,183 - DEBUG - on stmt: x = $phi254.3
2025-07-23 17:15:45,183 - DEBUG - replaced with: x.3 = $phi254.3
2025-07-23 17:15:45,183 - DEBUG - on stmt: $260call.7 = call $phi254.2($phi254.4, func=$phi254.2, args=[Var($phi254.4, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,183 - DEBUG - on stmt: $268format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,183 - DEBUG - on stmt: $268format_value.9 = call $268format_value.8($260call.7, func=$268format_value.8, args=(Var($260call.7, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,184 - DEBUG - on stmt: $const270.10.6 = const(str, ))
2025-07-23 17:15:45,184 - DEBUG - on stmt: $272build_string.11 = $phi254.0 + $268format_value.9
2025-07-23 17:15:45,184 - DEBUG - on stmt: index_str = $272build_string.11 + $const270.10.6
2025-07-23 17:15:45,184 - DEBUG - on stmt: jump 276
2025-07-23 17:15:45,184 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:15:45,185 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,185 - DEBUG - on stmt: $const276.0.7 = const(str, cannot assign slice of shape )
2025-07-23 17:15:45,185 - DEBUG - on stmt: $280format_value.2 = global(str: <class 'str'>)
2025-07-23 17:15:45,185 - DEBUG - on stmt: $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,185 - DEBUG - on stmt: $const282.4.8 = const(str,  from input of shape )
2025-07-23 17:15:45,186 - DEBUG - on stmt: $286format_value.6 = global(str: <class 'str'>)
2025-07-23 17:15:45,186 - DEBUG - on stmt: $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,186 - DEBUG - on stmt: $288build_string.8 = $const276.0.7 + $280format_value.3
2025-07-23 17:15:45,186 - DEBUG - on stmt: $288build_string.9 = $288build_string.8 + $const282.4.8
2025-07-23 17:15:45,186 - DEBUG - on stmt: msg = $288build_string.9 + $286format_value.7
2025-07-23 17:15:45,186 - DEBUG - on stmt: $292load_global.11 = global(ValueError: <class 'ValueError'>)
2025-07-23 17:15:45,186 - DEBUG - on stmt: $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,187 - DEBUG - on stmt: <dynamic> raise <class 'ValueError'>(Var(msg, arrayobj.py:1659))
2025-07-23 17:15:45,187 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {92: [<numba.core.ir.Assign object at 0x000001F6DA51B770>],
             118: [<numba.core.ir.Assign object at 0x000001F6DA51BD10>],
             228: [<numba.core.ir.Assign object at 0x000001F6DA51AC90>],
             254: [<numba.core.ir.Assign object at 0x000001F6DA51A960>]})
2025-07-23 17:15:45,187 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,187 - DEBUG - on stmt: src_shapes = arg(0, name=src_shapes)
2025-07-23 17:15:45,188 - DEBUG - on stmt: index_shape = arg(1, name=index_shape)
2025-07-23 17:15:45,188 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,188 - DEBUG - on stmt: $16call.3 = const(int, 2)
2025-07-23 17:15:45,188 - DEBUG - on stmt: $const24.4.1 = const(int, 1)
2025-07-23 17:15:45,188 - DEBUG - on stmt: $26compare_op.5 = const(bool, False)
2025-07-23 17:15:45,188 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,188 - DEBUG - on stmt: $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,188 - DEBUG - on stmt: jump 52
2025-07-23 17:15:45,189 - DEBUG - ==== SSA block rewrite pass on 52
2025-07-23 17:15:45,189 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,189 - DEBUG - on stmt: $const52.0.2 = const(str, ()
2025-07-23 17:15:45,189 - DEBUG - on stmt: $const54.1.5 = const(str, , )
2025-07-23 17:15:45,189 - DEBUG - on stmt: $56load_attr.2 = getattr(value=$const54.1.5, attr=join)
2025-07-23 17:15:45,189 - DEBUG - on stmt: $78get_iter.5 = getiter(value=src_shapes)
2025-07-23 17:15:45,189 - DEBUG - on stmt: $x80.6 = undef()
2025-07-23 17:15:45,189 - DEBUG - on stmt: $84build_list.7 = build_list(items=[])
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi92.4 = $84build_list.7
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi88.5 = $78get_iter.5
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi118.4 = $84build_list.7
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi118.0 = $const52.0.2
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi118.2 = $56load_attr.2
2025-07-23 17:15:45,189 - DEBUG - on stmt: $phi118.3 = $x80.6
2025-07-23 17:15:45,190 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,190 - DEBUG - ==== SSA block rewrite pass on 88
2025-07-23 17:15:45,190 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,190 - DEBUG - on stmt: $88for_iter.6 = iternext(value=$phi88.5)
2025-07-23 17:15:45,190 - DEBUG - on stmt: $88for_iter.7 = pair_first(value=$88for_iter.6)
2025-07-23 17:15:45,190 - DEBUG - on stmt: $88for_iter.8 = pair_second(value=$88for_iter.6)
2025-07-23 17:15:45,190 - DEBUG - on stmt: $phi92.6 = $88for_iter.7
2025-07-23 17:15:45,190 - DEBUG - on stmt: branch $88for_iter.8, 92, 118
2025-07-23 17:15:45,191 - DEBUG - ==== SSA block rewrite pass on 92
2025-07-23 17:15:45,191 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,191 - DEBUG - on stmt: x = $phi92.6
2025-07-23 17:15:45,191 - DEBUG - on stmt: $94load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,192 - DEBUG - on stmt: $106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,192 - DEBUG - find_def var='x' stmt=$106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,192 - DEBUG - on stmt: $114list_append.11 = getattr(value=$phi92.4, attr=append)
2025-07-23 17:15:45,192 - DEBUG - on stmt: $114list_append.12 = call $114list_append.11($106call.10, func=$114list_append.11, args=(Var($106call.10, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,192 - DEBUG - on stmt: jump 88
2025-07-23 17:15:45,192 - DEBUG - ==== SSA block rewrite pass on 118
2025-07-23 17:15:45,192 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,193 - DEBUG - on stmt: x.1 = $phi118.3
2025-07-23 17:15:45,193 - DEBUG - on stmt: $124call.7 = call $phi118.2($phi118.4, func=$phi118.2, args=[Var($phi118.4, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,193 - DEBUG - on stmt: $132format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,193 - DEBUG - on stmt: $132format_value.9 = call $132format_value.8($124call.7, func=$132format_value.8, args=(Var($124call.7, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,193 - DEBUG - on stmt: $const134.10.6 = const(str, ))
2025-07-23 17:15:45,193 - DEBUG - on stmt: $136build_string.11 = $phi118.0 + $132format_value.9
2025-07-23 17:15:45,193 - DEBUG - on stmt: shape_str = $136build_string.11 + $const134.10.6
2025-07-23 17:15:45,193 - DEBUG - on stmt: jump 140
2025-07-23 17:15:45,195 - DEBUG - ==== SSA block rewrite pass on 140
2025-07-23 17:15:45,195 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,195 - DEBUG - on stmt: $140load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:45,195 - DEBUG - on stmt: $152call.3 = const(int, 2)
2025-07-23 17:15:45,195 - DEBUG - on stmt: $const160.4.1 = const(int, 1)
2025-07-23 17:15:45,195 - DEBUG - on stmt: $162compare_op.5 = const(bool, False)
2025-07-23 17:15:45,195 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,195 - DEBUG - on stmt: $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,195 - DEBUG - on stmt: jump 188
2025-07-23 17:15:45,196 - DEBUG - ==== SSA block rewrite pass on 188
2025-07-23 17:15:45,196 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,196 - DEBUG - on stmt: $const188.0.2 = const(str, ()
2025-07-23 17:15:45,196 - DEBUG - on stmt: $const190.1.5 = const(str, , )
2025-07-23 17:15:45,196 - DEBUG - on stmt: $192load_attr.2 = getattr(value=$const190.1.5, attr=join)
2025-07-23 17:15:45,196 - DEBUG - on stmt: $214get_iter.5 = getiter(value=index_shape)
2025-07-23 17:15:45,196 - DEBUG - on stmt: $220build_list.7 = build_list(items=[])
2025-07-23 17:15:45,196 - DEBUG - on stmt: $phi254.0 = $const188.0.2
2025-07-23 17:15:45,196 - DEBUG - on stmt: $phi254.2 = $192load_attr.2
2025-07-23 17:15:45,197 - DEBUG - on stmt: $phi254.4 = $220build_list.7
2025-07-23 17:15:45,197 - DEBUG - on stmt: $phi254.3 = x
2025-07-23 17:15:45,197 - DEBUG - find_def var='x' stmt=$phi254.3 = x
2025-07-23 17:15:45,197 - DEBUG - find_def_from_top label 188
2025-07-23 17:15:45,197 - DEBUG - idom 140 from label 188
2025-07-23 17:15:45,197 - DEBUG - find_def_from_bottom label 140
2025-07-23 17:15:45,197 - DEBUG - find_def_from_top label 140
2025-07-23 17:15:45,197 - DEBUG - idom 118 from label 140
2025-07-23 17:15:45,197 - DEBUG - find_def_from_bottom label 118
2025-07-23 17:15:45,197 - DEBUG - replaced with: $phi254.3 = x.1
2025-07-23 17:15:45,198 - DEBUG - on stmt: $phi228.4 = $220build_list.7
2025-07-23 17:15:45,198 - DEBUG - on stmt: $phi224.5 = $214get_iter.5
2025-07-23 17:15:45,198 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,198 - DEBUG - ==== SSA block rewrite pass on 224
2025-07-23 17:15:45,198 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,198 - DEBUG - on stmt: $224for_iter.6 = iternext(value=$phi224.5)
2025-07-23 17:15:45,198 - DEBUG - on stmt: $224for_iter.7 = pair_first(value=$224for_iter.6)
2025-07-23 17:15:45,198 - DEBUG - on stmt: $224for_iter.8 = pair_second(value=$224for_iter.6)
2025-07-23 17:15:45,198 - DEBUG - on stmt: $phi228.6 = $224for_iter.7
2025-07-23 17:15:45,198 - DEBUG - on stmt: branch $224for_iter.8, 228, 254
2025-07-23 17:15:45,198 - DEBUG - ==== SSA block rewrite pass on 228
2025-07-23 17:15:45,198 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,198 - DEBUG - on stmt: x.2 = $phi228.6
2025-07-23 17:15:45,198 - DEBUG - on stmt: $230load_global.7 = global(str: <class 'str'>)
2025-07-23 17:15:45,199 - DEBUG - on stmt: $242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,199 - DEBUG - find_def var='x' stmt=$242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,200 - DEBUG - replaced with: $242call.10 = call $230load_global.7(x.2, func=$230load_global.7, args=[Var(x.2, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,200 - DEBUG - on stmt: $250list_append.11 = getattr(value=$phi228.4, attr=append)
2025-07-23 17:15:45,200 - DEBUG - on stmt: $250list_append.12 = call $250list_append.11($242call.10, func=$250list_append.11, args=(Var($242call.10, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,200 - DEBUG - on stmt: jump 224
2025-07-23 17:15:45,200 - DEBUG - ==== SSA block rewrite pass on 254
2025-07-23 17:15:45,200 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,201 - DEBUG - on stmt: x.3 = $phi254.3
2025-07-23 17:15:45,201 - DEBUG - on stmt: $260call.7 = call $phi254.2($phi254.4, func=$phi254.2, args=[Var($phi254.4, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,201 - DEBUG - on stmt: $268format_value.8 = global(str: <class 'str'>)
2025-07-23 17:15:45,201 - DEBUG - on stmt: $268format_value.9 = call $268format_value.8($260call.7, func=$268format_value.8, args=(Var($260call.7, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,201 - DEBUG - on stmt: $const270.10.6 = const(str, ))
2025-07-23 17:15:45,201 - DEBUG - on stmt: $272build_string.11 = $phi254.0 + $268format_value.9
2025-07-23 17:15:45,202 - DEBUG - on stmt: index_str = $272build_string.11 + $const270.10.6
2025-07-23 17:15:45,202 - DEBUG - on stmt: jump 276
2025-07-23 17:15:45,202 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:15:45,202 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA51BD70>
2025-07-23 17:15:45,202 - DEBUG - on stmt: $const276.0.7 = const(str, cannot assign slice of shape )
2025-07-23 17:15:45,202 - DEBUG - on stmt: $280format_value.2 = global(str: <class 'str'>)
2025-07-23 17:15:45,202 - DEBUG - on stmt: $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,203 - DEBUG - on stmt: $const282.4.8 = const(str,  from input of shape )
2025-07-23 17:15:45,203 - DEBUG - on stmt: $286format_value.6 = global(str: <class 'str'>)
2025-07-23 17:15:45,203 - DEBUG - on stmt: $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,203 - DEBUG - on stmt: $288build_string.8 = $const276.0.7 + $280format_value.3
2025-07-23 17:15:45,203 - DEBUG - on stmt: $288build_string.9 = $288build_string.8 + $const282.4.8
2025-07-23 17:15:45,203 - DEBUG - on stmt: msg = $288build_string.9 + $286format_value.7
2025-07-23 17:15:45,203 - DEBUG - on stmt: $292load_global.11 = global(ValueError: <class 'ValueError'>)
2025-07-23 17:15:45,204 - DEBUG - on stmt: $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,204 - DEBUG - on stmt: <dynamic> raise <class 'ValueError'>(Var(msg, arrayobj.py:1659))
2025-07-23 17:15:45,216 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1019)
           2	RESUME(arg=0, lineno=1019)
           4	LOAD_CONST(arg=1, lineno=1020)
           6	STORE_FAST(arg=1, lineno=1020)
           8	LOAD_GLOBAL(arg=1, lineno=1021)
          18	LOAD_FAST(arg=0, lineno=1021)
          20	LOAD_FAST(arg=1, lineno=1021)
          22	CALL(arg=2, lineno=1021)
          30	LOAD_CONST(arg=2, lineno=1021)
          32	COMPARE_OP(arg=40, lineno=1021)
          36	POP_JUMP_IF_FALSE(arg=17, lineno=1021)
          38	PUSH_NULL(arg=None, lineno=1022)
          40	LOAD_GLOBAL(arg=3, lineno=1022)
          50	LOAD_FAST(arg=0, lineno=1022)
          52	LOAD_FAST(arg=1, lineno=1022)
          54	CALL(arg=2, lineno=1022)
          62	CALL(arg=0, lineno=1022)
          70	RETURN_VALUE(arg=None, lineno=1022)
>         72	LOAD_GLOBAL(arg=5, lineno=1024)
          82	LOAD_FAST(arg=0, lineno=1024)
          84	CALL(arg=1, lineno=1024)
          92	RETURN_VALUE(arg=None, lineno=1024)
2025-07-23 17:15:45,217 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,217 - DEBUG - stack: []
2025-07-23 17:15:45,217 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,217 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1019)
2025-07-23 17:15:45,217 - DEBUG - stack []
2025-07-23 17:15:45,217 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1019)
2025-07-23 17:15:45,217 - DEBUG - stack []
2025-07-23 17:15:45,217 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1020)
2025-07-23 17:15:45,218 - DEBUG - stack []
2025-07-23 17:15:45,218 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=1020)
2025-07-23 17:15:45,218 - DEBUG - stack ['$const4.0.1']
2025-07-23 17:15:45,218 - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=1021)
2025-07-23 17:15:45,218 - DEBUG - stack []
2025-07-23 17:15:45,218 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1021)
2025-07-23 17:15:45,218 - DEBUG - stack ['$null$8.2', '$8load_global.1']
2025-07-23 17:15:45,219 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1021)
2025-07-23 17:15:45,219 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$object18.3']
2025-07-23 17:15:45,219 - DEBUG - dispatch pc=22, inst=CALL(arg=2, lineno=1021)
2025-07-23 17:15:45,219 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$object18.3', '$attr20.4']
2025-07-23 17:15:45,219 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=1021)
2025-07-23 17:15:45,219 - DEBUG - stack ['$22call.5']
2025-07-23 17:15:45,219 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=40, lineno=1021)
2025-07-23 17:15:45,219 - DEBUG - stack ['$22call.5', '$const30.6.2']
2025-07-23 17:15:45,220 - DEBUG - dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1021)
2025-07-23 17:15:45,220 - DEBUG - stack ['$32compare_op.7']
2025-07-23 17:15:45,220 - DEBUG - end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,220 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2025-07-23 17:15:45,220 - DEBUG - stack: []
2025-07-23 17:15:45,220 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=0)
2025-07-23 17:15:45,220 - DEBUG - dispatch pc=38, inst=PUSH_NULL(arg=None, lineno=1022)
2025-07-23 17:15:45,221 - DEBUG - stack []
2025-07-23 17:15:45,221 - DEBUG - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=1022)
2025-07-23 17:15:45,221 - DEBUG - stack ['$null$38.0']
2025-07-23 17:15:45,221 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=1022)
2025-07-23 17:15:45,221 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1']
2025-07-23 17:15:45,221 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=1022)
2025-07-23 17:15:45,221 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1', '$object50.3']
2025-07-23 17:15:45,221 - DEBUG - dispatch pc=54, inst=CALL(arg=2, lineno=1022)
2025-07-23 17:15:45,221 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1', '$object50.3', '$attr52.4']
2025-07-23 17:15:45,222 - DEBUG - dispatch pc=62, inst=CALL(arg=0, lineno=1022)
2025-07-23 17:15:45,222 - DEBUG - stack ['$null$38.0', '$54call.5']
2025-07-23 17:15:45,222 - DEBUG - dispatch pc=70, inst=RETURN_VALUE(arg=None, lineno=1022)
2025-07-23 17:15:45,222 - DEBUG - stack ['$62call.6']
2025-07-23 17:15:45,222 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,222 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0)])
2025-07-23 17:15:45,222 - DEBUG - stack: []
2025-07-23 17:15:45,222 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2025-07-23 17:15:45,222 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=5, lineno=1024)
2025-07-23 17:15:45,223 - DEBUG - stack []
2025-07-23 17:15:45,223 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=1024)
2025-07-23 17:15:45,223 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2025-07-23 17:15:45,223 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=1024)
2025-07-23 17:15:45,223 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$object82.2']
2025-07-23 17:15:45,223 - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=1024)
2025-07-23 17:15:45,223 - DEBUG - stack ['$84call.3']
2025-07-23 17:15:45,223 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,223 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,224 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set()})
2025-07-23 17:15:45,224 - DEBUG - defmap: {}
2025-07-23 17:15:45,224 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,224 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,224 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,224 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,224 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,224 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'idx': 0, 'res': '$8load_global.1'}), (18, {'res': '$object18.3'}), (20, {'res': '$attr20.4'}), (22, {'func': '$8load_global.1', 'args': ['$object18.3', '$attr20.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'res': '$const30.6.2'}), (32, {'lhs': '$22call.5', 'rhs': '$const30.6.2', 'res': '$32compare_op.7'}), (36, {'pred': '$32compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: (), 72: ()})
2025-07-23 17:15:45,225 - DEBUG - block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {}), (40, {'idx': 1, 'res': '$40load_global.1'}), (50, {'res': '$object50.3'}), (52, {'res': '$attr52.4'}), (54, {'func': '$40load_global.1', 'args': ['$object50.3', '$attr52.4'], 'kw_names': None, 'res': '$54call.5'}), (62, {'func': '$54call.5', 'args': [], 'kw_names': None, 'res': '$62call.6'}), (70, {'retval': '$62call.6', 'castval': '$70return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,225 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 2, 'res': '$72load_global.0'}), (82, {'res': '$object82.2'}), (84, {'func': '$72load_global.0', 'args': ['$object82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'retval': '$84call.3', 'castval': '$92return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,225 - DEBUG - label 0:
    object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    $8load_global.1 = global(hasattr: <built-in function hasattr>) ['$8load_global.1']
    $22call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.5', '$8load_global.1', 'attr', 'object']
    $const30.6.2 = const(bool, True)         ['$const30.6.2']
    $32compare_op.7 = $22call.5 == $const30.6.2 ['$22call.5', '$32compare_op.7', '$const30.6.2']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($32compare_op.7, func=bool36, args=(Var($32compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.7', '$36pred', 'bool36']
    branch $36pred, 38, 72                   ['$36pred']
label 38:
    $40load_global.1 = global(getattr: <built-in function getattr>) ['$40load_global.1']
    $54call.5 = call $40load_global.1(object, attr, func=$40load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.1', '$54call.5', 'attr', 'object']
    $62call.6 = call $54call.5(func=$54call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$54call.5', '$62call.6']
    $70return_value.7 = cast(value=$62call.6) ['$62call.6', '$70return_value.7']
    return $70return_value.7                 ['$70return_value.7']
label 72:
    $72load_global.0 = global(repr: <built-in function repr>) ['$72load_global.0']
    $84call.3 = call $72load_global.0(object, func=$72load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', 'object']
    $92return_value.4 = cast(value=$84call.3) ['$84call.3', '$92return_value.4']
    return $92return_value.4                 ['$92return_value.4']

2025-07-23 17:15:45,354 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,354 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA537B00>
2025-07-23 17:15:45,354 - DEBUG - on stmt: object = arg(0, name=object)
2025-07-23 17:15:45,354 - DEBUG - on stmt: attr = const(str, __str__)
2025-07-23 17:15:45,354 - DEBUG - on stmt: $8load_global.1 = global(hasattr: <built-in function hasattr>)
2025-07-23 17:15:45,355 - DEBUG - on stmt: $22call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,355 - DEBUG - on stmt: $const30.6.2 = const(bool, True)
2025-07-23 17:15:45,355 - DEBUG - on stmt: $32compare_op.7 = $22call.5 == $const30.6.2
2025-07-23 17:15:45,355 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,355 - DEBUG - on stmt: $36pred = call bool36($32compare_op.7, func=bool36, args=(Var($32compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,356 - DEBUG - on stmt: branch $36pred, 38, 72
2025-07-23 17:15:45,356 - DEBUG - ==== SSA block analysis pass on 38
2025-07-23 17:15:45,356 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA537B00>
2025-07-23 17:15:45,356 - DEBUG - on stmt: $40load_global.1 = global(getattr: <built-in function getattr>)
2025-07-23 17:15:45,356 - DEBUG - on stmt: $54call.5 = call $40load_global.1(object, attr, func=$40load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,357 - DEBUG - on stmt: $62call.6 = call $54call.5(func=$54call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,357 - DEBUG - on stmt: $70return_value.7 = cast(value=$62call.6)
2025-07-23 17:15:45,357 - DEBUG - on stmt: return $70return_value.7
2025-07-23 17:15:45,357 - DEBUG - ==== SSA block analysis pass on 72
2025-07-23 17:15:45,357 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA537B00>
2025-07-23 17:15:45,357 - DEBUG - on stmt: $72load_global.0 = global(repr: <built-in function repr>)
2025-07-23 17:15:45,358 - DEBUG - on stmt: $84call.3 = call $72load_global.0(object, func=$72load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,358 - DEBUG - on stmt: $92return_value.4 = cast(value=$84call.3)
2025-07-23 17:15:45,358 - DEBUG - on stmt: return $92return_value.4
2025-07-23 17:15:45,358 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.5': [(<numba.core.ir.Assign object at 0x000001F6DA536240>,
                            0)],
             '$32compare_op.7': [(<numba.core.ir.Assign object at 0x000001F6DA5364E0>,
                                  0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x000001F6DA536780>,
                          0)],
             '$40load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA536870>,
                                   38)],
             '$54call.5': [(<numba.core.ir.Assign object at 0x000001F6DA536C00>,
                            38)],
             '$62call.6': [(<numba.core.ir.Assign object at 0x000001F6DA536D80>,
                            38)],
             '$70return_value.7': [(<numba.core.ir.Assign object at 0x000001F6DA536EA0>,
                                    38)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA536FF0>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x000001F6DA537290>,
                            72)],
             '$8load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA535EB0>,
                                  0)],
             '$92return_value.4': [(<numba.core.ir.Assign object at 0x000001F6DA5373B0>,
                                    72)],
             '$const30.6.2': [(<numba.core.ir.Assign object at 0x000001F6DA536360>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x000001F6DA535C70>, 0)],
             'bool36': [(<numba.core.ir.Assign object at 0x000001F6DA536630>,
                         0)],
             'object': [(<numba.core.ir.Assign object at 0x000001F6DA534200>,
                         0)]})
2025-07-23 17:15:45,359 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA537B00>
2025-07-23 17:15:45,364 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:45,364 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,365 - DEBUG - stack: []
2025-07-23 17:15:45,365 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,365 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:45,365 - DEBUG - stack []
2025-07-23 17:15:45,365 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:45,365 - DEBUG - stack []
2025-07-23 17:15:45,365 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:45,366 - DEBUG - stack []
2025-07-23 17:15:45,366 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:45,366 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:45,366 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:45,366 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:45,366 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:45,366 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:45,366 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:45,367 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:45,367 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,367 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,367 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:45,367 - DEBUG - defmap: {}
2025-07-23 17:15:45,367 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,367 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,367 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,367 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,367 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,369 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,369 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:45,370 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,371 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA537710>
2025-07-23 17:15:45,371 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:45,371 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:45,372 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:45,372 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,372 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:45,373 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:45,373 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6DA554590>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6DA554470>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA447140>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6DA446F30>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6DA4E8650>, 0)]})
2025-07-23 17:15:45,373 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA537710>
2025-07-23 17:15:45,430 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m - Of which 2 did not match due to:
 Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
   With argument(s): '(int64, unicode_type)':[0m
[1m  Rejected as the implementation raised a specific error:
    RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:45,607 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m  - Of which 2 did not match due to:
  Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
    With argument(s): '(int64, unicode_type)':[0m
[1m   Rejected as the implementation raised a specific error:
     RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:45,612 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:45,612 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,612 - DEBUG - stack: []
2025-07-23 17:15:45,612 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,612 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:45,612 - DEBUG - stack []
2025-07-23 17:15:45,613 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:45,613 - DEBUG - stack []
2025-07-23 17:15:45,613 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:45,613 - DEBUG - stack []
2025-07-23 17:15:45,613 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:45,613 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:45,614 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:45,614 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:45,614 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:45,614 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:45,614 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:45,614 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:45,614 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,614 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,615 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:45,615 - DEBUG - defmap: {}
2025-07-23 17:15:45,615 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,615 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,615 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,615 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,615 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,615 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,616 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:45,618 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,618 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA557680>
2025-07-23 17:15:45,618 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:45,618 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:45,619 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:45,619 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,619 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:45,619 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:45,619 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6DA6242C0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6DA6243E0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA557EF0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6DA557D70>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6DA557C80>, 0)]})
2025-07-23 17:15:45,620 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA557680>
2025-07-23 17:15:45,642 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          14	LOAD_FAST(arg=0, lineno=955)
          16	LOAD_FAST(arg=1, lineno=955)
          18	LOAD_GLOBAL(arg=2, lineno=955)
          28	CALL(arg=3, lineno=955)
          36	RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:45,642 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,642 - DEBUG - stack: []
2025-07-23 17:15:45,642 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,643 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=954)
2025-07-23 17:15:45,643 - DEBUG - stack []
2025-07-23 17:15:45,643 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=954)
2025-07-23 17:15:45,643 - DEBUG - stack []
2025-07-23 17:15:45,644 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
2025-07-23 17:15:45,644 - DEBUG - stack []
2025-07-23 17:15:45,644 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=955)
2025-07-23 17:15:45,644 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:45,644 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=955)
2025-07-23 17:15:45,645 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:45,645 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=955)
2025-07-23 17:15:45,645 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:45,645 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=955)
2025-07-23 17:15:45,645 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3', '$18load_global.4']
2025-07-23 17:15:45,645 - DEBUG - dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:45,646 - DEBUG - stack ['$28call.5']
2025-07-23 17:15:45,646 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,646 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,646 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:45,646 - DEBUG - defmap: {}
2025-07-23 17:15:45,646 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,647 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,647 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,647 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,647 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,647 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'idx': 1, 'res': '$18load_global.4'}), (28, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3', '$18load_global.4'], 'kw_names': None, 'res': '$28call.5'}), (36, {'retval': '$28call.5', 'castval': '$36return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,648 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $18load_global.4 = global(_getattr_default: _getattr_default_type()) ['$18load_global.4']
    $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.4', '$28call.5', '$4load_global.0', 'name', 'obj']
    $36return_value.6 = cast(value=$28call.5) ['$28call.5', '$36return_value.6']
    return $36return_value.6                 ['$36return_value.6']

2025-07-23 17:15:45,650 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,650 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA62B800>
2025-07-23 17:15:45,650 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:45,650 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:45,650 - DEBUG - on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
2025-07-23 17:15:45,651 - DEBUG - on stmt: $18load_global.4 = global(_getattr_default: _getattr_default_type())
2025-07-23 17:15:45,651 - DEBUG - on stmt: $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,651 - DEBUG - on stmt: $36return_value.6 = cast(value=$28call.5)
2025-07-23 17:15:45,652 - DEBUG - on stmt: return $36return_value.6
2025-07-23 17:15:45,652 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18load_global.4': [(<numba.core.ir.Assign object at 0x000001F6DA63C2C0>,
                                   0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x000001F6DA63C470>,
                            0)],
             '$36return_value.6': [(<numba.core.ir.Assign object at 0x000001F6DA63C590>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA62BF50>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6DA62BDD0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6DA62B680>, 0)]})
2025-07-23 17:15:45,653 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA62B800>
2025-07-23 17:15:45,674 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2572)
           2	COPY_FREE_VARS(arg=1, lineno=2572)
           4	RESUME(arg=0, lineno=2572)
           6	LOAD_CONST(arg=1, lineno=2573)
           8	STORE_FAST(arg=1, lineno=2573)
          10	LOAD_FAST(arg=0, lineno=2574)
          12	LOAD_CONST(arg=2, lineno=2574)
          14	COMPARE_OP(arg=2, lineno=2574)
          18	POP_JUMP_IF_FALSE(arg=5, lineno=2574)
          20	LOAD_FAST(arg=0, lineno=2575)
          22	UNARY_NEGATIVE(arg=None, lineno=2575)
          24	STORE_FAST(arg=0, lineno=2575)
          26	LOAD_CONST(arg=3, lineno=2576)
          28	STORE_FAST(arg=1, lineno=2576)
>         30	LOAD_FAST(arg=0, lineno=2577)
          32	LOAD_CONST(arg=2, lineno=2577)
          34	COMPARE_OP(arg=40, lineno=2577)
          38	POP_JUMP_IF_FALSE(arg=1, lineno=2577)
          40	RETURN_CONST(arg=4, lineno=2578)
>         42	LOAD_FAST(arg=1, lineno=2579)
          44	LOAD_CONST(arg=5, lineno=2579)
          46	BINARY_OP(arg=0, lineno=2579)
          50	LOAD_GLOBAL(arg=1, lineno=2579)
          60	LOAD_GLOBAL(arg=3, lineno=2579)
          70	LOAD_ATTR(arg=4, lineno=2579)
          90	LOAD_GLOBAL(arg=3, lineno=2579)
         100	LOAD_ATTR(arg=6, lineno=2579)
         120	LOAD_FAST(arg=0, lineno=2579)
         122	CALL(arg=1, lineno=2579)
         130	CALL(arg=1, lineno=2579)
         138	CALL(arg=1, lineno=2579)
         146	BINARY_OP(arg=0, lineno=2579)
         150	STORE_FAST(arg=2, lineno=2579)
         152	LOAD_GLOBAL(arg=8, lineno=2580)
         162	STORE_FAST(arg=3, lineno=2580)
         164	LOAD_GLOBAL(arg=11, lineno=2581)
         174	LOAD_FAST(arg=3, lineno=2581)
         176	CALL(arg=1, lineno=2581)
         184	STORE_FAST(arg=4, lineno=2581)
         186	LOAD_GLOBAL(arg=13, lineno=2582)
         196	LOAD_FAST(arg=3, lineno=2582)
         198	LOAD_FAST(arg=4, lineno=2582)
         200	LOAD_FAST(arg=2, lineno=2582)
         202	LOAD_CONST(arg=3, lineno=2582)
         204	CALL(arg=4, lineno=2582)
         212	STORE_FAST(arg=5, lineno=2582)
         214	LOAD_FAST(arg=1, lineno=2583)
         216	POP_JUMP_IF_FALSE(arg=22, lineno=2583)
         218	LOAD_GLOBAL(arg=15, lineno=2584)
         228	LOAD_FAST(arg=5, lineno=2584)
         230	LOAD_CONST(arg=2, lineno=2584)
         232	LOAD_GLOBAL(arg=17, lineno=2584)
         242	LOAD_CONST(arg=6, lineno=2584)
         244	CALL(arg=1, lineno=2584)
         252	CALL(arg=3, lineno=2584)
         260	POP_TOP(arg=None, lineno=2584)
>        262	LOAD_FAST(arg=2, lineno=2585)
         264	LOAD_CONST(arg=5, lineno=2585)
         266	BINARY_OP(arg=10, lineno=2585)
         270	STORE_FAST(arg=6, lineno=2585)
         272	LOAD_FAST(arg=0, lineno=2586)
         274	LOAD_CONST(arg=2, lineno=2586)
         276	COMPARE_OP(arg=68, lineno=2586)
         280	POP_JUMP_IF_FALSE(arg=53, lineno=2586)
>        282	LOAD_GLOBAL(arg=19, lineno=2587)
         292	LOAD_FAST(arg=0, lineno=2587)
         294	LOAD_DEREF(arg=9, lineno=2587)
         296	CALL(arg=2, lineno=2587)
         304	UNPACK_SEQUENCE(arg=2, lineno=2587)
         308	STORE_FAST(arg=0, lineno=2587)
         310	STORE_FAST(arg=7, lineno=2587)
         312	LOAD_GLOBAL(arg=17, lineno=2588)
         322	LOAD_CONST(arg=4, lineno=2588)
         324	CALL(arg=1, lineno=2588)
         332	LOAD_FAST(arg=7, lineno=2588)
         334	BINARY_OP(arg=0, lineno=2588)
         338	STORE_FAST(arg=8, lineno=2588)
         340	LOAD_GLOBAL(arg=15, lineno=2589)
         350	LOAD_FAST(arg=5, lineno=2589)
         352	LOAD_FAST(arg=6, lineno=2589)
         354	LOAD_FAST(arg=8, lineno=2589)
         356	CALL(arg=3, lineno=2589)
         364	POP_TOP(arg=None, lineno=2589)
         366	LOAD_FAST(arg=6, lineno=2590)
         368	LOAD_CONST(arg=5, lineno=2590)
         370	BINARY_OP(arg=23, lineno=2590)
         374	STORE_FAST(arg=6, lineno=2590)
         376	LOAD_FAST(arg=0, lineno=2586)
         378	LOAD_CONST(arg=2, lineno=2586)
         380	COMPARE_OP(arg=68, lineno=2586)
         384	POP_JUMP_IF_FALSE(arg=1, lineno=2586)
         386	JUMP_BACKWARD(arg=53, lineno=2586)
>        388	LOAD_FAST(arg=5, lineno=2591)
         390	RETURN_VALUE(arg=None, lineno=2591)
2025-07-23 17:15:45,675 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,675 - DEBUG - stack: []
2025-07-23 17:15:45,675 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,675 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2572)
2025-07-23 17:15:45,676 - DEBUG - stack []
2025-07-23 17:15:45,676 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=2572)
2025-07-23 17:15:45,676 - DEBUG - stack []
2025-07-23 17:15:45,676 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=2572)
2025-07-23 17:15:45,676 - DEBUG - stack []
2025-07-23 17:15:45,676 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2573)
2025-07-23 17:15:45,677 - DEBUG - stack []
2025-07-23 17:15:45,677 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=2573)
2025-07-23 17:15:45,677 - DEBUG - stack ['$const6.0.1']
2025-07-23 17:15:45,677 - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2574)
2025-07-23 17:15:45,677 - DEBUG - stack []
2025-07-23 17:15:45,677 - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2574)
2025-07-23 17:15:45,677 - DEBUG - stack ['$n10.1']
2025-07-23 17:15:45,677 - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=2, lineno=2574)
2025-07-23 17:15:45,677 - DEBUG - stack ['$n10.1', '$const12.2.2']
2025-07-23 17:15:45,679 - DEBUG - dispatch pc=18, inst=POP_JUMP_IF_FALSE(arg=5, lineno=2574)
2025-07-23 17:15:45,679 - DEBUG - stack ['$14compare_op.3']
2025-07-23 17:15:45,679 - DEBUG - end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,679 - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
2025-07-23 17:15:45,679 - DEBUG - stack: []
2025-07-23 17:15:45,680 - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=0)
2025-07-23 17:15:45,680 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=2575)
2025-07-23 17:15:45,680 - DEBUG - stack []
2025-07-23 17:15:45,680 - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=2575)
2025-07-23 17:15:45,680 - DEBUG - stack ['$n20.0']
2025-07-23 17:15:45,680 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=0, lineno=2575)
2025-07-23 17:15:45,681 - DEBUG - stack ['$22unary_negative.1']
2025-07-23 17:15:45,681 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=2576)
2025-07-23 17:15:45,681 - DEBUG - stack []
2025-07-23 17:15:45,681 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=2576)
2025-07-23 17:15:45,681 - DEBUG - stack ['$const26.2.3']
2025-07-23 17:15:45,681 - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,681 - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
2025-07-23 17:15:45,681 - DEBUG - stack: []
2025-07-23 17:15:45,682 - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-07-23 17:15:45,682 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=2577)
2025-07-23 17:15:45,682 - DEBUG - stack []
2025-07-23 17:15:45,682 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=2577)
2025-07-23 17:15:45,682 - DEBUG - stack ['$n30.0']
2025-07-23 17:15:45,682 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=40, lineno=2577)
2025-07-23 17:15:45,682 - DEBUG - stack ['$n30.0', '$const32.1.2']
2025-07-23 17:15:45,682 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=1, lineno=2577)
2025-07-23 17:15:45,682 - DEBUG - stack ['$34compare_op.2']
2025-07-23 17:15:45,682 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,683 - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:15:45,683 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:15:45,683 - DEBUG - stack: []
2025-07-23 17:15:45,683 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-07-23 17:15:45,683 - DEBUG - dispatch pc=40, inst=RETURN_CONST(arg=4, lineno=2578)
2025-07-23 17:15:45,683 - DEBUG - stack []
2025-07-23 17:15:45,683 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,683 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:15:45,683 - DEBUG - stack: []
2025-07-23 17:15:45,684 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:45,684 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=2579)
2025-07-23 17:15:45,684 - DEBUG - stack []
2025-07-23 17:15:45,684 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=5, lineno=2579)
2025-07-23 17:15:45,684 - DEBUG - stack ['$flag42.0']
2025-07-23 17:15:45,684 - DEBUG - dispatch pc=46, inst=BINARY_OP(arg=0, lineno=2579)
2025-07-23 17:15:45,684 - DEBUG - stack ['$flag42.0', '$const44.1.5']
2025-07-23 17:15:45,685 - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=1, lineno=2579)
2025-07-23 17:15:45,685 - DEBUG - stack ['$binop_add46.2']
2025-07-23 17:15:45,685 - DEBUG - dispatch pc=60, inst=LOAD_GLOBAL(arg=3, lineno=2579)
2025-07-23 17:15:45,685 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3']
2025-07-23 17:15:45,685 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=4, lineno=2579)
2025-07-23 17:15:45,685 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$60load_global.5']
2025-07-23 17:15:45,686 - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=3, lineno=2579)
2025-07-23 17:15:45,686 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$70load_attr.7']
2025-07-23 17:15:45,686 - DEBUG - dispatch pc=100, inst=LOAD_ATTR(arg=6, lineno=2579)
2025-07-23 17:15:45,686 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$70load_attr.7', '$null$90.9', '$90load_global.8']
2025-07-23 17:15:45,686 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=0, lineno=2579)
2025-07-23 17:15:45,686 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$70load_attr.7', '$null$90.9', '$100load_attr.10']
2025-07-23 17:15:45,687 - DEBUG - dispatch pc=122, inst=CALL(arg=1, lineno=2579)
2025-07-23 17:15:45,687 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$70load_attr.7', '$null$90.9', '$100load_attr.10', '$n120.11']
2025-07-23 17:15:45,687 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=2579)
2025-07-23 17:15:45,687 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$null$60.6', '$70load_attr.7', '$122call.12']
2025-07-23 17:15:45,687 - DEBUG - dispatch pc=138, inst=CALL(arg=1, lineno=2579)
2025-07-23 17:15:45,687 - DEBUG - stack ['$binop_add46.2', '$null$50.4', '$50load_global.3', '$130call.13']
2025-07-23 17:15:45,687 - DEBUG - dispatch pc=146, inst=BINARY_OP(arg=0, lineno=2579)
2025-07-23 17:15:45,688 - DEBUG - stack ['$binop_add46.2', '$138call.14']
2025-07-23 17:15:45,688 - DEBUG - dispatch pc=150, inst=STORE_FAST(arg=2, lineno=2579)
2025-07-23 17:15:45,688 - DEBUG - stack ['$binop_add146.15']
2025-07-23 17:15:45,688 - DEBUG - dispatch pc=152, inst=LOAD_GLOBAL(arg=8, lineno=2580)
2025-07-23 17:15:45,688 - DEBUG - stack []
2025-07-23 17:15:45,688 - DEBUG - dispatch pc=162, inst=STORE_FAST(arg=3, lineno=2580)
2025-07-23 17:15:45,688 - DEBUG - stack ['$152load_global.16']
2025-07-23 17:15:45,689 - DEBUG - dispatch pc=164, inst=LOAD_GLOBAL(arg=11, lineno=2581)
2025-07-23 17:15:45,689 - DEBUG - stack []
2025-07-23 17:15:45,689 - DEBUG - dispatch pc=174, inst=LOAD_FAST(arg=3, lineno=2581)
2025-07-23 17:15:45,689 - DEBUG - stack ['$null$164.18', '$164load_global.17']
2025-07-23 17:15:45,689 - DEBUG - dispatch pc=176, inst=CALL(arg=1, lineno=2581)
2025-07-23 17:15:45,689 - DEBUG - stack ['$null$164.18', '$164load_global.17', '$kind174.19']
2025-07-23 17:15:45,689 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=4, lineno=2581)
2025-07-23 17:15:45,689 - DEBUG - stack ['$176call.20']
2025-07-23 17:15:45,690 - DEBUG - dispatch pc=186, inst=LOAD_GLOBAL(arg=13, lineno=2582)
2025-07-23 17:15:45,690 - DEBUG - stack []
2025-07-23 17:15:45,690 - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=3, lineno=2582)
2025-07-23 17:15:45,690 - DEBUG - stack ['$null$186.22', '$186load_global.21']
2025-07-23 17:15:45,690 - DEBUG - dispatch pc=198, inst=LOAD_FAST(arg=4, lineno=2582)
2025-07-23 17:15:45,691 - DEBUG - stack ['$null$186.22', '$186load_global.21', '$kind196.23']
2025-07-23 17:15:45,691 - DEBUG - dispatch pc=200, inst=LOAD_FAST(arg=2, lineno=2582)
2025-07-23 17:15:45,691 - DEBUG - stack ['$null$186.22', '$186load_global.21', '$kind196.23', '$char_width198.24']
2025-07-23 17:15:45,691 - DEBUG - dispatch pc=202, inst=LOAD_CONST(arg=3, lineno=2582)
2025-07-23 17:15:45,691 - DEBUG - stack ['$null$186.22', '$186load_global.21', '$kind196.23', '$char_width198.24', '$length200.25']
2025-07-23 17:15:45,691 - DEBUG - dispatch pc=204, inst=CALL(arg=4, lineno=2582)
2025-07-23 17:15:45,691 - DEBUG - stack ['$null$186.22', '$186load_global.21', '$kind196.23', '$char_width198.24', '$length200.25', '$const202.26.3']
2025-07-23 17:15:45,692 - DEBUG - dispatch pc=212, inst=STORE_FAST(arg=5, lineno=2582)
2025-07-23 17:15:45,692 - DEBUG - stack ['$204call.27']
2025-07-23 17:15:45,692 - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=1, lineno=2583)
2025-07-23 17:15:45,692 - DEBUG - stack []
2025-07-23 17:15:45,692 - DEBUG - dispatch pc=216, inst=POP_JUMP_IF_FALSE(arg=22, lineno=2583)
2025-07-23 17:15:45,692 - DEBUG - stack ['$flag214.28']
2025-07-23 17:15:45,693 - DEBUG - end state. edges=[Edge(pc=218, stack=(), blockstack=(), npush=0), Edge(pc=262, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,693 - DEBUG - pending: deque([State(pc_initial=218 nstack_initial=0), State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:45,693 - DEBUG - stack: []
2025-07-23 17:15:45,693 - DEBUG - state.pc_initial: State(pc_initial=218 nstack_initial=0)
2025-07-23 17:15:45,693 - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=15, lineno=2584)
2025-07-23 17:15:45,693 - DEBUG - stack []
2025-07-23 17:15:45,693 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=2584)
2025-07-23 17:15:45,694 - DEBUG - stack ['$null$218.1', '$218load_global.0']
2025-07-23 17:15:45,694 - DEBUG - dispatch pc=230, inst=LOAD_CONST(arg=2, lineno=2584)
2025-07-23 17:15:45,694 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$s228.2']
2025-07-23 17:15:45,694 - DEBUG - dispatch pc=232, inst=LOAD_GLOBAL(arg=17, lineno=2584)
2025-07-23 17:15:45,694 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$s228.2', '$const230.3.2']
2025-07-23 17:15:45,694 - DEBUG - dispatch pc=242, inst=LOAD_CONST(arg=6, lineno=2584)
2025-07-23 17:15:45,695 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$s228.2', '$const230.3.2', '$null$232.5', '$232load_global.4']
2025-07-23 17:15:45,695 - DEBUG - dispatch pc=244, inst=CALL(arg=1, lineno=2584)
2025-07-23 17:15:45,695 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$s228.2', '$const230.3.2', '$null$232.5', '$232load_global.4', '$const242.6.6']
2025-07-23 17:15:45,695 - DEBUG - dispatch pc=252, inst=CALL(arg=3, lineno=2584)
2025-07-23 17:15:45,695 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$s228.2', '$const230.3.2', '$244call.7']
2025-07-23 17:15:45,695 - DEBUG - dispatch pc=260, inst=POP_TOP(arg=None, lineno=2584)
2025-07-23 17:15:45,695 - DEBUG - stack ['$252call.8']
2025-07-23 17:15:45,696 - DEBUG - end state. edges=[Edge(pc=262, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,696 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=0), State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:45,696 - DEBUG - stack: []
2025-07-23 17:15:45,696 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=0)
2025-07-23 17:15:45,696 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=2, lineno=2585)
2025-07-23 17:15:45,696 - DEBUG - stack []
2025-07-23 17:15:45,696 - DEBUG - dispatch pc=264, inst=LOAD_CONST(arg=5, lineno=2585)
2025-07-23 17:15:45,696 - DEBUG - stack ['$length262.0']
2025-07-23 17:15:45,697 - DEBUG - dispatch pc=266, inst=BINARY_OP(arg=10, lineno=2585)
2025-07-23 17:15:45,697 - DEBUG - stack ['$length262.0', '$const264.1.5']
2025-07-23 17:15:45,697 - DEBUG - dispatch pc=270, inst=STORE_FAST(arg=6, lineno=2585)
2025-07-23 17:15:45,697 - DEBUG - stack ['$binop_sub266.2']
2025-07-23 17:15:45,697 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=0, lineno=2586)
2025-07-23 17:15:45,697 - DEBUG - stack []
2025-07-23 17:15:45,697 - DEBUG - dispatch pc=274, inst=LOAD_CONST(arg=2, lineno=2586)
2025-07-23 17:15:45,697 - DEBUG - stack ['$n272.3']
2025-07-23 17:15:45,697 - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=68, lineno=2586)
2025-07-23 17:15:45,698 - DEBUG - stack ['$n272.3', '$const274.4.2']
2025-07-23 17:15:45,698 - DEBUG - dispatch pc=280, inst=POP_JUMP_IF_FALSE(arg=53, lineno=2586)
2025-07-23 17:15:45,698 - DEBUG - stack ['$276compare_op.5']
2025-07-23 17:15:45,698 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=388, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,698 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
2025-07-23 17:15:45,698 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
2025-07-23 17:15:45,698 - DEBUG - stack: []
2025-07-23 17:15:45,698 - DEBUG - state.pc_initial: State(pc_initial=282 nstack_initial=0)
2025-07-23 17:15:45,699 - DEBUG - dispatch pc=282, inst=LOAD_GLOBAL(arg=19, lineno=2587)
2025-07-23 17:15:45,699 - DEBUG - stack []
2025-07-23 17:15:45,699 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=0, lineno=2587)
2025-07-23 17:15:45,699 - DEBUG - stack ['$null$282.1', '$282load_global.0']
2025-07-23 17:15:45,699 - DEBUG - dispatch pc=294, inst=LOAD_DEREF(arg=9, lineno=2587)
2025-07-23 17:15:45,699 - DEBUG - stack ['$null$282.1', '$282load_global.0', '$n292.2']
2025-07-23 17:15:45,699 - DEBUG - dispatch pc=296, inst=CALL(arg=2, lineno=2587)
2025-07-23 17:15:45,699 - DEBUG - stack ['$null$282.1', '$282load_global.0', '$n292.2', '$294load_deref.3']
2025-07-23 17:15:45,699 - DEBUG - dispatch pc=304, inst=UNPACK_SEQUENCE(arg=2, lineno=2587)
2025-07-23 17:15:45,700 - DEBUG - stack ['$296call.4']
2025-07-23 17:15:45,700 - DEBUG - dispatch pc=308, inst=STORE_FAST(arg=0, lineno=2587)
2025-07-23 17:15:45,700 - DEBUG - stack ['$304unpack_sequence.6', '$304unpack_sequence.5']
2025-07-23 17:15:45,700 - DEBUG - dispatch pc=310, inst=STORE_FAST(arg=7, lineno=2587)
2025-07-23 17:15:45,700 - DEBUG - stack ['$304unpack_sequence.6']
2025-07-23 17:15:45,700 - DEBUG - dispatch pc=312, inst=LOAD_GLOBAL(arg=17, lineno=2588)
2025-07-23 17:15:45,700 - DEBUG - stack []
2025-07-23 17:15:45,701 - DEBUG - dispatch pc=322, inst=LOAD_CONST(arg=4, lineno=2588)
2025-07-23 17:15:45,701 - DEBUG - stack ['$null$312.9', '$312load_global.8']
2025-07-23 17:15:45,701 - DEBUG - dispatch pc=324, inst=CALL(arg=1, lineno=2588)
2025-07-23 17:15:45,701 - DEBUG - stack ['$null$312.9', '$312load_global.8', '$const322.10.4']
2025-07-23 17:15:45,701 - DEBUG - dispatch pc=332, inst=LOAD_FAST(arg=7, lineno=2588)
2025-07-23 17:15:45,702 - DEBUG - stack ['$324call.11']
2025-07-23 17:15:45,702 - DEBUG - dispatch pc=334, inst=BINARY_OP(arg=0, lineno=2588)
2025-07-23 17:15:45,702 - DEBUG - stack ['$324call.11', '$digit332.12']
2025-07-23 17:15:45,702 - DEBUG - dispatch pc=338, inst=STORE_FAST(arg=8, lineno=2588)
2025-07-23 17:15:45,702 - DEBUG - stack ['$binop_add334.13']
2025-07-23 17:15:45,703 - DEBUG - dispatch pc=340, inst=LOAD_GLOBAL(arg=15, lineno=2589)
2025-07-23 17:15:45,703 - DEBUG - stack []
2025-07-23 17:15:45,703 - DEBUG - dispatch pc=350, inst=LOAD_FAST(arg=5, lineno=2589)
2025-07-23 17:15:45,703 - DEBUG - stack ['$null$340.15', '$340load_global.14']
2025-07-23 17:15:45,703 - DEBUG - dispatch pc=352, inst=LOAD_FAST(arg=6, lineno=2589)
2025-07-23 17:15:45,703 - DEBUG - stack ['$null$340.15', '$340load_global.14', '$s350.16']
2025-07-23 17:15:45,704 - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=8, lineno=2589)
2025-07-23 17:15:45,704 - DEBUG - stack ['$null$340.15', '$340load_global.14', '$s350.16', '$idx352.17']
2025-07-23 17:15:45,704 - DEBUG - dispatch pc=356, inst=CALL(arg=3, lineno=2589)
2025-07-23 17:15:45,704 - DEBUG - stack ['$null$340.15', '$340load_global.14', '$s350.16', '$idx352.17', '$c354.18']
2025-07-23 17:15:45,704 - DEBUG - dispatch pc=364, inst=POP_TOP(arg=None, lineno=2589)
2025-07-23 17:15:45,704 - DEBUG - stack ['$356call.19']
2025-07-23 17:15:45,705 - DEBUG - dispatch pc=366, inst=LOAD_FAST(arg=6, lineno=2590)
2025-07-23 17:15:45,705 - DEBUG - stack []
2025-07-23 17:15:45,705 - DEBUG - dispatch pc=368, inst=LOAD_CONST(arg=5, lineno=2590)
2025-07-23 17:15:45,705 - DEBUG - stack ['$idx366.20']
2025-07-23 17:15:45,705 - DEBUG - dispatch pc=370, inst=BINARY_OP(arg=23, lineno=2590)
2025-07-23 17:15:45,706 - DEBUG - stack ['$idx366.20', '$const368.21.5']
2025-07-23 17:15:45,706 - DEBUG - dispatch pc=374, inst=STORE_FAST(arg=6, lineno=2590)
2025-07-23 17:15:45,706 - DEBUG - stack ['$binop_isub370.22']
2025-07-23 17:15:45,706 - DEBUG - dispatch pc=376, inst=LOAD_FAST(arg=0, lineno=2586)
2025-07-23 17:15:45,706 - DEBUG - stack []
2025-07-23 17:15:45,706 - DEBUG - dispatch pc=378, inst=LOAD_CONST(arg=2, lineno=2586)
2025-07-23 17:15:45,707 - DEBUG - stack ['$n376.23']
2025-07-23 17:15:45,707 - DEBUG - dispatch pc=380, inst=COMPARE_OP(arg=68, lineno=2586)
2025-07-23 17:15:45,707 - DEBUG - stack ['$n376.23', '$const378.24.2']
2025-07-23 17:15:45,707 - DEBUG - dispatch pc=384, inst=POP_JUMP_IF_FALSE(arg=1, lineno=2586)
2025-07-23 17:15:45,707 - DEBUG - stack ['$380compare_op.25']
2025-07-23 17:15:45,707 - DEBUG - end state. edges=[Edge(pc=386, stack=(), blockstack=(), npush=0), Edge(pc=388, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,707 - DEBUG - pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=386 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
2025-07-23 17:15:45,707 - DEBUG - stack: []
2025-07-23 17:15:45,707 - DEBUG - state.pc_initial: State(pc_initial=388 nstack_initial=0)
2025-07-23 17:15:45,707 - DEBUG - dispatch pc=388, inst=LOAD_FAST(arg=5, lineno=2591)
2025-07-23 17:15:45,709 - DEBUG - stack []
2025-07-23 17:15:45,709 - DEBUG - dispatch pc=390, inst=RETURN_VALUE(arg=None, lineno=2591)
2025-07-23 17:15:45,709 - DEBUG - stack ['$s388.0']
2025-07-23 17:15:45,709 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,709 - DEBUG - pending: deque([State(pc_initial=386 nstack_initial=0), State(pc_initial=388 nstack_initial=0)])
2025-07-23 17:15:45,709 - DEBUG - stack: []
2025-07-23 17:15:45,709 - DEBUG - state.pc_initial: State(pc_initial=386 nstack_initial=0)
2025-07-23 17:15:45,709 - DEBUG - dispatch pc=386, inst=JUMP_BACKWARD(arg=53, lineno=2586)
2025-07-23 17:15:45,710 - DEBUG - stack []
2025-07-23 17:15:45,710 - DEBUG - end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,710 - DEBUG - pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
2025-07-23 17:15:45,710 - DEBUG - pending: deque([State(pc_initial=282 nstack_initial=0)])
2025-07-23 17:15:45,710 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,710 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=218 nstack_initial=0): set(),
             State(pc_initial=262 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=386 nstack_initial=0): set(),
             State(pc_initial=388 nstack_initial=0): set()})
2025-07-23 17:15:45,711 - DEBUG - defmap: {}
2025-07-23 17:15:45,711 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,711 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,711 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,711 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,711 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'res': '$n10.1'}), (12, {'res': '$const12.2.2'}), (14, {'lhs': '$n10.1', 'rhs': '$const12.2.2', 'res': '$14compare_op.3'}), (18, {'pred': '$14compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 30: ()})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$n20.0'}), (22, {'value': '$n20.0', 'res': '$22unary_negative.1'}), (24, {'value': '$22unary_negative.1'}), (26, {'res': '$const26.2.3'}), (28, {'value': '$const26.2.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ()})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$n30.0'}), (32, {'res': '$const32.1.2'}), (34, {'lhs': '$n30.0', 'rhs': '$const32.1.2', 'res': '$34compare_op.2'}), (38, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 42: ()})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'retval': '$const40.0', 'castval': '$40return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$flag42.0'}), (44, {'res': '$const44.1.5'}), (46, {'op': '+', 'lhs': '$flag42.0', 'rhs': '$const44.1.5', 'res': '$binop_add46.2'}), (50, {'idx': 0, 'res': '$50load_global.3'}), (60, {'idx': 1, 'res': '$60load_global.5'}), (70, {'item': '$60load_global.5', 'res': '$70load_attr.7'}), (90, {'idx': 1, 'res': '$90load_global.8'}), (100, {'item': '$90load_global.8', 'res': '$100load_attr.10'}), (120, {'res': '$n120.11'}), (122, {'func': '$100load_attr.10', 'args': ['$n120.11'], 'kw_names': None, 'res': '$122call.12'}), (130, {'func': '$70load_attr.7', 'args': ['$122call.12'], 'kw_names': None, 'res': '$130call.13'}), (138, {'func': '$50load_global.3', 'args': ['$130call.13'], 'kw_names': None, 'res': '$138call.14'}), (146, {'op': '+', 'lhs': '$binop_add46.2', 'rhs': '$138call.14', 'res': '$binop_add146.15'}), (150, {'value': '$binop_add146.15'}), (152, {'idx': 4, 'res': '$152load_global.16'}), (162, {'value': '$152load_global.16'}), (164, {'idx': 5, 'res': '$164load_global.17'}), (174, {'res': '$kind174.19'}), (176, {'func': '$164load_global.17', 'args': ['$kind174.19'], 'kw_names': None, 'res': '$176call.20'}), (184, {'value': '$176call.20'}), (186, {'idx': 6, 'res': '$186load_global.21'}), (196, {'res': '$kind196.23'}), (198, {'res': '$char_width198.24'}), (200, {'res': '$length200.25'}), (202, {'res': '$const202.26.3'}), (204, {'func': '$186load_global.21', 'args': ['$kind196.23', '$char_width198.24', '$length200.25', '$const202.26.3'], 'kw_names': None, 'res': '$204call.27'}), (212, {'value': '$204call.27'}), (214, {'res': '$flag214.28'}), (216, {'pred': '$flag214.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={218: (), 262: ()})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=218 nstack_initial=0):
AdaptBlockInfo(insts=((218, {'idx': 7, 'res': '$218load_global.0'}), (228, {'res': '$s228.2'}), (230, {'res': '$const230.3.2'}), (232, {'idx': 8, 'res': '$232load_global.4'}), (242, {'res': '$const242.6.6'}), (244, {'func': '$232load_global.4', 'args': ['$const242.6.6'], 'kw_names': None, 'res': '$244call.7'}), (252, {'func': '$218load_global.0', 'args': ['$s228.2', '$const230.3.2', '$244call.7'], 'kw_names': None, 'res': '$252call.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ()})
2025-07-23 17:15:45,712 - DEBUG - block_infos State(pc_initial=262 nstack_initial=0):
AdaptBlockInfo(insts=((262, {'res': '$length262.0'}), (264, {'res': '$const264.1.5'}), (266, {'op': '-', 'lhs': '$length262.0', 'rhs': '$const264.1.5', 'res': '$binop_sub266.2'}), (270, {'value': '$binop_sub266.2'}), (272, {'res': '$n272.3'}), (274, {'res': '$const274.4.2'}), (276, {'lhs': '$n272.3', 'rhs': '$const274.4.2', 'res': '$276compare_op.5'}), (280, {'pred': '$276compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 388: ()})
2025-07-23 17:15:45,713 - DEBUG - block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'idx': 9, 'res': '$282load_global.0'}), (292, {'res': '$n292.2'}), (294, {'res': '$294load_deref.3'}), (296, {'func': '$282load_global.0', 'args': ['$n292.2', '$294load_deref.3'], 'kw_names': None, 'res': '$296call.4'}), (304, {'iterable': '$296call.4', 'stores': ['$304unpack_sequence.5', '$304unpack_sequence.6'], 'tupleobj': '$304unpack_sequence.7'}), (308, {'value': '$304unpack_sequence.5'}), (310, {'value': '$304unpack_sequence.6'}), (312, {'idx': 8, 'res': '$312load_global.8'}), (322, {'res': '$const322.10.4'}), (324, {'func': '$312load_global.8', 'args': ['$const322.10.4'], 'kw_names': None, 'res': '$324call.11'}), (332, {'res': '$digit332.12'}), (334, {'op': '+', 'lhs': '$324call.11', 'rhs': '$digit332.12', 'res': '$binop_add334.13'}), (338, {'value': '$binop_add334.13'}), (340, {'idx': 7, 'res': '$340load_global.14'}), (350, {'res': '$s350.16'}), (352, {'res': '$idx352.17'}), (354, {'res': '$c354.18'}), (356, {'func': '$340load_global.14', 'args': ['$s350.16', '$idx352.17', '$c354.18'], 'kw_names': None, 'res': '$356call.19'}), (366, {'res': '$idx366.20'}), (368, {'res': '$const368.21.5'}), (370, {'op': '-=', 'lhs': '$idx366.20', 'rhs': '$const368.21.5', 'res': '$binop_isub370.22'}), (374, {'value': '$binop_isub370.22'}), (376, {'res': '$n376.23'}), (378, {'res': '$const378.24.2'}), (380, {'lhs': '$n376.23', 'rhs': '$const378.24.2', 'res': '$380compare_op.25'}), (384, {'pred': '$380compare_op.25'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={386: (), 388: ()})
2025-07-23 17:15:45,713 - DEBUG - block_infos State(pc_initial=386 nstack_initial=0):
AdaptBlockInfo(insts=((386, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: ()})
2025-07-23 17:15:45,713 - DEBUG - block_infos State(pc_initial=388 nstack_initial=0):
AdaptBlockInfo(insts=((388, {'res': '$s388.0'}), (390, {'retval': '$s388.0', 'castval': '$390return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,715 - DEBUG - label 0:
    n = arg(0, name=n)                       ['n']
    flag = const(bool, False)                ['flag']
    $const12.2.2 = const(int, 0)             ['$const12.2.2']
    $14compare_op.3 = n < $const12.2.2       ['$14compare_op.3', '$const12.2.2', 'n']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.3', '$18pred', 'bool18']
    branch $18pred, 20, 30                   ['$18pred']
label 20:
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    flag = const(bool, True)                 ['flag']
    jump 30                                  []
label 30:
    $const32.1.2 = const(int, 0)             ['$const32.1.2']
    $34compare_op.2 = n == $const32.1.2      ['$34compare_op.2', '$const32.1.2', 'n']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.2', '$38pred', 'bool38']
    branch $38pred, 40, 42                   ['$38pred']
label 40:
    $const40.0 = const(str, 0)               ['$const40.0']
    $40return_const.1 = cast(value=$const40.0) ['$40return_const.1', '$const40.0']
    return $40return_const.1                 ['$40return_const.1']
label 42:
    $const44.1.5 = const(int, 1)             ['$const44.1.5']
    $binop_add46.2 = flag + $const44.1.5     ['$binop_add46.2', '$const44.1.5', 'flag']
    $50load_global.3 = global(int: <class 'int'>) ['$50load_global.3']
    $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.5']
    $70load_attr.7 = getattr(value=$60load_global.5, attr=floor) ['$60load_global.5', '$70load_attr.7']
    $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$90load_global.8']
    $100load_attr.10 = getattr(value=$90load_global.8, attr=log10) ['$100load_attr.10', '$90load_global.8']
    $122call.12 = call $100load_attr.10(n, func=$100load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_attr.10', '$122call.12', 'n']
    $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$122call.12', '$130call.13', '$70load_attr.7']
    $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$130call.13', '$138call.14', '$50load_global.3']
    length = $binop_add46.2 + $138call.14    ['$138call.14', '$binop_add46.2', 'length']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>) ['$164load_global.17']
    char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.17', 'char_width', 'kind']
    $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>) ['$186load_global.21']
    $const202.26.3 = const(bool, True)       ['$const202.26.3']
    s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$186load_global.21', '$const202.26.3', 'char_width', 'kind', 'length', 's']
    bool216 = global(bool: <class 'bool'>)   ['bool216']
    $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$216pred', 'bool216', 'flag']
    branch $216pred, 218, 262                ['$216pred']
label 218:
    $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$218load_global.0']
    $const230.3.2 = const(int, 0)            ['$const230.3.2']
    $232load_global.4 = global(ord: <built-in function ord>) ['$232load_global.4']
    $const242.6.6 = const(str, -)            ['$const242.6.6']
    $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$232load_global.4', '$244call.7', '$const242.6.6']
    $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.0', '$244call.7', '$252call.8', '$const230.3.2', 's']
    jump 262                                 []
label 262:
    $const264.1.5 = const(int, 1)            ['$const264.1.5']
    idx = length - $const264.1.5             ['$const264.1.5', 'idx', 'length']
    $const274.4.2 = const(int, 0)            ['$const274.4.2']
    $276compare_op.5 = n > $const274.4.2     ['$276compare_op.5', '$const274.4.2', 'n']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.5', '$280pred', 'bool280']
    branch $280pred, 282, 388                ['$280pred']
label 282:
    $282load_global.0 = global(divmod: <built-in function divmod>) ['$282load_global.0']
    $294load_deref.3 = freevar(ten: 10)      ['$294load_deref.3']
    $296call.4 = call $282load_global.0(n, $294load_deref.3, func=$282load_global.0, args=[Var(n, unicode.py:2572), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$282load_global.0', '$294load_deref.3', '$296call.4', 'n']
    $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2) ['$296call.4', '$304unpack_sequence.7']
    $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>) ['$304unpack_sequence.5', '$304unpack_sequence.7']
    $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>) ['$304unpack_sequence.6', '$304unpack_sequence.7']
    n = $304unpack_sequence.5                ['$304unpack_sequence.5', 'n']
    digit = $304unpack_sequence.6            ['$304unpack_sequence.6', 'digit']
    $312load_global.8 = global(ord: <built-in function ord>) ['$312load_global.8']
    $const322.10.4 = const(str, 0)           ['$const322.10.4']
    $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$312load_global.8', '$324call.11', '$const322.10.4']
    c = $324call.11 + digit                  ['$324call.11', 'c', 'digit']
    $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$340load_global.14']
    $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$340load_global.14', '$356call.19', 'c', 'idx', 's']
    $const368.21.5 = const(int, 1)           ['$const368.21.5']
    $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined) ['$binop_isub370.22', '$const368.21.5', 'idx']
    idx = $binop_isub370.22                  ['$binop_isub370.22', 'idx']
    $const378.24.2 = const(int, 0)           ['$const378.24.2']
    $380compare_op.25 = n > $const378.24.2   ['$380compare_op.25', '$const378.24.2', 'n']
    bool384 = global(bool: <class 'bool'>)   ['bool384']
    $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$380compare_op.25', '$384pred', 'bool384']
    branch $384pred, 386, 388                ['$384pred']
label 386:
    jump 282                                 []
label 388:
    $390return_value.1 = cast(value=s)       ['$390return_value.1', 's']
    return $390return_value.1                ['$390return_value.1']

2025-07-23 17:15:45,760 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,760 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,760 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,761 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,761 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,762 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,762 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,762 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,762 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,763 - DEBUG - ==== SSA block analysis pass on 20
2025-07-23 17:15:45,763 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,763 - DEBUG - on stmt: n = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,763 - DEBUG - on stmt: flag = const(bool, True)
2025-07-23 17:15:45,764 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,764 - DEBUG - ==== SSA block analysis pass on 30
2025-07-23 17:15:45,764 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,764 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,764 - DEBUG - on stmt: $34compare_op.2 = n == $const32.1.2
2025-07-23 17:15:45,765 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,765 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,765 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,765 - DEBUG - ==== SSA block analysis pass on 40
2025-07-23 17:15:45,765 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,765 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,766 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,766 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,766 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:45,766 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,766 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,766 - DEBUG - on stmt: $binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,767 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,767 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,767 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,767 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,767 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,767 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n, func=$100load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,768 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,768 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,768 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,768 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,768 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,768 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,769 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,769 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,769 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,769 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,769 - DEBUG - on stmt: $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,770 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,770 - DEBUG - ==== SSA block analysis pass on 218
2025-07-23 17:15:45,770 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,770 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,771 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,771 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,771 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,771 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,772 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,772 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,772 - DEBUG - ==== SSA block analysis pass on 262
2025-07-23 17:15:45,772 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,772 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,772 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,772 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,772 - DEBUG - on stmt: $276compare_op.5 = n > $const274.4.2
2025-07-23 17:15:45,773 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,773 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,773 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,773 - DEBUG - ==== SSA block analysis pass on 282
2025-07-23 17:15:45,773 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,773 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,773 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,773 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n, $294load_deref.3, func=$282load_global.0, args=[Var(n, unicode.py:2572), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,774 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,774 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,774 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,774 - DEBUG - on stmt: n = $304unpack_sequence.5
2025-07-23 17:15:45,774 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,774 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,774 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,775 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,775 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,775 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,775 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,775 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,775 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,776 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,776 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,776 - DEBUG - on stmt: $380compare_op.25 = n > $const378.24.2
2025-07-23 17:15:45,776 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,776 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,776 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,776 - DEBUG - ==== SSA block analysis pass on 386
2025-07-23 17:15:45,777 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,777 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,777 - DEBUG - ==== SSA block analysis pass on 388
2025-07-23 17:15:45,777 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA688380>
2025-07-23 17:15:45,777 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,777 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,777 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100load_attr.10': [(<numba.core.ir.Assign object at 0x000001F6DA65F350>,
                                   42)],
             '$122call.12': [(<numba.core.ir.Assign object at 0x000001F6DA65F5F0>,
                              42)],
             '$130call.13': [(<numba.core.ir.Assign object at 0x000001F6DA65F770>,
                              42)],
             '$138call.14': [(<numba.core.ir.Assign object at 0x000001F6DA65F8F0>,
                              42)],
             '$14compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6DA65CBC0>,
                                  0)],
             '$164load_global.17': [(<numba.core.ir.Assign object at 0x000001F6DA65FE90>,
                                     42)],
             '$186load_global.21': [(<numba.core.ir.Assign object at 0x000001F6DA67C380>,
                                     42)],
             '$18pred': [(<numba.core.ir.Assign object at 0x000001F6DA65DB50>,
                          0)],
             '$216pred': [(<numba.core.ir.Assign object at 0x000001F6DA67CDA0>,
                           42)],
             '$218load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA65FFB0>,
                                    218)],
             '$232load_global.4': [(<numba.core.ir.Assign object at 0x000001F6DA67CF20>,
                                    218)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x000001F6DA67D220>,
                             218)],
             '$252call.8': [(<numba.core.ir.Assign object at 0x000001F6DA67D3A0>,
                             218)],
             '$276compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6DA67DC10>,
                                   262)],
             '$280pred': [(<numba.core.ir.Assign object at 0x000001F6DA67DE80>,
                           262)],
             '$282load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA67DF70>,
                                    282)],
             '$294load_deref.3': [(<numba.core.ir.Assign object at 0x000001F6DA67E150>,
                                   282)],
             '$296call.4': [(<numba.core.ir.Assign object at 0x000001F6DA67E300>,
                             282)],
             '$304unpack_sequence.5': [(<numba.core.ir.Assign object at 0x000001F6DA67E5A0>,
                                        282)],
             '$304unpack_sequence.6': [(<numba.core.ir.Assign object at 0x000001F6DA67E6C0>,
                                        282)],
             '$304unpack_sequence.7': [(<numba.core.ir.Assign object at 0x000001F6DA67E450>,
                                        282)],
             '$312load_global.8': [(<numba.core.ir.Assign object at 0x000001F6DA67E930>,
                                    282)],
             '$324call.11': [(<numba.core.ir.Assign object at 0x000001F6DA67EC30>,
                              282)],
             '$340load_global.14': [(<numba.core.ir.Assign object at 0x000001F6DA67F080>,
                                     282)],
             '$34compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA65E300>,
                                  30)],
             '$356call.19': [(<numba.core.ir.Assign object at 0x000001F6DA67F500>,
                              282)],
             '$380compare_op.25': [(<numba.core.ir.Assign object at 0x000001F6DA67FCB0>,
                                    282)],
             '$384pred': [(<numba.core.ir.Assign object at 0x000001F6DA67FF20>,
                           282)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001F6DA65E5A0>,
                          30)],
             '$390return_value.1': [(<numba.core.ir.Assign object at 0x000001F6DA688050>,
                                     388)],
             '$40return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA65E870>,
                                    40)],
             '$50load_global.3': [(<numba.core.ir.Assign object at 0x000001F6DA65EE10>,
                                   42)],
             '$60load_global.5': [(<numba.core.ir.Assign object at 0x000001F6DA65EF60>,
                                   42)],
             '$70load_attr.7': [(<numba.core.ir.Assign object at 0x000001F6DA65F0B0>,
                                 42)],
             '$90load_global.8': [(<numba.core.ir.Assign object at 0x000001F6DA65F200>,
                                   42)],
             '$binop_add46.2': [(<numba.core.ir.Assign object at 0x000001F6DA65ECF0>,
                                 42)],
             '$binop_isub370.22': [(<numba.core.ir.Assign object at 0x000001F6DA67F890>,
                                    282)],
             '$const12.2.2': [(<numba.core.ir.Assign object at 0x000001F6DA65CD40>,
                               0)],
             '$const202.26.3': [(<numba.core.ir.Assign object at 0x000001F6DA67C7A0>,
                                 42)],
             '$const230.3.2': [(<numba.core.ir.Assign object at 0x000001F6DA67CB00>,
                                218)],
             '$const242.6.6': [(<numba.core.ir.Assign object at 0x000001F6DA67D070>,
                                218)],
             '$const264.1.5': [(<numba.core.ir.Assign object at 0x000001F6DA67D610>,
                                262)],
             '$const274.4.2': [(<numba.core.ir.Assign object at 0x000001F6DA67DA90>,
                                262)],
             '$const32.1.2': [(<numba.core.ir.Assign object at 0x000001F6DA65E180>,
                               30)],
             '$const322.10.4': [(<numba.core.ir.Assign object at 0x000001F6DA67EA80>,
                                 282)],
             '$const368.21.5': [(<numba.core.ir.Assign object at 0x000001F6DA67F710>,
                                 282)],
             '$const378.24.2': [(<numba.core.ir.Assign object at 0x000001F6DA67FB30>,
                                 282)],
             '$const40.0': [(<numba.core.ir.Assign object at 0x000001F6DA65E750>,
                             40)],
             '$const44.1.5': [(<numba.core.ir.Assign object at 0x000001F6DA65EB70>,
                               42)],
             'bool18': [(<numba.core.ir.Assign object at 0x000001F6DA65DA00>,
                         0)],
             'bool216': [(<numba.core.ir.Assign object at 0x000001F6DA67CC80>,
                          42)],
             'bool280': [(<numba.core.ir.Assign object at 0x000001F6DA67DD60>,
                          262)],
             'bool38': [(<numba.core.ir.Assign object at 0x000001F6DA65E450>,
                         30)],
             'bool384': [(<numba.core.ir.Assign object at 0x000001F6DA67FE00>,
                          282)],
             'c': [(<numba.core.ir.Assign object at 0x000001F6DA67EE70>, 282)],
             'char_width': [(<numba.core.ir.Assign object at 0x000001F6DA67C170>,
                             42)],
             'digit': [(<numba.core.ir.Assign object at 0x000001F6DA67E7E0>,
                        282)],
             'flag': [(<numba.core.ir.Assign object at 0x000001F6DA65D400>, 0),
                      (<numba.core.ir.Assign object at 0x000001F6DA65DF70>,
                       20)],
             'idx': [(<numba.core.ir.Assign object at 0x000001F6DA67D790>, 262),
                     (<numba.core.ir.Assign object at 0x000001F6DA67F8F0>,
                      282)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6DA65FC50>,
                       42)],
             'length': [(<numba.core.ir.Assign object at 0x000001F6DA65FA40>,
                         42)],
             'n': [(<numba.core.ir.Assign object at 0x000001F6DA65D2E0>, 0),
                   (<numba.core.ir.Assign object at 0x000001F6DA65DD90>, 20),
                   (<numba.core.ir.Assign object at 0x000001F6DA67E4B0>, 282)],
             's': [(<numba.core.ir.Assign object at 0x000001F6DA67C950>, 42)]})
2025-07-23 17:15:45,783 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA688380>
2025-07-23 17:15:45,783 - DEBUG - Fix SSA violator on var n
2025-07-23 17:15:45,783 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,783 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,784 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,784 - DEBUG - first assign: n
2025-07-23 17:15:45,784 - DEBUG - replaced with: n = arg(0, name=n)
2025-07-23 17:15:45,784 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,784 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,785 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,785 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,785 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,785 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,785 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,786 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,786 - DEBUG - on stmt: n = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,786 - DEBUG - replaced with: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,786 - DEBUG - on stmt: flag = const(bool, True)
2025-07-23 17:15:45,786 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,787 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,787 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,787 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,787 - DEBUG - on stmt: $34compare_op.2 = n == $const32.1.2
2025-07-23 17:15:45,788 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,788 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,788 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,788 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,789 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,789 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,789 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,789 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,789 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,789 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,790 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,790 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,790 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n, func=$100load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,791 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,791 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,791 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,791 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,791 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,791 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,791 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,791 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,792 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,792 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,792 - DEBUG - on stmt: $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,792 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,792 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,792 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,792 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,792 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,793 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,793 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,793 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,793 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,793 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,793 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,794 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,794 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,794 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,794 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,794 - DEBUG - on stmt: $276compare_op.5 = n > $const274.4.2
2025-07-23 17:15:45,794 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,794 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,795 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,795 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,795 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,795 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,795 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,795 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n, $294load_deref.3, func=$282load_global.0, args=[Var(n, unicode.py:2572), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,795 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,795 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,796 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,796 - DEBUG - on stmt: n = $304unpack_sequence.5
2025-07-23 17:15:45,796 - DEBUG - replaced with: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,796 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,796 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,796 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,796 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,797 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,797 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,797 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,797 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,797 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,797 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,797 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,798 - DEBUG - on stmt: $380compare_op.25 = n > $const378.24.2
2025-07-23 17:15:45,798 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,798 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,798 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,798 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,798 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,798 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,798 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,799 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,799 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,799 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F6DA689490>],
             20: [<numba.core.ir.Assign object at 0x000001F6DA689A30>],
             282: [<numba.core.ir.Assign object at 0x000001F6DA68A120>]})
2025-07-23 17:15:45,799 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,799 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,799 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,799 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,799 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,799 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,799 - DEBUG - find_def var='n' stmt=$14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,801 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,801 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,801 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,801 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,801 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,801 - DEBUG - on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,801 - DEBUG - find_def var='n' stmt=n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,801 - DEBUG - find_def_from_top label 20
2025-07-23 17:15:45,801 - DEBUG - idom 0 from label 20
2025-07-23 17:15:45,801 - DEBUG - find_def_from_bottom label 0
2025-07-23 17:15:45,803 - DEBUG - on stmt: flag = const(bool, True)
2025-07-23 17:15:45,803 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,803 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,803 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,803 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,803 - DEBUG - on stmt: $34compare_op.2 = n == $const32.1.2
2025-07-23 17:15:45,803 - DEBUG - find_def var='n' stmt=$34compare_op.2 = n == $const32.1.2
2025-07-23 17:15:45,803 - DEBUG - find_def_from_top label 30
2025-07-23 17:15:45,804 - DEBUG - insert phi node n.3 = phi(incoming_values=[], incoming_blocks=[]) at 30
2025-07-23 17:15:45,804 - DEBUG - find_def_from_bottom label 0
2025-07-23 17:15:45,804 - DEBUG - incoming_def n = arg(0, name=n)
2025-07-23 17:15:45,804 - DEBUG - find_def_from_bottom label 20
2025-07-23 17:15:45,804 - DEBUG - incoming_def n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,805 - DEBUG - replaced with: $34compare_op.2 = n.3 == $const32.1.2
2025-07-23 17:15:45,805 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,805 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,805 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,805 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,806 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,806 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,806 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,806 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,806 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,807 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,807 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n, func=$100load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,807 - DEBUG - find_def var='n' stmt=$122call.12 = call $100load_attr.10(n, func=$100load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,807 - DEBUG - find_def_from_top label 42
2025-07-23 17:15:45,807 - DEBUG - idom 30 from label 42
2025-07-23 17:15:45,807 - DEBUG - find_def_from_bottom label 30
2025-07-23 17:15:45,807 - DEBUG - replaced with: $122call.12 = call $100load_attr.10(n.3, func=$100load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,809 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,809 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,809 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,809 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,809 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,809 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,809 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,809 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,810 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,810 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,810 - DEBUG - on stmt: $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,810 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,811 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,812 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,812 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,812 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,813 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,813 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,813 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,814 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,814 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,814 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,814 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,814 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,815 - DEBUG - on stmt: $276compare_op.5 = n > $const274.4.2
2025-07-23 17:15:45,815 - DEBUG - find_def var='n' stmt=$276compare_op.5 = n > $const274.4.2
2025-07-23 17:15:45,815 - DEBUG - find_def_from_top label 262
2025-07-23 17:15:45,815 - DEBUG - idom 42 from label 262
2025-07-23 17:15:45,815 - DEBUG - find_def_from_bottom label 42
2025-07-23 17:15:45,815 - DEBUG - find_def_from_top label 42
2025-07-23 17:15:45,815 - DEBUG - idom 30 from label 42
2025-07-23 17:15:45,815 - DEBUG - find_def_from_bottom label 30
2025-07-23 17:15:45,816 - DEBUG - replaced with: $276compare_op.5 = n.3 > $const274.4.2
2025-07-23 17:15:45,816 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,816 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,816 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,816 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,816 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,816 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,816 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,817 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n, $294load_deref.3, func=$282load_global.0, args=[Var(n, unicode.py:2572), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,817 - DEBUG - find_def var='n' stmt=$296call.4 = call $282load_global.0(n, $294load_deref.3, func=$282load_global.0, args=[Var(n, unicode.py:2572), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,817 - DEBUG - find_def_from_top label 282
2025-07-23 17:15:45,817 - DEBUG - insert phi node n.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
2025-07-23 17:15:45,817 - DEBUG - find_def_from_bottom label 386
2025-07-23 17:15:45,817 - DEBUG - find_def_from_top label 386
2025-07-23 17:15:45,817 - DEBUG - idom 282 from label 386
2025-07-23 17:15:45,818 - DEBUG - find_def_from_bottom label 282
2025-07-23 17:15:45,818 - DEBUG - incoming_def n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,818 - DEBUG - find_def_from_bottom label 262
2025-07-23 17:15:45,818 - DEBUG - find_def_from_top label 262
2025-07-23 17:15:45,818 - DEBUG - idom 42 from label 262
2025-07-23 17:15:45,818 - DEBUG - find_def_from_bottom label 42
2025-07-23 17:15:45,819 - DEBUG - find_def_from_top label 42
2025-07-23 17:15:45,819 - DEBUG - idom 30 from label 42
2025-07-23 17:15:45,819 - DEBUG - find_def_from_bottom label 30
2025-07-23 17:15:45,819 - DEBUG - incoming_def n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,819 - DEBUG - replaced with: $296call.4 = call $282load_global.0(n.4, $294load_deref.3, func=$282load_global.0, args=[Var(n.4, unicode.py:2587), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,820 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,820 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,820 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,820 - DEBUG - on stmt: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,821 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,821 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,821 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,821 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,821 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,821 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,821 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,822 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,822 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,822 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,822 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,822 - DEBUG - on stmt: $380compare_op.25 = n > $const378.24.2
2025-07-23 17:15:45,822 - DEBUG - find_def var='n' stmt=$380compare_op.25 = n > $const378.24.2
2025-07-23 17:15:45,822 - DEBUG - replaced with: $380compare_op.25 = n.2 > $const378.24.2
2025-07-23 17:15:45,823 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,823 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,823 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,823 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,823 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,823 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,823 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6880E0>
2025-07-23 17:15:45,824 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,824 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,824 - DEBUG - Fix SSA violator on var flag
2025-07-23 17:15:45,824 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,824 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,824 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,824 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,825 - DEBUG - first assign: flag
2025-07-23 17:15:45,825 - DEBUG - replaced with: flag = const(bool, False)
2025-07-23 17:15:45,825 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,825 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,825 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,825 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,825 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,825 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,826 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,826 - DEBUG - on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,826 - DEBUG - on stmt: flag = const(bool, True)
2025-07-23 17:15:45,826 - DEBUG - replaced with: flag.1 = const(bool, True)
2025-07-23 17:15:45,826 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,826 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,826 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,826 - DEBUG - on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,826 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,827 - DEBUG - on stmt: $34compare_op.2 = n.3 == $const32.1.2
2025-07-23 17:15:45,827 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,827 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,827 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,827 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,827 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,827 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,827 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,828 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,828 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,828 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,828 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,828 - DEBUG - on stmt: $binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,828 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,828 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,828 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,828 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n.3, func=$100load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,829 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,829 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,829 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,829 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,830 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,830 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,830 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,830 - DEBUG - on stmt: $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,830 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,830 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,830 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,831 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,831 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,831 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,831 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,831 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,831 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,831 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,832 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,832 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,832 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,832 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,832 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,832 - DEBUG - on stmt: $276compare_op.5 = n.3 > $const274.4.2
2025-07-23 17:15:45,832 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,832 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,833 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,833 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,833 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,833 - DEBUG - on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[386, 262])
2025-07-23 17:15:45,833 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,833 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,833 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n.4, $294load_deref.3, func=$282load_global.0, args=[Var(n.4, unicode.py:2587), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,833 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,834 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,834 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,834 - DEBUG - on stmt: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,834 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,834 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,834 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,835 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,835 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,835 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,835 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,836 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,836 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,837 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,837 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,837 - DEBUG - on stmt: $380compare_op.25 = n.2 > $const378.24.2
2025-07-23 17:15:45,837 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,837 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,837 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,839 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,839 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,839 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,839 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,839 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA689C70>
2025-07-23 17:15:45,839 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,840 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,840 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F6DA689A00>],
             20: [<numba.core.ir.Assign object at 0x000001F6DA689D30>]})
2025-07-23 17:15:45,841 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,841 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,841 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,842 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,842 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,842 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,842 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,842 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,842 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,843 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,843 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,843 - DEBUG - on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,843 - DEBUG - on stmt: flag.1 = const(bool, True)
2025-07-23 17:15:45,843 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,843 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,843 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,844 - DEBUG - on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,844 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,844 - DEBUG - on stmt: $34compare_op.2 = n.3 == $const32.1.2
2025-07-23 17:15:45,844 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,845 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,845 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,845 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,845 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,845 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,845 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,845 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,845 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,845 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,846 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,846 - DEBUG - on stmt: $binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,846 - DEBUG - find_def var='flag' stmt=$binop_add46.2 = flag + $const44.1.5
2025-07-23 17:15:45,846 - DEBUG - find_def_from_top label 42
2025-07-23 17:15:45,846 - DEBUG - idom 30 from label 42
2025-07-23 17:15:45,846 - DEBUG - find_def_from_bottom label 30
2025-07-23 17:15:45,846 - DEBUG - find_def_from_top label 30
2025-07-23 17:15:45,846 - DEBUG - insert phi node flag.2 = phi(incoming_values=[], incoming_blocks=[]) at 30
2025-07-23 17:15:45,847 - DEBUG - find_def_from_bottom label 0
2025-07-23 17:15:45,847 - DEBUG - incoming_def flag = const(bool, False)
2025-07-23 17:15:45,847 - DEBUG - find_def_from_bottom label 20
2025-07-23 17:15:45,847 - DEBUG - incoming_def flag.1 = const(bool, True)
2025-07-23 17:15:45,847 - DEBUG - replaced with: $binop_add46.2 = flag.2 + $const44.1.5
2025-07-23 17:15:45,847 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,847 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,847 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,847 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,848 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,848 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n.3, func=$100load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,848 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,848 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,848 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,848 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,848 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,849 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,849 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,849 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,849 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,849 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,849 - DEBUG - on stmt: $216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,849 - DEBUG - find_def var='flag' stmt=$216pred = call bool216(flag, func=bool216, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,849 - DEBUG - find_def_from_top label 42
2025-07-23 17:15:45,850 - DEBUG - idom 30 from label 42
2025-07-23 17:15:45,850 - DEBUG - find_def_from_bottom label 30
2025-07-23 17:15:45,850 - DEBUG - replaced with: $216pred = call bool216(flag.2, func=bool216, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,850 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,850 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,850 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,850 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,850 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,850 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,851 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,851 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,851 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,851 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,851 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,851 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,851 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,852 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,852 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,852 - DEBUG - on stmt: $276compare_op.5 = n.3 > $const274.4.2
2025-07-23 17:15:45,852 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,852 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,852 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,853 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,853 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,853 - DEBUG - on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[386, 262])
2025-07-23 17:15:45,853 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,853 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,853 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n.4, $294load_deref.3, func=$282load_global.0, args=[Var(n.4, unicode.py:2587), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,853 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,854 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,854 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,854 - DEBUG - on stmt: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,854 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,854 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,854 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,854 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,855 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,855 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,855 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,855 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,855 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,855 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,856 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,856 - DEBUG - on stmt: $380compare_op.25 = n.2 > $const378.24.2
2025-07-23 17:15:45,856 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,856 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,856 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,856 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,856 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,856 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,857 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,857 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA689F10>
2025-07-23 17:15:45,857 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,857 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,857 - DEBUG - Fix SSA violator on var idx
2025-07-23 17:15:45,858 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,858 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,858 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,858 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,858 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,858 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,858 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,858 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,859 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,859 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,859 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,859 - DEBUG - on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,859 - DEBUG - on stmt: flag.1 = const(bool, True)
2025-07-23 17:15:45,859 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,860 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,860 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,860 - DEBUG - on stmt: flag.2 = phi(incoming_values=[Var(flag, unicode.py:2573), Var(flag.1, unicode.py:2576)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,860 - DEBUG - on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,860 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,860 - DEBUG - on stmt: $34compare_op.2 = n.3 == $const32.1.2
2025-07-23 17:15:45,861 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,861 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,861 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,861 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,861 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,862 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,862 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,862 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,862 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,862 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,863 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,863 - DEBUG - on stmt: $binop_add46.2 = flag.2 + $const44.1.5
2025-07-23 17:15:45,863 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,863 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,863 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,863 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,863 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,864 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n.3, func=$100load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,864 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,864 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,864 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,864 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,864 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,864 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,865 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,865 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,865 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,865 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,865 - DEBUG - on stmt: $216pred = call bool216(flag.2, func=bool216, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,866 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,866 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,866 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,866 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,866 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,866 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,866 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,867 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,867 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,867 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,867 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,867 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,867 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,867 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,869 - DEBUG - first assign: idx
2025-07-23 17:15:45,869 - DEBUG - replaced with: idx = length - $const264.1.5
2025-07-23 17:15:45,870 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,870 - DEBUG - on stmt: $276compare_op.5 = n.3 > $const274.4.2
2025-07-23 17:15:45,870 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,871 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,871 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,871 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,871 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,872 - DEBUG - on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[386, 262])
2025-07-23 17:15:45,872 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,872 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,872 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n.4, $294load_deref.3, func=$282load_global.0, args=[Var(n.4, unicode.py:2587), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,873 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,873 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,873 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,873 - DEBUG - on stmt: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,874 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,874 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,874 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,874 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,875 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,875 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,875 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,875 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,876 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,876 - DEBUG - on stmt: idx = $binop_isub370.22
2025-07-23 17:15:45,876 - DEBUG - replaced with: idx.1 = $binop_isub370.22
2025-07-23 17:15:45,877 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,877 - DEBUG - on stmt: $380compare_op.25 = n.2 > $const378.24.2
2025-07-23 17:15:45,877 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,877 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,877 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,878 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,878 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,878 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,879 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,879 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA68A1B0>
2025-07-23 17:15:45,879 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,879 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,879 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {262: [<numba.core.ir.Assign object at 0x000001F6DA689460>],
             282: [<numba.core.ir.Assign object at 0x000001F6DA689CD0>]})
2025-07-23 17:15:45,879 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:45,880 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,880 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:45,880 - DEBUG - on stmt: flag = const(bool, False)
2025-07-23 17:15:45,880 - DEBUG - on stmt: $const12.2.2 = const(int, 0)
2025-07-23 17:15:45,880 - DEBUG - on stmt: $14compare_op.3 = n < $const12.2.2
2025-07-23 17:15:45,881 - DEBUG - on stmt: bool18 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,881 - DEBUG - on stmt: $18pred = call bool18($14compare_op.3, func=bool18, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,881 - DEBUG - on stmt: branch $18pred, 20, 30
2025-07-23 17:15:45,883 - DEBUG - ==== SSA block rewrite pass on 20
2025-07-23 17:15:45,883 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,883 - DEBUG - on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
2025-07-23 17:15:45,883 - DEBUG - on stmt: flag.1 = const(bool, True)
2025-07-23 17:15:45,883 - DEBUG - on stmt: jump 30
2025-07-23 17:15:45,883 - DEBUG - ==== SSA block rewrite pass on 30
2025-07-23 17:15:45,883 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,883 - DEBUG - on stmt: flag.2 = phi(incoming_values=[Var(flag, unicode.py:2573), Var(flag.1, unicode.py:2576)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,884 - DEBUG - on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 20])
2025-07-23 17:15:45,884 - DEBUG - on stmt: $const32.1.2 = const(int, 0)
2025-07-23 17:15:45,884 - DEBUG - on stmt: $34compare_op.2 = n.3 == $const32.1.2
2025-07-23 17:15:45,884 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,884 - DEBUG - on stmt: $38pred = call bool38($34compare_op.2, func=bool38, args=(Var($34compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,885 - DEBUG - on stmt: branch $38pred, 40, 42
2025-07-23 17:15:45,885 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:15:45,885 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,885 - DEBUG - on stmt: $const40.0 = const(str, 0)
2025-07-23 17:15:45,886 - DEBUG - on stmt: $40return_const.1 = cast(value=$const40.0)
2025-07-23 17:15:45,886 - DEBUG - on stmt: return $40return_const.1
2025-07-23 17:15:45,886 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:15:45,886 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,886 - DEBUG - on stmt: $const44.1.5 = const(int, 1)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $binop_add46.2 = flag.2 + $const44.1.5
2025-07-23 17:15:45,887 - DEBUG - on stmt: $50load_global.3 = global(int: <class 'int'>)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $60load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $70load_attr.7 = getattr(value=$60load_global.5, attr=floor)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $100load_attr.10 = getattr(value=$90load_global.8, attr=log10)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $122call.12 = call $100load_attr.10(n.3, func=$100load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,887 - DEBUG - on stmt: $130call.13 = call $70load_attr.7($122call.12, func=$70load_attr.7, args=[Var($122call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,889 - DEBUG - on stmt: $138call.14 = call $50load_global.3($130call.13, func=$50load_global.3, args=[Var($130call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,889 - DEBUG - on stmt: length = $binop_add46.2 + $138call.14
2025-07-23 17:15:45,889 - DEBUG - on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,889 - DEBUG - on stmt: $164load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:45,889 - DEBUG - on stmt: char_width = call $164load_global.17(kind, func=$164load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,890 - DEBUG - on stmt: $186load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:45,890 - DEBUG - on stmt: $const202.26.3 = const(bool, True)
2025-07-23 17:15:45,890 - DEBUG - on stmt: s = call $186load_global.21(kind, char_width, length, $const202.26.3, func=$186load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const202.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,890 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,891 - DEBUG - on stmt: $216pred = call bool216(flag.2, func=bool216, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,891 - DEBUG - on stmt: branch $216pred, 218, 262
2025-07-23 17:15:45,891 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:15:45,891 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,891 - DEBUG - on stmt: $218load_global.0 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,892 - DEBUG - on stmt: $const230.3.2 = const(int, 0)
2025-07-23 17:15:45,893 - DEBUG - on stmt: $232load_global.4 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,893 - DEBUG - on stmt: $const242.6.6 = const(str, -)
2025-07-23 17:15:45,894 - DEBUG - on stmt: $244call.7 = call $232load_global.4($const242.6.6, func=$232load_global.4, args=[Var($const242.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,894 - DEBUG - on stmt: $252call.8 = call $218load_global.0(s, $const230.3.2, $244call.7, func=$218load_global.0, args=[Var(s, unicode.py:2582), Var($const230.3.2, unicode.py:2584), Var($244call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,894 - DEBUG - on stmt: jump 262
2025-07-23 17:15:45,894 - DEBUG - ==== SSA block rewrite pass on 262
2025-07-23 17:15:45,894 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,895 - DEBUG - on stmt: $const264.1.5 = const(int, 1)
2025-07-23 17:15:45,895 - DEBUG - on stmt: idx = length - $const264.1.5
2025-07-23 17:15:45,895 - DEBUG - on stmt: $const274.4.2 = const(int, 0)
2025-07-23 17:15:45,895 - DEBUG - on stmt: $276compare_op.5 = n.3 > $const274.4.2
2025-07-23 17:15:45,895 - DEBUG - on stmt: bool280 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,895 - DEBUG - on stmt: $280pred = call bool280($276compare_op.5, func=bool280, args=(Var($276compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,896 - DEBUG - on stmt: branch $280pred, 282, 388
2025-07-23 17:15:45,896 - DEBUG - ==== SSA block rewrite pass on 282
2025-07-23 17:15:45,896 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,896 - DEBUG - on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[386, 262])
2025-07-23 17:15:45,897 - DEBUG - on stmt: $282load_global.0 = global(divmod: <built-in function divmod>)
2025-07-23 17:15:45,897 - DEBUG - on stmt: $294load_deref.3 = freevar(ten: 10)
2025-07-23 17:15:45,897 - DEBUG - on stmt: $296call.4 = call $282load_global.0(n.4, $294load_deref.3, func=$282load_global.0, args=[Var(n.4, unicode.py:2587), Var($294load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,897 - DEBUG - on stmt: $304unpack_sequence.7 = exhaust_iter(value=$296call.4, count=2)
2025-07-23 17:15:45,897 - DEBUG - on stmt: $304unpack_sequence.5 = static_getitem(value=$304unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,898 - DEBUG - on stmt: $304unpack_sequence.6 = static_getitem(value=$304unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
2025-07-23 17:15:45,898 - DEBUG - on stmt: n.2 = $304unpack_sequence.5
2025-07-23 17:15:45,898 - DEBUG - on stmt: digit = $304unpack_sequence.6
2025-07-23 17:15:45,898 - DEBUG - on stmt: $312load_global.8 = global(ord: <built-in function ord>)
2025-07-23 17:15:45,898 - DEBUG - on stmt: $const322.10.4 = const(str, 0)
2025-07-23 17:15:45,899 - DEBUG - on stmt: $324call.11 = call $312load_global.8($const322.10.4, func=$312load_global.8, args=[Var($const322.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,899 - DEBUG - on stmt: c = $324call.11 + digit
2025-07-23 17:15:45,899 - DEBUG - on stmt: $340load_global.14 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:45,899 - DEBUG - on stmt: $356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,899 - DEBUG - find_def var='idx' stmt=$356call.19 = call $340load_global.14(s, idx, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,899 - DEBUG - find_def_from_top label 282
2025-07-23 17:15:45,900 - DEBUG - insert phi node idx.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
2025-07-23 17:15:45,900 - DEBUG - find_def_from_bottom label 386
2025-07-23 17:15:45,900 - DEBUG - find_def_from_top label 386
2025-07-23 17:15:45,900 - DEBUG - idom 282 from label 386
2025-07-23 17:15:45,900 - DEBUG - find_def_from_bottom label 282
2025-07-23 17:15:45,901 - DEBUG - incoming_def idx.1 = $binop_isub370.22
2025-07-23 17:15:45,902 - DEBUG - find_def_from_bottom label 262
2025-07-23 17:15:45,902 - DEBUG - incoming_def idx = length - $const264.1.5
2025-07-23 17:15:45,903 - DEBUG - replaced with: $356call.19 = call $340load_global.14(s, idx.2, c, func=$340load_global.14, args=[Var(s, unicode.py:2582), Var(idx.2, unicode.py:2587), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,904 - DEBUG - on stmt: $const368.21.5 = const(int, 1)
2025-07-23 17:15:45,904 - DEBUG - on stmt: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,904 - DEBUG - find_def var='idx' stmt=$binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,905 - DEBUG - replaced with: $binop_isub370.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx.2, rhs=$const368.21.5, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:45,905 - DEBUG - on stmt: idx.1 = $binop_isub370.22
2025-07-23 17:15:45,905 - DEBUG - on stmt: $const378.24.2 = const(int, 0)
2025-07-23 17:15:45,905 - DEBUG - on stmt: $380compare_op.25 = n.2 > $const378.24.2
2025-07-23 17:15:45,906 - DEBUG - on stmt: bool384 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,906 - DEBUG - on stmt: $384pred = call bool384($380compare_op.25, func=bool384, args=(Var($380compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,906 - DEBUG - on stmt: branch $384pred, 386, 388
2025-07-23 17:15:45,906 - DEBUG - ==== SSA block rewrite pass on 386
2025-07-23 17:15:45,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,907 - DEBUG - on stmt: jump 282
2025-07-23 17:15:45,907 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:45,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA6896D0>
2025-07-23 17:15:45,907 - DEBUG - on stmt: $390return_value.1 = cast(value=s)
2025-07-23 17:15:45,908 - DEBUG - on stmt: return $390return_value.1
2025-07-23 17:15:45,954 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=400)
           2	RESUME(arg=0, lineno=400)
           4	LOAD_FAST(arg=0, lineno=402)
           6	LOAD_GLOBAL(arg=0, lineno=402)
          16	COMPARE_OP(arg=40, lineno=402)
          20	POP_JUMP_IF_FALSE(arg=1, lineno=402)
          22	RETURN_CONST(arg=1, lineno=403)
>         24	LOAD_FAST(arg=0, lineno=404)
          26	LOAD_GLOBAL(arg=2, lineno=404)
          36	COMPARE_OP(arg=40, lineno=404)
          40	POP_JUMP_IF_FALSE(arg=1, lineno=404)
          42	RETURN_CONST(arg=2, lineno=405)
>         44	LOAD_FAST(arg=0, lineno=406)
          46	LOAD_GLOBAL(arg=4, lineno=406)
          56	COMPARE_OP(arg=40, lineno=406)
          60	POP_JUMP_IF_FALSE(arg=1, lineno=406)
          62	RETURN_CONST(arg=3, lineno=407)
>         64	LOAD_GLOBAL(arg=7, lineno=409)
          74	LOAD_CONST(arg=4, lineno=409)
          76	CALL(arg=1, lineno=409)
          84	RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:45,954 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:45,954 - DEBUG - stack: []
2025-07-23 17:15:45,955 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:45,955 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=400)
2025-07-23 17:15:45,955 - DEBUG - stack []
2025-07-23 17:15:45,955 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=400)
2025-07-23 17:15:45,955 - DEBUG - stack []
2025-07-23 17:15:45,956 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=402)
2025-07-23 17:15:45,956 - DEBUG - stack []
2025-07-23 17:15:45,956 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=402)
2025-07-23 17:15:45,956 - DEBUG - stack ['$kind4.0']
2025-07-23 17:15:45,957 - DEBUG - dispatch pc=16, inst=COMPARE_OP(arg=40, lineno=402)
2025-07-23 17:15:45,957 - DEBUG - stack ['$kind4.0', '$6load_global.1']
2025-07-23 17:15:45,957 - DEBUG - dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=1, lineno=402)
2025-07-23 17:15:45,957 - DEBUG - stack ['$16compare_op.2']
2025-07-23 17:15:45,958 - DEBUG - end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=24, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,958 - DEBUG - pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:45,958 - DEBUG - stack: []
2025-07-23 17:15:45,958 - DEBUG - state.pc_initial: State(pc_initial=22 nstack_initial=0)
2025-07-23 17:15:45,958 - DEBUG - dispatch pc=22, inst=RETURN_CONST(arg=1, lineno=403)
2025-07-23 17:15:45,958 - DEBUG - stack []
2025-07-23 17:15:45,959 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,959 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:45,959 - DEBUG - stack: []
2025-07-23 17:15:45,960 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=0)
2025-07-23 17:15:45,960 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=404)
2025-07-23 17:15:45,960 - DEBUG - stack []
2025-07-23 17:15:45,960 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=404)
2025-07-23 17:15:45,960 - DEBUG - stack ['$kind24.0']
2025-07-23 17:15:45,961 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=404)
2025-07-23 17:15:45,961 - DEBUG - stack ['$kind24.0', '$26load_global.1']
2025-07-23 17:15:45,961 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=1, lineno=404)
2025-07-23 17:15:45,961 - DEBUG - stack ['$36compare_op.2']
2025-07-23 17:15:45,961 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,962 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:45,962 - DEBUG - stack: []
2025-07-23 17:15:45,962 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:45,962 - DEBUG - dispatch pc=42, inst=RETURN_CONST(arg=2, lineno=405)
2025-07-23 17:15:45,963 - DEBUG - stack []
2025-07-23 17:15:45,963 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,964 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:45,964 - DEBUG - stack: []
2025-07-23 17:15:45,964 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-23 17:15:45,964 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=406)
2025-07-23 17:15:45,964 - DEBUG - stack []
2025-07-23 17:15:45,964 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=406)
2025-07-23 17:15:45,965 - DEBUG - stack ['$kind44.0']
2025-07-23 17:15:45,965 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=40, lineno=406)
2025-07-23 17:15:45,965 - DEBUG - stack ['$kind44.0', '$46load_global.1']
2025-07-23 17:15:45,966 - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=1, lineno=406)
2025-07-23 17:15:45,966 - DEBUG - stack ['$56compare_op.2']
2025-07-23 17:15:45,967 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=64, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:45,967 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:45,967 - DEBUG - stack: []
2025-07-23 17:15:45,968 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2025-07-23 17:15:45,968 - DEBUG - dispatch pc=62, inst=RETURN_CONST(arg=3, lineno=407)
2025-07-23 17:15:45,968 - DEBUG - stack []
2025-07-23 17:15:45,968 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,969 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:45,969 - DEBUG - stack: []
2025-07-23 17:15:45,969 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-07-23 17:15:45,969 - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=7, lineno=409)
2025-07-23 17:15:45,970 - DEBUG - stack []
2025-07-23 17:15:45,970 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=409)
2025-07-23 17:15:45,970 - DEBUG - stack ['$null$64.1', '$64load_global.0']
2025-07-23 17:15:45,970 - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=409)
2025-07-23 17:15:45,970 - DEBUG - stack ['$null$64.1', '$64load_global.0', '$const74.2.4']
2025-07-23 17:15:45,971 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:45,971 - DEBUG - stack ['$76call.3']
2025-07-23 17:15:45,971 - DEBUG - end state. edges=[]
2025-07-23 17:15:45,971 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:45,972 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set()})
2025-07-23 17:15:45,973 - DEBUG - defmap: {}
2025-07-23 17:15:45,973 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,974 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:45,974 - DEBUG - keep phismap: {}
2025-07-23 17:15:45,974 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:45,974 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:45,975 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind4.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (16, {'lhs': '$kind4.0', 'rhs': '$6load_global.1', 'res': '$16compare_op.2'}), (20, {'pred': '$16compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 24: ()})
2025-07-23 17:15:45,977 - DEBUG - block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'retval': '$const22.0', 'castval': '$22return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,977 - DEBUG - block_infos State(pc_initial=24 nstack_initial=0):
AdaptBlockInfo(insts=((24, {'res': '$kind24.0'}), (26, {'idx': 1, 'res': '$26load_global.1'}), (36, {'lhs': '$kind24.0', 'rhs': '$26load_global.1', 'res': '$36compare_op.2'}), (40, {'pred': '$36compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 44: ()})
2025-07-23 17:15:45,977 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'retval': '$const42.0', 'castval': '$42return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,977 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$kind44.0'}), (46, {'idx': 2, 'res': '$46load_global.1'}), (56, {'lhs': '$kind44.0', 'rhs': '$46load_global.1', 'res': '$56compare_op.2'}), (60, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 64: ()})
2025-07-23 17:15:45,978 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'retval': '$const62.0', 'castval': '$62return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,978 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'idx': 3, 'res': '$64load_global.0'}), (74, {'res': '$const74.2.4'}), (76, {'func': '$64load_global.0', 'args': ['$const74.2.4'], 'kw_names': None, 'res': '$76call.3'}), (84, {'exc': '$76call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:45,980 - DEBUG - label 0:
    kind = arg(0, name=kind)                 ['kind']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $16compare_op.2 = kind == $6load_global.1 ['$16compare_op.2', '$6load_global.1', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 24                   ['$20pred']
label 22:
    $const22.0 = const(int, 1)               ['$const22.0']
    $22return_const.1 = cast(value=$const22.0) ['$22return_const.1', '$const22.0']
    return $22return_const.1                 ['$22return_const.1']
label 24:
    $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$26load_global.1']
    $36compare_op.2 = kind == $26load_global.1 ['$26load_global.1', '$36compare_op.2', 'kind']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.2', '$40pred', 'bool40']
    branch $40pred, 42, 44                   ['$40pred']
label 42:
    $const42.0 = const(int, 2)               ['$const42.0']
    $42return_const.1 = cast(value=$const42.0) ['$42return_const.1', '$const42.0']
    return $42return_const.1                 ['$42return_const.1']
label 44:
    $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$46load_global.1']
    $56compare_op.2 = kind == $46load_global.1 ['$46load_global.1', '$56compare_op.2', 'kind']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$60pred', 'bool60']
    branch $60pred, 62, 64                   ['$60pred']
label 62:
    $const62.0 = const(int, 4)               ['$const62.0']
    $62return_const.1 = cast(value=$const62.0) ['$62return_const.1', '$const62.0']
    return $62return_const.1                 ['$62return_const.1']
label 64:
    $64load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$64load_global.0']
    $const74.2.4 = const(str, Unexpected unicode encoding encountered) ['$const74.2.4']
    $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.0', '$76call.3', '$const74.2.4']
    raise $76call.3                          ['$76call.3']

2025-07-23 17:15:45,988 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:45,989 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,989 - DEBUG - on stmt: kind = arg(0, name=kind)
2025-07-23 17:15:45,989 - DEBUG - on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:45,990 - DEBUG - on stmt: $16compare_op.2 = kind == $6load_global.1
2025-07-23 17:15:45,990 - DEBUG - on stmt: bool20 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,990 - DEBUG - on stmt: $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,990 - DEBUG - on stmt: branch $20pred, 22, 24
2025-07-23 17:15:45,991 - DEBUG - ==== SSA block analysis pass on 22
2025-07-23 17:15:45,991 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,991 - DEBUG - on stmt: $const22.0 = const(int, 1)
2025-07-23 17:15:45,991 - DEBUG - on stmt: $22return_const.1 = cast(value=$const22.0)
2025-07-23 17:15:45,992 - DEBUG - on stmt: return $22return_const.1
2025-07-23 17:15:45,992 - DEBUG - ==== SSA block analysis pass on 24
2025-07-23 17:15:45,992 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,992 - DEBUG - on stmt: $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:45,993 - DEBUG - on stmt: $36compare_op.2 = kind == $26load_global.1
2025-07-23 17:15:45,993 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,993 - DEBUG - on stmt: $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,994 - DEBUG - on stmt: branch $40pred, 42, 44
2025-07-23 17:15:45,994 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:45,994 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,994 - DEBUG - on stmt: $const42.0 = const(int, 2)
2025-07-23 17:15:45,994 - DEBUG - on stmt: $42return_const.1 = cast(value=$const42.0)
2025-07-23 17:15:45,995 - DEBUG - on stmt: return $42return_const.1
2025-07-23 17:15:45,995 - DEBUG - ==== SSA block analysis pass on 44
2025-07-23 17:15:45,995 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,995 - DEBUG - on stmt: $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:45,995 - DEBUG - on stmt: $56compare_op.2 = kind == $46load_global.1
2025-07-23 17:15:45,996 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-23 17:15:45,996 - DEBUG - on stmt: $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:45,996 - DEBUG - on stmt: branch $60pred, 62, 64
2025-07-23 17:15:45,996 - DEBUG - ==== SSA block analysis pass on 62
2025-07-23 17:15:45,997 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,997 - DEBUG - on stmt: $const62.0 = const(int, 4)
2025-07-23 17:15:45,997 - DEBUG - on stmt: $62return_const.1 = cast(value=$const62.0)
2025-07-23 17:15:45,997 - DEBUG - on stmt: return $62return_const.1
2025-07-23 17:15:45,998 - DEBUG - ==== SSA block analysis pass on 64
2025-07-23 17:15:45,998 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6885F0>
2025-07-23 17:15:45,998 - DEBUG - on stmt: $64load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:45,998 - DEBUG - on stmt: $const74.2.4 = const(str, Unexpected unicode encoding encountered)
2025-07-23 17:15:45,999 - DEBUG - on stmt: $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,000 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode encoding encountered')
2025-07-23 17:15:46,000 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA6C9160>,
                                  0)],
             '$20pred': [(<numba.core.ir.Assign object at 0x000001F6DA6C9400>,
                          0)],
             '$22return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA6C96D0>,
                                    22)],
             '$26load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA6C99D0>,
                                   24)],
             '$36compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA6C9B50>,
                                  24)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6DA6C9DF0>,
                          24)],
             '$42return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA6CA0C0>,
                                    42)],
             '$46load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA6CA3C0>,
                                   44)],
             '$56compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA6CA540>,
                                  44)],
             '$60pred': [(<numba.core.ir.Assign object at 0x000001F6DA6CA7E0>,
                          44)],
             '$62return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA6CAAB0>,
                                    62)],
             '$64load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA6CACC0>,
                                   64)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA6C8FE0>,
                                  0)],
             '$76call.3': [(<numba.core.ir.Assign object at 0x000001F6DA6CAFC0>,
                            64)],
             '$const22.0': [(<numba.core.ir.Assign object at 0x000001F6DA6C95B0>,
                             22)],
             '$const42.0': [(<numba.core.ir.Assign object at 0x000001F6DA6C9FA0>,
                             42)],
             '$const62.0': [(<numba.core.ir.Assign object at 0x000001F6DA6CA990>,
                             62)],
             '$const74.2.4': [(<numba.core.ir.Assign object at 0x000001F6DA6CAE10>,
                               64)],
             'bool20': [(<numba.core.ir.Assign object at 0x000001F6DA6C92B0>,
                         0)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6DA6C9CA0>,
                         24)],
             'bool60': [(<numba.core.ir.Assign object at 0x000001F6DA6CA690>,
                         44)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6DA6C8BF0>,
                       0)]})
2025-07-23 17:15:46,002 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA6885F0>
2025-07-23 17:15:46,087 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2510)
           2	RESUME(arg=0, lineno=2510)
           4	LOAD_GLOBAL(arg=1, lineno=2511)
          14	LOAD_FAST(arg=0, lineno=2511)
          16	CALL(arg=1, lineno=2511)
          24	STORE_FAST(arg=1, lineno=2511)
          26	LOAD_FAST(arg=1, lineno=2512)
          28	LOAD_CONST(arg=1, lineno=2512)
          30	COMPARE_OP(arg=55, lineno=2512)
          34	POP_JUMP_IF_FALSE(arg=11, lineno=2512)
          36	LOAD_GLOBAL(arg=3, lineno=2514)
          46	LOAD_CONST(arg=2, lineno=2514)
          48	CALL(arg=1, lineno=2514)
          56	RAISE_VARARGS(arg=1, lineno=2514)
>         58	LOAD_GLOBAL(arg=5, lineno=2515)
          68	LOAD_FAST(arg=0, lineno=2515)
          70	LOAD_CONST(arg=3, lineno=2515)
          72	CALL(arg=2, lineno=2515)
          80	RETURN_VALUE(arg=None, lineno=2515)
2025-07-23 17:15:46,087 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:46,087 - DEBUG - stack: []
2025-07-23 17:15:46,087 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:46,087 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2510)
2025-07-23 17:15:46,087 - DEBUG - stack []
2025-07-23 17:15:46,089 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2510)
2025-07-23 17:15:46,089 - DEBUG - stack []
2025-07-23 17:15:46,089 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2511)
2025-07-23 17:15:46,089 - DEBUG - stack []
2025-07-23 17:15:46,090 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=2511)
2025-07-23 17:15:46,090 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:46,090 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=2511)
2025-07-23 17:15:46,090 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$c14.2']
2025-07-23 17:15:46,090 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=1, lineno=2511)
2025-07-23 17:15:46,091 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:46,091 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=2512)
2025-07-23 17:15:46,091 - DEBUG - stack []
2025-07-23 17:15:46,092 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=2512)
2025-07-23 17:15:46,092 - DEBUG - stack ['$lc26.4']
2025-07-23 17:15:46,092 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=55, lineno=2512)
2025-07-23 17:15:46,093 - DEBUG - stack ['$lc26.4', '$const28.5.1']
2025-07-23 17:15:46,093 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=11, lineno=2512)
2025-07-23 17:15:46,093 - DEBUG - stack ['$30compare_op.6']
2025-07-23 17:15:46,094 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,094 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
2025-07-23 17:15:46,094 - DEBUG - stack: []
2025-07-23 17:15:46,094 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-23 17:15:46,094 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=2514)
2025-07-23 17:15:46,095 - DEBUG - stack []
2025-07-23 17:15:46,095 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=2514)
2025-07-23 17:15:46,095 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2025-07-23 17:15:46,095 - DEBUG - dispatch pc=48, inst=CALL(arg=1, lineno=2514)
2025-07-23 17:15:46,095 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$const46.2.2']
2025-07-23 17:15:46,096 - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=2514)
2025-07-23 17:15:46,096 - DEBUG - stack ['$48call.3']
2025-07-23 17:15:46,096 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,096 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0)])
2025-07-23 17:15:46,096 - DEBUG - stack: []
2025-07-23 17:15:46,097 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
2025-07-23 17:15:46,097 - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=2515)
2025-07-23 17:15:46,097 - DEBUG - stack []
2025-07-23 17:15:46,097 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=2515)
2025-07-23 17:15:46,097 - DEBUG - stack ['$null$58.1', '$58load_global.0']
2025-07-23 17:15:46,098 - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=2515)
2025-07-23 17:15:46,098 - DEBUG - stack ['$null$58.1', '$58load_global.0', '$c68.2']
2025-07-23 17:15:46,098 - DEBUG - dispatch pc=72, inst=CALL(arg=2, lineno=2515)
2025-07-23 17:15:46,098 - DEBUG - stack ['$null$58.1', '$58load_global.0', '$c68.2', '$const70.3.3']
2025-07-23 17:15:46,098 - DEBUG - dispatch pc=80, inst=RETURN_VALUE(arg=None, lineno=2515)
2025-07-23 17:15:46,099 - DEBUG - stack ['$72call.4']
2025-07-23 17:15:46,099 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,099 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:46,099 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set()})
2025-07-23 17:15:46,099 - DEBUG - defmap: {}
2025-07-23 17:15:46,099 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,099 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,100 - DEBUG - keep phismap: {}
2025-07-23 17:15:46,100 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:46,100 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:46,100 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$c14.2'}), (16, {'func': '$4load_global.0', 'args': ['$c14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'res': '$lc26.4'}), (28, {'res': '$const28.5.1'}), (30, {'lhs': '$lc26.4', 'rhs': '$const28.5.1', 'res': '$30compare_op.6'}), (34, {'pred': '$30compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 58: ()})
2025-07-23 17:15:46,100 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 1, 'res': '$36load_global.0'}), (46, {'res': '$const46.2.2'}), (48, {'func': '$36load_global.0', 'args': ['$const46.2.2'], 'kw_names': None, 'res': '$48call.3'}), (56, {'exc': '$48call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,101 - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (68, {'res': '$c68.2'}), (70, {'res': '$const70.3.3'}), (72, {'func': '$58load_global.0', 'args': ['$c68.2', '$const70.3.3'], 'kw_names': None, 'res': '$72call.4'}), (80, {'retval': '$72call.4', 'castval': '$80return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,102 - DEBUG - label 0:
    c = arg(0, name=c)                       ['c']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    lc = call $4load_global.0(c, func=$4load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'c', 'lc']
    $const28.5.1 = const(int, 1)             ['$const28.5.1']
    $30compare_op.6 = lc != $const28.5.1     ['$30compare_op.6', '$const28.5.1', 'lc']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$34pred', 'bool34']
    branch $34pred, 36, 58                   ['$34pred']
label 36:
    $36load_global.0 = global(TypeError: <class 'TypeError'>) ['$36load_global.0']
    $const46.2.2 = const(str, ord() expected a character) ['$const46.2.2']
    $48call.3 = call $36load_global.0($const46.2.2, func=$36load_global.0, args=[Var($const46.2.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$48call.3', '$const46.2.2']
    raise $48call.3                          ['$48call.3']
label 58:
    $58load_global.0 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>) ['$58load_global.0']
    $const70.3.3 = const(int, 0)             ['$const70.3.3']
    $72call.4 = call $58load_global.0(c, $const70.3.3, func=$58load_global.0, args=[Var(c, unicode.py:2510), Var($const70.3.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_global.0', '$72call.4', '$const70.3.3', 'c']
    $80return_value.5 = cast(value=$72call.4) ['$72call.4', '$80return_value.5']
    return $80return_value.5                 ['$80return_value.5']

2025-07-23 17:15:46,108 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:46,108 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6CA2A0>
2025-07-23 17:15:46,108 - DEBUG - on stmt: c = arg(0, name=c)
2025-07-23 17:15:46,109 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:46,109 - DEBUG - on stmt: lc = call $4load_global.0(c, func=$4load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,109 - DEBUG - on stmt: $const28.5.1 = const(int, 1)
2025-07-23 17:15:46,110 - DEBUG - on stmt: $30compare_op.6 = lc != $const28.5.1
2025-07-23 17:15:46,110 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,110 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,110 - DEBUG - on stmt: branch $34pred, 36, 58
2025-07-23 17:15:46,110 - DEBUG - ==== SSA block analysis pass on 36
2025-07-23 17:15:46,111 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6CA2A0>
2025-07-23 17:15:46,111 - DEBUG - on stmt: $36load_global.0 = global(TypeError: <class 'TypeError'>)
2025-07-23 17:15:46,111 - DEBUG - on stmt: $const46.2.2 = const(str, ord() expected a character)
2025-07-23 17:15:46,111 - DEBUG - on stmt: $48call.3 = call $36load_global.0($const46.2.2, func=$36load_global.0, args=[Var($const46.2.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,111 - DEBUG - on stmt: <static> raise <class 'TypeError'>('ord() expected a character')
2025-07-23 17:15:46,111 - DEBUG - ==== SSA block analysis pass on 58
2025-07-23 17:15:46,112 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA6CA2A0>
2025-07-23 17:15:46,112 - DEBUG - on stmt: $58load_global.0 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>)
2025-07-23 17:15:46,112 - DEBUG - on stmt: $const70.3.3 = const(int, 0)
2025-07-23 17:15:46,112 - DEBUG - on stmt: $72call.4 = call $58load_global.0(c, $const70.3.3, func=$58load_global.0, args=[Var(c, unicode.py:2510), Var($const70.3.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,113 - DEBUG - on stmt: $80return_value.5 = cast(value=$72call.4)
2025-07-23 17:15:46,113 - DEBUG - on stmt: return $80return_value.5
2025-07-23 17:15:46,113 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30compare_op.6': [(<numba.core.ir.Assign object at 0x000001F6DA62AE40>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x000001F6DA62B230>,
                          0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA62B0E0>,
                                   36)],
             '$48call.3': [(<numba.core.ir.Assign object at 0x000001F6DA62AB70>,
                            36)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA62B080>,
                                  0)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA628710>,
                                   58)],
             '$72call.4': [(<numba.core.ir.Assign object at 0x000001F6DA62AA50>,
                            58)],
             '$80return_value.5': [(<numba.core.ir.Assign object at 0x000001F6DA62A210>,
                                    58)],
             '$const28.5.1': [(<numba.core.ir.Assign object at 0x000001F6DA62AEA0>,
                               0)],
             '$const46.2.2': [(<numba.core.ir.Assign object at 0x000001F6DA62AC60>,
                               36)],
             '$const70.3.3': [(<numba.core.ir.Assign object at 0x000001F6DA628530>,
                               58)],
             'bool34': [(<numba.core.ir.Assign object at 0x000001F6DA62AD80>,
                         0)],
             'c': [(<numba.core.ir.Assign object at 0x000001F6DA629040>, 0)],
             'lc': [(<numba.core.ir.Assign object at 0x000001F6DA628920>, 0)]})
2025-07-23 17:15:46,114 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA65C7D0>
2025-07-23 17:15:46,120 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=479)
           2	RESUME(arg=0, lineno=479)
           4	LOAD_FAST(arg=0, lineno=480)
           6	LOAD_ATTR(arg=0, lineno=480)
          26	RETURN_VALUE(arg=None, lineno=480)
2025-07-23 17:15:46,120 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:46,121 - DEBUG - stack: []
2025-07-23 17:15:46,121 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:46,121 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=479)
2025-07-23 17:15:46,121 - DEBUG - stack []
2025-07-23 17:15:46,121 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=479)
2025-07-23 17:15:46,121 - DEBUG - stack []
2025-07-23 17:15:46,122 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=480)
2025-07-23 17:15:46,122 - DEBUG - stack []
2025-07-23 17:15:46,122 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=480)
2025-07-23 17:15:46,122 - DEBUG - stack ['$s4.0']
2025-07-23 17:15:46,122 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=480)
2025-07-23 17:15:46,122 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:46,123 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,123 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:46,123 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:46,123 - DEBUG - defmap: {}
2025-07-23 17:15:46,124 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,124 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,124 - DEBUG - keep phismap: {}
2025-07-23 17:15:46,124 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:46,124 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:46,124 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$s4.0'}), (6, {'item': '$s4.0', 'res': '$6load_attr.1'}), (26, {'retval': '$6load_attr.1', 'castval': '$26return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,125 - DEBUG - label 0:
    s = arg(0, name=s)                       ['s']
    $6load_attr.1 = getattr(value=s, attr=_length) ['$6load_attr.1', 's']
    $26return_value.2 = cast(value=$6load_attr.1) ['$26return_value.2', '$6load_attr.1']
    return $26return_value.2                 ['$26return_value.2']

2025-07-23 17:15:46,126 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:46,126 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA556F60>
2025-07-23 17:15:46,127 - DEBUG - on stmt: s = arg(0, name=s)
2025-07-23 17:15:46,127 - DEBUG - on stmt: $6load_attr.1 = getattr(value=s, attr=_length)
2025-07-23 17:15:46,127 - DEBUG - on stmt: $26return_value.2 = cast(value=$6load_attr.1)
2025-07-23 17:15:46,127 - DEBUG - on stmt: return $26return_value.2
2025-07-23 17:15:46,127 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26return_value.2': [(<numba.core.ir.Assign object at 0x000001F6DA624EC0>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6DA626840>,
                                0)],
             's': [(<numba.core.ir.Assign object at 0x000001F6DA556CC0>, 0)]})
2025-07-23 17:15:46,128 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA556F60>
2025-07-23 17:15:46,194 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=290)
           2	RESUME(arg=0, lineno=290)
           4	LOAD_FAST(arg=0, lineno=292)
           6	LOAD_ATTR(arg=0, lineno=292)
          26	LOAD_GLOBAL(arg=2, lineno=292)
          36	COMPARE_OP(arg=40, lineno=292)
          40	POP_JUMP_IF_FALSE(arg=22, lineno=292)
          42	LOAD_GLOBAL(arg=5, lineno=293)
          52	LOAD_FAST(arg=0, lineno=293)
          54	LOAD_ATTR(arg=6, lineno=293)
          74	LOAD_FAST(arg=1, lineno=293)
          76	CALL(arg=2, lineno=293)
          84	RETURN_VALUE(arg=None, lineno=293)
>         86	LOAD_FAST(arg=0, lineno=294)
          88	LOAD_ATTR(arg=0, lineno=294)
         108	LOAD_GLOBAL(arg=8, lineno=294)
         118	COMPARE_OP(arg=40, lineno=294)
         122	POP_JUMP_IF_FALSE(arg=22, lineno=294)
         124	LOAD_GLOBAL(arg=11, lineno=295)
         134	LOAD_FAST(arg=0, lineno=295)
         136	LOAD_ATTR(arg=6, lineno=295)
         156	LOAD_FAST(arg=1, lineno=295)
         158	CALL(arg=2, lineno=295)
         166	RETURN_VALUE(arg=None, lineno=295)
>        168	LOAD_FAST(arg=0, lineno=296)
         170	LOAD_ATTR(arg=0, lineno=296)
         190	LOAD_GLOBAL(arg=12, lineno=296)
         200	COMPARE_OP(arg=40, lineno=296)
         204	POP_JUMP_IF_FALSE(arg=22, lineno=296)
         206	LOAD_GLOBAL(arg=15, lineno=297)
         216	LOAD_FAST(arg=0, lineno=297)
         218	LOAD_ATTR(arg=6, lineno=297)
         238	LOAD_FAST(arg=1, lineno=297)
         240	CALL(arg=2, lineno=297)
         248	RETURN_VALUE(arg=None, lineno=297)
>        250	RETURN_CONST(arg=1, lineno=301)
2025-07-23 17:15:46,195 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:46,195 - DEBUG - stack: []
2025-07-23 17:15:46,195 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:46,195 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=290)
2025-07-23 17:15:46,195 - DEBUG - stack []
2025-07-23 17:15:46,196 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=290)
2025-07-23 17:15:46,196 - DEBUG - stack []
2025-07-23 17:15:46,196 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=292)
2025-07-23 17:15:46,196 - DEBUG - stack []
2025-07-23 17:15:46,197 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=292)
2025-07-23 17:15:46,197 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:46,197 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=292)
2025-07-23 17:15:46,197 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:46,197 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=292)
2025-07-23 17:15:46,198 - DEBUG - stack ['$6load_attr.1', '$26load_global.2']
2025-07-23 17:15:46,198 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=22, lineno=292)
2025-07-23 17:15:46,198 - DEBUG - stack ['$36compare_op.3']
2025-07-23 17:15:46,198 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,198 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2025-07-23 17:15:46,199 - DEBUG - stack: []
2025-07-23 17:15:46,199 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:46,199 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=293)
2025-07-23 17:15:46,199 - DEBUG - stack []
2025-07-23 17:15:46,199 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=293)
2025-07-23 17:15:46,200 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:15:46,200 - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=293)
2025-07-23 17:15:46,201 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$a52.2']
2025-07-23 17:15:46,202 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=293)
2025-07-23 17:15:46,202 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3']
2025-07-23 17:15:46,202 - DEBUG - dispatch pc=76, inst=CALL(arg=2, lineno=293)
2025-07-23 17:15:46,202 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4']
2025-07-23 17:15:46,203 - DEBUG - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=293)
2025-07-23 17:15:46,203 - DEBUG - stack ['$76call.5']
2025-07-23 17:15:46,203 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,203 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2025-07-23 17:15:46,204 - DEBUG - stack: []
2025-07-23 17:15:46,204 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2025-07-23 17:15:46,204 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=294)
2025-07-23 17:15:46,204 - DEBUG - stack []
2025-07-23 17:15:46,204 - DEBUG - dispatch pc=88, inst=LOAD_ATTR(arg=0, lineno=294)
2025-07-23 17:15:46,204 - DEBUG - stack ['$a86.0']
2025-07-23 17:15:46,205 - DEBUG - dispatch pc=108, inst=LOAD_GLOBAL(arg=8, lineno=294)
2025-07-23 17:15:46,205 - DEBUG - stack ['$88load_attr.1']
2025-07-23 17:15:46,205 - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=40, lineno=294)
2025-07-23 17:15:46,205 - DEBUG - stack ['$88load_attr.1', '$108load_global.2']
2025-07-23 17:15:46,205 - DEBUG - dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=22, lineno=294)
2025-07-23 17:15:46,206 - DEBUG - stack ['$118compare_op.3']
2025-07-23 17:15:46,206 - DEBUG - end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=168, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,206 - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=168 nstack_initial=0)])
2025-07-23 17:15:46,206 - DEBUG - stack: []
2025-07-23 17:15:46,206 - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=0)
2025-07-23 17:15:46,207 - DEBUG - dispatch pc=124, inst=LOAD_GLOBAL(arg=11, lineno=295)
2025-07-23 17:15:46,207 - DEBUG - stack []
2025-07-23 17:15:46,207 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=0, lineno=295)
2025-07-23 17:15:46,207 - DEBUG - stack ['$null$124.1', '$124load_global.0']
2025-07-23 17:15:46,207 - DEBUG - dispatch pc=136, inst=LOAD_ATTR(arg=6, lineno=295)
2025-07-23 17:15:46,207 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$a134.2']
2025-07-23 17:15:46,208 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=295)
2025-07-23 17:15:46,208 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$136load_attr.3']
2025-07-23 17:15:46,208 - DEBUG - dispatch pc=158, inst=CALL(arg=2, lineno=295)
2025-07-23 17:15:46,208 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$136load_attr.3', '$i156.4']
2025-07-23 17:15:46,208 - DEBUG - dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=295)
2025-07-23 17:15:46,208 - DEBUG - stack ['$158call.5']
2025-07-23 17:15:46,208 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,208 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0)])
2025-07-23 17:15:46,208 - DEBUG - stack: []
2025-07-23 17:15:46,209 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2025-07-23 17:15:46,209 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=0, lineno=296)
2025-07-23 17:15:46,209 - DEBUG - stack []
2025-07-23 17:15:46,209 - DEBUG - dispatch pc=170, inst=LOAD_ATTR(arg=0, lineno=296)
2025-07-23 17:15:46,209 - DEBUG - stack ['$a168.0']
2025-07-23 17:15:46,209 - DEBUG - dispatch pc=190, inst=LOAD_GLOBAL(arg=12, lineno=296)
2025-07-23 17:15:46,210 - DEBUG - stack ['$170load_attr.1']
2025-07-23 17:15:46,210 - DEBUG - dispatch pc=200, inst=COMPARE_OP(arg=40, lineno=296)
2025-07-23 17:15:46,210 - DEBUG - stack ['$170load_attr.1', '$190load_global.2']
2025-07-23 17:15:46,210 - DEBUG - dispatch pc=204, inst=POP_JUMP_IF_FALSE(arg=22, lineno=296)
2025-07-23 17:15:46,210 - DEBUG - stack ['$200compare_op.3']
2025-07-23 17:15:46,211 - DEBUG - end state. edges=[Edge(pc=206, stack=(), blockstack=(), npush=0), Edge(pc=250, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,211 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=250 nstack_initial=0)])
2025-07-23 17:15:46,211 - DEBUG - stack: []
2025-07-23 17:15:46,211 - DEBUG - state.pc_initial: State(pc_initial=206 nstack_initial=0)
2025-07-23 17:15:46,211 - DEBUG - dispatch pc=206, inst=LOAD_GLOBAL(arg=15, lineno=297)
2025-07-23 17:15:46,211 - DEBUG - stack []
2025-07-23 17:15:46,211 - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=297)
2025-07-23 17:15:46,212 - DEBUG - stack ['$null$206.1', '$206load_global.0']
2025-07-23 17:15:46,212 - DEBUG - dispatch pc=218, inst=LOAD_ATTR(arg=6, lineno=297)
2025-07-23 17:15:46,212 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$a216.2']
2025-07-23 17:15:46,212 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=297)
2025-07-23 17:15:46,212 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$218load_attr.3']
2025-07-23 17:15:46,212 - DEBUG - dispatch pc=240, inst=CALL(arg=2, lineno=297)
2025-07-23 17:15:46,212 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$218load_attr.3', '$i238.4']
2025-07-23 17:15:46,212 - DEBUG - dispatch pc=248, inst=RETURN_VALUE(arg=None, lineno=297)
2025-07-23 17:15:46,212 - DEBUG - stack ['$240call.5']
2025-07-23 17:15:46,213 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,213 - DEBUG - pending: deque([State(pc_initial=250 nstack_initial=0)])
2025-07-23 17:15:46,213 - DEBUG - stack: []
2025-07-23 17:15:46,213 - DEBUG - state.pc_initial: State(pc_initial=250 nstack_initial=0)
2025-07-23 17:15:46,213 - DEBUG - dispatch pc=250, inst=RETURN_CONST(arg=1, lineno=301)
2025-07-23 17:15:46,213 - DEBUG - stack []
2025-07-23 17:15:46,213 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,214 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:46,214 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=250 nstack_initial=0): set()})
2025-07-23 17:15:46,214 - DEBUG - defmap: {}
2025-07-23 17:15:46,215 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,215 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,215 - DEBUG - keep phismap: {}
2025-07-23 17:15:46,215 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:46,215 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:46,215 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'idx': 1, 'res': '$26load_global.2'}), (36, {'lhs': '$6load_attr.1', 'rhs': '$26load_global.2', 'res': '$36compare_op.3'}), (40, {'pred': '$36compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 86: ()})
2025-07-23 17:15:46,215 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 2, 'res': '$42load_global.0'}), (52, {'res': '$a52.2'}), (54, {'item': '$a52.2', 'res': '$54load_attr.3'}), (74, {'res': '$i74.4'}), (76, {'func': '$42load_global.0', 'args': ['$54load_attr.3', '$i74.4'], 'kw_names': None, 'res': '$76call.5'}), (84, {'retval': '$76call.5', 'castval': '$84return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,216 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_attr.1'}), (108, {'idx': 4, 'res': '$108load_global.2'}), (118, {'lhs': '$88load_attr.1', 'rhs': '$108load_global.2', 'res': '$118compare_op.3'}), (122, {'pred': '$118compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 168: ()})
2025-07-23 17:15:46,216 - DEBUG - block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'idx': 5, 'res': '$124load_global.0'}), (134, {'res': '$a134.2'}), (136, {'item': '$a134.2', 'res': '$136load_attr.3'}), (156, {'res': '$i156.4'}), (158, {'func': '$124load_global.0', 'args': ['$136load_attr.3', '$i156.4'], 'kw_names': None, 'res': '$158call.5'}), (166, {'retval': '$158call.5', 'castval': '$166return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,216 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$a168.0'}), (170, {'item': '$a168.0', 'res': '$170load_attr.1'}), (190, {'idx': 6, 'res': '$190load_global.2'}), (200, {'lhs': '$170load_attr.1', 'rhs': '$190load_global.2', 'res': '$200compare_op.3'}), (204, {'pred': '$200compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: (), 250: ()})
2025-07-23 17:15:46,217 - DEBUG - block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'idx': 7, 'res': '$206load_global.0'}), (216, {'res': '$a216.2'}), (218, {'item': '$a216.2', 'res': '$218load_attr.3'}), (238, {'res': '$i238.4'}), (240, {'func': '$206load_global.0', 'args': ['$218load_attr.3', '$i238.4'], 'kw_names': None, 'res': '$240call.5'}), (248, {'retval': '$240call.5', 'castval': '$248return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,217 - DEBUG - block_infos State(pc_initial=250 nstack_initial=0):
AdaptBlockInfo(insts=((250, {'retval': '$const250.0', 'castval': '$250return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,219 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$26load_global.2']
    $36compare_op.3 = $6load_attr.1 == $26load_global.2 ['$26load_global.2', '$36compare_op.3', '$6load_attr.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 86                   ['$40pred']
label 42:
    $42load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$42load_global.0']
    $54load_attr.3 = getattr(value=a, attr=_data) ['$54load_attr.3', 'a']
    $76call.5 = call $42load_global.0($54load_attr.3, i, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$54load_attr.3', '$76call.5', 'i']
    $84return_value.6 = cast(value=$76call.5) ['$76call.5', '$84return_value.6']
    return $84return_value.6                 ['$84return_value.6']
label 86:
    $88load_attr.1 = getattr(value=a, attr=_kind) ['$88load_attr.1', 'a']
    $108load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$108load_global.2']
    $118compare_op.3 = $88load_attr.1 == $108load_global.2 ['$108load_global.2', '$118compare_op.3', '$88load_attr.1']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($118compare_op.3, func=bool122, args=(Var($118compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.3', '$122pred', 'bool122']
    branch $122pred, 124, 168                ['$122pred']
label 124:
    $124load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$124load_global.0']
    $136load_attr.3 = getattr(value=a, attr=_data) ['$136load_attr.3', 'a']
    $158call.5 = call $124load_global.0($136load_attr.3, i, func=$124load_global.0, args=[Var($136load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_global.0', '$136load_attr.3', '$158call.5', 'i']
    $166return_value.6 = cast(value=$158call.5) ['$158call.5', '$166return_value.6']
    return $166return_value.6                ['$166return_value.6']
label 168:
    $170load_attr.1 = getattr(value=a, attr=_kind) ['$170load_attr.1', 'a']
    $190load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$190load_global.2']
    $200compare_op.3 = $170load_attr.1 == $190load_global.2 ['$170load_attr.1', '$190load_global.2', '$200compare_op.3']
    bool204 = global(bool: <class 'bool'>)   ['bool204']
    $204pred = call bool204($200compare_op.3, func=bool204, args=(Var($200compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$200compare_op.3', '$204pred', 'bool204']
    branch $204pred, 206, 250                ['$204pred']
label 206:
    $206load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$206load_global.0']
    $218load_attr.3 = getattr(value=a, attr=_data) ['$218load_attr.3', 'a']
    $240call.5 = call $206load_global.0($218load_attr.3, i, func=$206load_global.0, args=[Var($218load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_global.0', '$218load_attr.3', '$240call.5', 'i']
    $248return_value.6 = cast(value=$240call.5) ['$240call.5', '$248return_value.6']
    return $248return_value.6                ['$248return_value.6']
label 250:
    $const250.0 = const(int, 0)              ['$const250.0']
    $250return_const.1 = cast(value=$const250.0) ['$250return_const.1', '$const250.0']
    return $250return_const.1                ['$250return_const.1']

2025-07-23 17:15:46,223 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:46,223 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,224 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:46,224 - DEBUG - on stmt: i = arg(1, name=i)
2025-07-23 17:15:46,224 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,224 - DEBUG - on stmt: $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:46,224 - DEBUG - on stmt: $36compare_op.3 = $6load_attr.1 == $26load_global.2
2025-07-23 17:15:46,225 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,225 - DEBUG - on stmt: $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,225 - DEBUG - on stmt: branch $40pred, 42, 86
2025-07-23 17:15:46,225 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:46,226 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,226 - DEBUG - on stmt: $42load_global.0 = global(deref_uint8: <intrinsic deref_uint8>)
2025-07-23 17:15:46,226 - DEBUG - on stmt: $54load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,226 - DEBUG - on stmt: $76call.5 = call $42load_global.0($54load_attr.3, i, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,227 - DEBUG - on stmt: $84return_value.6 = cast(value=$76call.5)
2025-07-23 17:15:46,227 - DEBUG - on stmt: return $84return_value.6
2025-07-23 17:15:46,227 - DEBUG - ==== SSA block analysis pass on 86
2025-07-23 17:15:46,227 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,227 - DEBUG - on stmt: $88load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,228 - DEBUG - on stmt: $108load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:46,228 - DEBUG - on stmt: $118compare_op.3 = $88load_attr.1 == $108load_global.2
2025-07-23 17:15:46,228 - DEBUG - on stmt: bool122 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,228 - DEBUG - on stmt: $122pred = call bool122($118compare_op.3, func=bool122, args=(Var($118compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,228 - DEBUG - on stmt: branch $122pred, 124, 168
2025-07-23 17:15:46,229 - DEBUG - ==== SSA block analysis pass on 124
2025-07-23 17:15:46,229 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,229 - DEBUG - on stmt: $124load_global.0 = global(deref_uint16: <intrinsic deref_uint16>)
2025-07-23 17:15:46,229 - DEBUG - on stmt: $136load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,229 - DEBUG - on stmt: $158call.5 = call $124load_global.0($136load_attr.3, i, func=$124load_global.0, args=[Var($136load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,229 - DEBUG - on stmt: $166return_value.6 = cast(value=$158call.5)
2025-07-23 17:15:46,229 - DEBUG - on stmt: return $166return_value.6
2025-07-23 17:15:46,230 - DEBUG - ==== SSA block analysis pass on 168
2025-07-23 17:15:46,230 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,230 - DEBUG - on stmt: $170load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,230 - DEBUG - on stmt: $190load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:46,231 - DEBUG - on stmt: $200compare_op.3 = $170load_attr.1 == $190load_global.2
2025-07-23 17:15:46,231 - DEBUG - on stmt: bool204 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,231 - DEBUG - on stmt: $204pred = call bool204($200compare_op.3, func=bool204, args=(Var($200compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,231 - DEBUG - on stmt: branch $204pred, 206, 250
2025-07-23 17:15:46,232 - DEBUG - ==== SSA block analysis pass on 206
2025-07-23 17:15:46,232 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,232 - DEBUG - on stmt: $206load_global.0 = global(deref_uint32: <intrinsic deref_uint32>)
2025-07-23 17:15:46,232 - DEBUG - on stmt: $218load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,233 - DEBUG - on stmt: $240call.5 = call $206load_global.0($218load_attr.3, i, func=$206load_global.0, args=[Var($218load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,233 - DEBUG - on stmt: $248return_value.6 = cast(value=$240call.5)
2025-07-23 17:15:46,233 - DEBUG - on stmt: return $248return_value.6
2025-07-23 17:15:46,233 - DEBUG - ==== SSA block analysis pass on 250
2025-07-23 17:15:46,233 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,233 - DEBUG - on stmt: $const250.0 = const(int, 0)
2025-07-23 17:15:46,234 - DEBUG - on stmt: $250return_const.1 = cast(value=$const250.0)
2025-07-23 17:15:46,234 - DEBUG - on stmt: return $250return_const.1
2025-07-23 17:15:46,234 - DEBUG - defs defaultdict(<class 'list'>,
            {'$108load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66BC410>,
                                    86)],
             '$118compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E66BC590>,
                                   86)],
             '$122pred': [(<numba.core.ir.Assign object at 0x000001F6E66BC800>,
                           86)],
             '$124load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66BC9E0>,
                                    124)],
             '$136load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E66BCC20>,
                                  124)],
             '$158call.5': [(<numba.core.ir.Assign object at 0x000001F6E66BCEC0>,
                             124)],
             '$166return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E66BCFE0>,
                                     124)],
             '$170load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66BD220>,
                                  168)],
             '$190load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66BD370>,
                                    168)],
             '$200compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E66BD4F0>,
                                   168)],
             '$204pred': [(<numba.core.ir.Assign object at 0x000001F6E66BD760>,
                           168)],
             '$206load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66BD940>,
                                    206)],
             '$218load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E66BDB80>,
                                  206)],
             '$240call.5': [(<numba.core.ir.Assign object at 0x000001F6E66BDE20>,
                             206)],
             '$248return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E66BDF40>,
                                     206)],
             '$250return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E66BE1B0>,
                                     250)],
             '$26load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66AA870>,
                                   0)],
             '$36compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E66AAB70>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E66AB890>,
                          0)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66ABA40>,
                                   42)],
             '$54load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E66ABC80>,
                                 42)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66AACC0>,
                                0)],
             '$76call.5': [(<numba.core.ir.Assign object at 0x000001F6E66ABF20>,
                            42)],
             '$84return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E66BC080>,
                                    42)],
             '$88load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66BC2C0>,
                                 86)],
             '$const250.0': [(<numba.core.ir.Assign object at 0x000001F6E66BE090>,
                              250)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E66AB4A0>, 0)],
             'bool122': [(<numba.core.ir.Assign object at 0x000001F6E66BC6E0>,
                          86)],
             'bool204': [(<numba.core.ir.Assign object at 0x000001F6E66BD640>,
                          168)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E66AAA20>,
                         0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E66AB2C0>, 0)]})
2025-07-23 17:15:46,236 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E66AB0B0>
2025-07-23 17:15:46,376 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=336)
           2	RESUME(arg=0, lineno=336)
           4	LOAD_FAST(arg=0, lineno=344)
           6	LOAD_ATTR(arg=0, lineno=344)
          26	LOAD_GLOBAL(arg=2, lineno=344)
          36	COMPARE_OP(arg=40, lineno=344)
          40	POP_JUMP_IF_FALSE(arg=24, lineno=344)
          42	LOAD_GLOBAL(arg=5, lineno=345)
          52	LOAD_FAST(arg=0, lineno=345)
          54	LOAD_ATTR(arg=6, lineno=345)
          74	LOAD_FAST(arg=1, lineno=345)
          76	LOAD_FAST(arg=2, lineno=345)
          78	CALL(arg=3, lineno=345)
          86	POP_TOP(arg=None, lineno=345)
          88	RETURN_CONST(arg=0, lineno=345)
>         90	LOAD_FAST(arg=0, lineno=346)
          92	LOAD_ATTR(arg=0, lineno=346)
         112	LOAD_GLOBAL(arg=8, lineno=346)
         122	COMPARE_OP(arg=40, lineno=346)
         126	POP_JUMP_IF_FALSE(arg=24, lineno=346)
         128	LOAD_GLOBAL(arg=11, lineno=347)
         138	LOAD_FAST(arg=0, lineno=347)
         140	LOAD_ATTR(arg=6, lineno=347)
         160	LOAD_FAST(arg=1, lineno=347)
         162	LOAD_FAST(arg=2, lineno=347)
         164	CALL(arg=3, lineno=347)
         172	POP_TOP(arg=None, lineno=347)
         174	RETURN_CONST(arg=0, lineno=347)
>        176	LOAD_FAST(arg=0, lineno=348)
         178	LOAD_ATTR(arg=0, lineno=348)
         198	LOAD_GLOBAL(arg=12, lineno=348)
         208	COMPARE_OP(arg=40, lineno=348)
         212	POP_JUMP_IF_FALSE(arg=24, lineno=348)
         214	LOAD_GLOBAL(arg=15, lineno=349)
         224	LOAD_FAST(arg=0, lineno=349)
         226	LOAD_ATTR(arg=6, lineno=349)
         246	LOAD_FAST(arg=1, lineno=349)
         248	LOAD_FAST(arg=2, lineno=349)
         250	CALL(arg=3, lineno=349)
         258	POP_TOP(arg=None, lineno=349)
         260	RETURN_CONST(arg=0, lineno=349)
>        262	LOAD_GLOBAL(arg=17, lineno=351)
         272	LOAD_CONST(arg=1, lineno=352)
         274	CALL(arg=1, lineno=351)
         282	RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:46,377 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:46,377 - DEBUG - stack: []
2025-07-23 17:15:46,377 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:46,377 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=336)
2025-07-23 17:15:46,377 - DEBUG - stack []
2025-07-23 17:15:46,378 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=336)
2025-07-23 17:15:46,378 - DEBUG - stack []
2025-07-23 17:15:46,378 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=344)
2025-07-23 17:15:46,378 - DEBUG - stack []
2025-07-23 17:15:46,379 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=344)
2025-07-23 17:15:46,379 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:46,379 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=344)
2025-07-23 17:15:46,380 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:46,380 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=344)
2025-07-23 17:15:46,380 - DEBUG - stack ['$6load_attr.1', '$26load_global.2']
2025-07-23 17:15:46,381 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=24, lineno=344)
2025-07-23 17:15:46,381 - DEBUG - stack ['$36compare_op.3']
2025-07-23 17:15:46,382 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=90, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,382 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:46,382 - DEBUG - stack: []
2025-07-23 17:15:46,382 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:46,383 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=345)
2025-07-23 17:15:46,383 - DEBUG - stack []
2025-07-23 17:15:46,383 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=345)
2025-07-23 17:15:46,383 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:15:46,384 - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=345)
2025-07-23 17:15:46,384 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$a52.2']
2025-07-23 17:15:46,384 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=345)
2025-07-23 17:15:46,385 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3']
2025-07-23 17:15:46,385 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=345)
2025-07-23 17:15:46,386 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4']
2025-07-23 17:15:46,386 - DEBUG - dispatch pc=78, inst=CALL(arg=3, lineno=345)
2025-07-23 17:15:46,386 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4', '$ch76.5']
2025-07-23 17:15:46,386 - DEBUG - dispatch pc=86, inst=POP_TOP(arg=None, lineno=345)
2025-07-23 17:15:46,387 - DEBUG - stack ['$78call.6']
2025-07-23 17:15:46,387 - DEBUG - dispatch pc=88, inst=RETURN_CONST(arg=0, lineno=345)
2025-07-23 17:15:46,388 - DEBUG - stack []
2025-07-23 17:15:46,388 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,388 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:46,388 - DEBUG - stack: []
2025-07-23 17:15:46,388 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-23 17:15:46,389 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=346)
2025-07-23 17:15:46,389 - DEBUG - stack []
2025-07-23 17:15:46,390 - DEBUG - dispatch pc=92, inst=LOAD_ATTR(arg=0, lineno=346)
2025-07-23 17:15:46,390 - DEBUG - stack ['$a90.0']
2025-07-23 17:15:46,390 - DEBUG - dispatch pc=112, inst=LOAD_GLOBAL(arg=8, lineno=346)
2025-07-23 17:15:46,390 - DEBUG - stack ['$92load_attr.1']
2025-07-23 17:15:46,391 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=40, lineno=346)
2025-07-23 17:15:46,391 - DEBUG - stack ['$92load_attr.1', '$112load_global.2']
2025-07-23 17:15:46,391 - DEBUG - dispatch pc=126, inst=POP_JUMP_IF_FALSE(arg=24, lineno=346)
2025-07-23 17:15:46,391 - DEBUG - stack ['$122compare_op.3']
2025-07-23 17:15:46,392 - DEBUG - end state. edges=[Edge(pc=128, stack=(), blockstack=(), npush=0), Edge(pc=176, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,392 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:46,392 - DEBUG - stack: []
2025-07-23 17:15:46,392 - DEBUG - state.pc_initial: State(pc_initial=128 nstack_initial=0)
2025-07-23 17:15:46,392 - DEBUG - dispatch pc=128, inst=LOAD_GLOBAL(arg=11, lineno=347)
2025-07-23 17:15:46,393 - DEBUG - stack []
2025-07-23 17:15:46,393 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=347)
2025-07-23 17:15:46,393 - DEBUG - stack ['$null$128.1', '$128load_global.0']
2025-07-23 17:15:46,393 - DEBUG - dispatch pc=140, inst=LOAD_ATTR(arg=6, lineno=347)
2025-07-23 17:15:46,393 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$a138.2']
2025-07-23 17:15:46,394 - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=1, lineno=347)
2025-07-23 17:15:46,394 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3']
2025-07-23 17:15:46,394 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=347)
2025-07-23 17:15:46,394 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4']
2025-07-23 17:15:46,394 - DEBUG - dispatch pc=164, inst=CALL(arg=3, lineno=347)
2025-07-23 17:15:46,395 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4', '$ch162.5']
2025-07-23 17:15:46,395 - DEBUG - dispatch pc=172, inst=POP_TOP(arg=None, lineno=347)
2025-07-23 17:15:46,395 - DEBUG - stack ['$164call.6']
2025-07-23 17:15:46,395 - DEBUG - dispatch pc=174, inst=RETURN_CONST(arg=0, lineno=347)
2025-07-23 17:15:46,395 - DEBUG - stack []
2025-07-23 17:15:46,395 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,396 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:46,396 - DEBUG - stack: []
2025-07-23 17:15:46,396 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2025-07-23 17:15:46,396 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=0, lineno=348)
2025-07-23 17:15:46,396 - DEBUG - stack []
2025-07-23 17:15:46,396 - DEBUG - dispatch pc=178, inst=LOAD_ATTR(arg=0, lineno=348)
2025-07-23 17:15:46,396 - DEBUG - stack ['$a176.0']
2025-07-23 17:15:46,397 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=12, lineno=348)
2025-07-23 17:15:46,397 - DEBUG - stack ['$178load_attr.1']
2025-07-23 17:15:46,397 - DEBUG - dispatch pc=208, inst=COMPARE_OP(arg=40, lineno=348)
2025-07-23 17:15:46,397 - DEBUG - stack ['$178load_attr.1', '$198load_global.2']
2025-07-23 17:15:46,397 - DEBUG - dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=24, lineno=348)
2025-07-23 17:15:46,397 - DEBUG - stack ['$208compare_op.3']
2025-07-23 17:15:46,397 - DEBUG - end state. edges=[Edge(pc=214, stack=(), blockstack=(), npush=0), Edge(pc=262, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:46,398 - DEBUG - pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:46,398 - DEBUG - stack: []
2025-07-23 17:15:46,398 - DEBUG - state.pc_initial: State(pc_initial=214 nstack_initial=0)
2025-07-23 17:15:46,398 - DEBUG - dispatch pc=214, inst=LOAD_GLOBAL(arg=15, lineno=349)
2025-07-23 17:15:46,398 - DEBUG - stack []
2025-07-23 17:15:46,398 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=349)
2025-07-23 17:15:46,398 - DEBUG - stack ['$null$214.1', '$214load_global.0']
2025-07-23 17:15:46,398 - DEBUG - dispatch pc=226, inst=LOAD_ATTR(arg=6, lineno=349)
2025-07-23 17:15:46,398 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$a224.2']
2025-07-23 17:15:46,398 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=1, lineno=349)
2025-07-23 17:15:46,399 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3']
2025-07-23 17:15:46,399 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=2, lineno=349)
2025-07-23 17:15:46,399 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4']
2025-07-23 17:15:46,399 - DEBUG - dispatch pc=250, inst=CALL(arg=3, lineno=349)
2025-07-23 17:15:46,399 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4', '$ch248.5']
2025-07-23 17:15:46,399 - DEBUG - dispatch pc=258, inst=POP_TOP(arg=None, lineno=349)
2025-07-23 17:15:46,399 - DEBUG - stack ['$250call.6']
2025-07-23 17:15:46,400 - DEBUG - dispatch pc=260, inst=RETURN_CONST(arg=0, lineno=349)
2025-07-23 17:15:46,400 - DEBUG - stack []
2025-07-23 17:15:46,400 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,400 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:46,400 - DEBUG - stack: []
2025-07-23 17:15:46,400 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=0)
2025-07-23 17:15:46,400 - DEBUG - dispatch pc=262, inst=LOAD_GLOBAL(arg=17, lineno=351)
2025-07-23 17:15:46,400 - DEBUG - stack []
2025-07-23 17:15:46,400 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=1, lineno=352)
2025-07-23 17:15:46,402 - DEBUG - stack ['$null$262.1', '$262load_global.0']
2025-07-23 17:15:46,402 - DEBUG - dispatch pc=274, inst=CALL(arg=1, lineno=351)
2025-07-23 17:15:46,402 - DEBUG - stack ['$null$262.1', '$262load_global.0', '$const272.2.1']
2025-07-23 17:15:46,402 - DEBUG - dispatch pc=282, inst=RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:46,403 - DEBUG - stack ['$274call.3']
2025-07-23 17:15:46,403 - DEBUG - end state. edges=[]
2025-07-23 17:15:46,403 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:46,403 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=262 nstack_initial=0): set()})
2025-07-23 17:15:46,404 - DEBUG - defmap: {}
2025-07-23 17:15:46,404 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,404 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:46,405 - DEBUG - keep phismap: {}
2025-07-23 17:15:46,405 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:46,405 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:46,405 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'idx': 1, 'res': '$26load_global.2'}), (36, {'lhs': '$6load_attr.1', 'rhs': '$26load_global.2', 'res': '$36compare_op.3'}), (40, {'pred': '$36compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 90: ()})
2025-07-23 17:15:46,405 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 2, 'res': '$42load_global.0'}), (52, {'res': '$a52.2'}), (54, {'item': '$a52.2', 'res': '$54load_attr.3'}), (74, {'res': '$i74.4'}), (76, {'res': '$ch76.5'}), (78, {'func': '$42load_global.0', 'args': ['$54load_attr.3', '$i74.4', '$ch76.5'], 'kw_names': None, 'res': '$78call.6'}), (88, {'retval': '$const88.7', 'castval': '$88return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,406 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$a90.0'}), (92, {'item': '$a90.0', 'res': '$92load_attr.1'}), (112, {'idx': 4, 'res': '$112load_global.2'}), (122, {'lhs': '$92load_attr.1', 'rhs': '$112load_global.2', 'res': '$122compare_op.3'}), (126, {'pred': '$122compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: (), 176: ()})
2025-07-23 17:15:46,406 - DEBUG - block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'idx': 5, 'res': '$128load_global.0'}), (138, {'res': '$a138.2'}), (140, {'item': '$a138.2', 'res': '$140load_attr.3'}), (160, {'res': '$i160.4'}), (162, {'res': '$ch162.5'}), (164, {'func': '$128load_global.0', 'args': ['$140load_attr.3', '$i160.4', '$ch162.5'], 'kw_names': None, 'res': '$164call.6'}), (174, {'retval': '$const174.7', 'castval': '$174return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,406 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$a176.0'}), (178, {'item': '$a176.0', 'res': '$178load_attr.1'}), (198, {'idx': 6, 'res': '$198load_global.2'}), (208, {'lhs': '$178load_attr.1', 'rhs': '$198load_global.2', 'res': '$208compare_op.3'}), (212, {'pred': '$208compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: (), 262: ()})
2025-07-23 17:15:46,406 - DEBUG - block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'idx': 7, 'res': '$214load_global.0'}), (224, {'res': '$a224.2'}), (226, {'item': '$a224.2', 'res': '$226load_attr.3'}), (246, {'res': '$i246.4'}), (248, {'res': '$ch248.5'}), (250, {'func': '$214load_global.0', 'args': ['$226load_attr.3', '$i246.4', '$ch248.5'], 'kw_names': None, 'res': '$250call.6'}), (260, {'retval': '$const260.7', 'castval': '$260return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,407 - DEBUG - block_infos State(pc_initial=262 nstack_initial=0):
AdaptBlockInfo(insts=((262, {'idx': 8, 'res': '$262load_global.0'}), (272, {'res': '$const272.2.1'}), (274, {'func': '$262load_global.0', 'args': ['$const272.2.1'], 'kw_names': None, 'res': '$274call.3'}), (282, {'exc': '$274call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:46,409 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$26load_global.2']
    $36compare_op.3 = $6load_attr.1 == $26load_global.2 ['$26load_global.2', '$36compare_op.3', '$6load_attr.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 90                   ['$40pred']
label 42:
    $42load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$42load_global.0']
    $54load_attr.3 = getattr(value=a, attr=_data) ['$54load_attr.3', 'a']
    $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$54load_attr.3', '$78call.6', 'ch', 'i']
    $const88.7 = const(NoneType, None)       ['$const88.7']
    $88return_const.8 = cast(value=$const88.7) ['$88return_const.8', '$const88.7']
    return $88return_const.8                 ['$88return_const.8']
label 90:
    $92load_attr.1 = getattr(value=a, attr=_kind) ['$92load_attr.1', 'a']
    $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$112load_global.2']
    $122compare_op.3 = $92load_attr.1 == $112load_global.2 ['$112load_global.2', '$122compare_op.3', '$92load_attr.1']
    bool126 = global(bool: <class 'bool'>)   ['bool126']
    $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.3', '$126pred', 'bool126']
    branch $126pred, 128, 176                ['$126pred']
label 128:
    $128load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$128load_global.0']
    $140load_attr.3 = getattr(value=a, attr=_data) ['$140load_attr.3', 'a']
    $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_global.0', '$140load_attr.3', '$164call.6', 'ch', 'i']
    $const174.7 = const(NoneType, None)      ['$const174.7']
    $174return_const.8 = cast(value=$const174.7) ['$174return_const.8', '$const174.7']
    return $174return_const.8                ['$174return_const.8']
label 176:
    $178load_attr.1 = getattr(value=a, attr=_kind) ['$178load_attr.1', 'a']
    $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$198load_global.2']
    $208compare_op.3 = $178load_attr.1 == $198load_global.2 ['$178load_attr.1', '$198load_global.2', '$208compare_op.3']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$208compare_op.3', '$212pred', 'bool212']
    branch $212pred, 214, 262                ['$212pred']
label 214:
    $214load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$214load_global.0']
    $226load_attr.3 = getattr(value=a, attr=_data) ['$226load_attr.3', 'a']
    $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_global.0', '$226load_attr.3', '$250call.6', 'ch', 'i']
    $const260.7 = const(NoneType, None)      ['$const260.7']
    $260return_const.8 = cast(value=$const260.7) ['$260return_const.8', '$const260.7']
    return $260return_const.8                ['$260return_const.8']
label 262:
    $262load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$262load_global.0']
    $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const272.2.1']
    $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$262load_global.0', '$274call.3', '$const272.2.1']
    raise $274call.3                         ['$274call.3']

2025-07-23 17:15:46,419 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:46,420 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,420 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:46,420 - DEBUG - on stmt: i = arg(1, name=i)
2025-07-23 17:15:46,421 - DEBUG - on stmt: ch = arg(2, name=ch)
2025-07-23 17:15:46,421 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,424 - DEBUG - on stmt: $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:46,424 - DEBUG - on stmt: $36compare_op.3 = $6load_attr.1 == $26load_global.2
2025-07-23 17:15:46,424 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,424 - DEBUG - on stmt: $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,425 - DEBUG - on stmt: branch $40pred, 42, 90
2025-07-23 17:15:46,425 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:46,425 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,425 - DEBUG - on stmt: $42load_global.0 = global(set_uint8: <intrinsic set_uint8>)
2025-07-23 17:15:46,426 - DEBUG - on stmt: $54load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,426 - DEBUG - on stmt: $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,426 - DEBUG - on stmt: $const88.7 = const(NoneType, None)
2025-07-23 17:15:46,427 - DEBUG - on stmt: $88return_const.8 = cast(value=$const88.7)
2025-07-23 17:15:46,427 - DEBUG - on stmt: return $88return_const.8
2025-07-23 17:15:46,427 - DEBUG - ==== SSA block analysis pass on 90
2025-07-23 17:15:46,427 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,428 - DEBUG - on stmt: $92load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,428 - DEBUG - on stmt: $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:46,428 - DEBUG - on stmt: $122compare_op.3 = $92load_attr.1 == $112load_global.2
2025-07-23 17:15:46,428 - DEBUG - on stmt: bool126 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,428 - DEBUG - on stmt: $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,428 - DEBUG - on stmt: branch $126pred, 128, 176
2025-07-23 17:15:46,429 - DEBUG - ==== SSA block analysis pass on 128
2025-07-23 17:15:46,429 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,429 - DEBUG - on stmt: $128load_global.0 = global(set_uint16: <intrinsic set_uint16>)
2025-07-23 17:15:46,429 - DEBUG - on stmt: $140load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,430 - DEBUG - on stmt: $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,430 - DEBUG - on stmt: $const174.7 = const(NoneType, None)
2025-07-23 17:15:46,430 - DEBUG - on stmt: $174return_const.8 = cast(value=$const174.7)
2025-07-23 17:15:46,430 - DEBUG - on stmt: return $174return_const.8
2025-07-23 17:15:46,431 - DEBUG - ==== SSA block analysis pass on 176
2025-07-23 17:15:46,431 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,431 - DEBUG - on stmt: $178load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:46,431 - DEBUG - on stmt: $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:46,431 - DEBUG - on stmt: $208compare_op.3 = $178load_attr.1 == $198load_global.2
2025-07-23 17:15:46,432 - DEBUG - on stmt: bool212 = global(bool: <class 'bool'>)
2025-07-23 17:15:46,432 - DEBUG - on stmt: $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,432 - DEBUG - on stmt: branch $212pred, 214, 262
2025-07-23 17:15:46,432 - DEBUG - ==== SSA block analysis pass on 214
2025-07-23 17:15:46,433 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,433 - DEBUG - on stmt: $214load_global.0 = global(set_uint32: <intrinsic set_uint32>)
2025-07-23 17:15:46,433 - DEBUG - on stmt: $226load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:46,433 - DEBUG - on stmt: $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,433 - DEBUG - on stmt: $const260.7 = const(NoneType, None)
2025-07-23 17:15:46,434 - DEBUG - on stmt: $260return_const.8 = cast(value=$const260.7)
2025-07-23 17:15:46,434 - DEBUG - on stmt: return $260return_const.8
2025-07-23 17:15:46,435 - DEBUG - ==== SSA block analysis pass on 262
2025-07-23 17:15:46,435 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0C0>
2025-07-23 17:15:46,436 - DEBUG - on stmt: $262load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:46,437 - DEBUG - on stmt: $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point)
2025-07-23 17:15:46,437 - DEBUG - on stmt: $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:46,437 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _set_code_point')
2025-07-23 17:15:46,437 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E673BE00>,
                                    90)],
             '$122compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E673BF80>,
                                   90)],
             '$126pred': [(<numba.core.ir.Assign object at 0x000001F6E6754230>,
                           90)],
             '$128load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6754410>,
                                    128)],
             '$140load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E6754650>,
                                  128)],
             '$164call.6': [(<numba.core.ir.Assign object at 0x000001F6E67549E0>,
                             128)],
             '$174return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E6754C20>,
                                     128)],
             '$178load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E6754E00>,
                                  176)],
             '$198load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E6754F50>,
                                    176)],
             '$208compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E67550D0>,
                                   176)],
             '$212pred': [(<numba.core.ir.Assign object at 0x000001F6E6755340>,
                           176)],
             '$214load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6755520>,
                                    214)],
             '$226load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E6755760>,
                                  214)],
             '$250call.6': [(<numba.core.ir.Assign object at 0x000001F6E6755AF0>,
                             214)],
             '$260return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E6755D30>,
                                     214)],
             '$262load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6755E20>,
                                    262)],
             '$26load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E673ACC0>,
                                   0)],
             '$274call.3': [(<numba.core.ir.Assign object at 0x000001F6E6756120>,
                             262)],
             '$36compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E673AE40>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E673B0E0>,
                          0)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E673B2C0>,
                                   42)],
             '$54load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E673B500>,
                                 42)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E673AB70>,
                                0)],
             '$78call.6': [(<numba.core.ir.Assign object at 0x000001F6E673B890>,
                            42)],
             '$88return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E673BAD0>,
                                    42)],
             '$92load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E673BCB0>,
                                 90)],
             '$const174.7': [(<numba.core.ir.Assign object at 0x000001F6E6754B00>,
                              128)],
             '$const260.7': [(<numba.core.ir.Assign object at 0x000001F6E6755C10>,
                              214)],
             '$const272.2.1': [(<numba.core.ir.Assign object at 0x000001F6E6755F70>,
                                262)],
             '$const88.7': [(<numba.core.ir.Assign object at 0x000001F6E673B9B0>,
                             42)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E673A5A0>, 0)],
             'bool126': [(<numba.core.ir.Assign object at 0x000001F6E6754110>,
                          90)],
             'bool212': [(<numba.core.ir.Assign object at 0x000001F6E6755220>,
                          176)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E673AF90>,
                         0)],
             'ch': [(<numba.core.ir.Assign object at 0x000001F6E673A900>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E673A6C0>, 0)]})
2025-07-23 17:15:46,439 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6739F10>
2025-07-23 17:15:48,091 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1006)
           2	COPY_FREE_VARS(arg=1, lineno=1006)
           4	RESUME(arg=0, lineno=1006)
           6	LOAD_CONST(arg=1, lineno=1007)
           8	STORE_FAST(arg=1, lineno=1007)
          10	LOAD_GLOBAL(arg=1, lineno=1008)
          20	LOAD_FAST(arg=0, lineno=1008)
          22	LOAD_FAST(arg=1, lineno=1008)
          24	CALL(arg=2, lineno=1008)
          32	LOAD_CONST(arg=2, lineno=1008)
          34	COMPARE_OP(arg=40, lineno=1008)
          38	POP_JUMP_IF_FALSE(arg=17, lineno=1008)
          40	PUSH_NULL(arg=None, lineno=1009)
          42	LOAD_GLOBAL(arg=3, lineno=1009)
          52	LOAD_FAST(arg=0, lineno=1009)
          54	LOAD_FAST(arg=1, lineno=1009)
          56	CALL(arg=2, lineno=1009)
          64	CALL(arg=0, lineno=1009)
          72	RETURN_VALUE(arg=None, lineno=1009)
>         74	LOAD_DEREF(arg=2, lineno=1013)
          76	RETURN_VALUE(arg=None, lineno=1013)
2025-07-23 17:15:48,092 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,092 - DEBUG - stack: []
2025-07-23 17:15:48,092 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,092 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1006)
2025-07-23 17:15:48,092 - DEBUG - stack []
2025-07-23 17:15:48,093 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=1006)
2025-07-23 17:15:48,093 - DEBUG - stack []
2025-07-23 17:15:48,093 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=1006)
2025-07-23 17:15:48,093 - DEBUG - stack []
2025-07-23 17:15:48,094 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1007)
2025-07-23 17:15:48,094 - DEBUG - stack []
2025-07-23 17:15:48,094 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=1007)
2025-07-23 17:15:48,094 - DEBUG - stack ['$const6.0.1']
2025-07-23 17:15:48,095 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=1008)
2025-07-23 17:15:48,095 - DEBUG - stack []
2025-07-23 17:15:48,095 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1008)
2025-07-23 17:15:48,095 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2025-07-23 17:15:48,096 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=1008)
2025-07-23 17:15:48,096 - DEBUG - stack ['$null$10.2', '$10load_global.1', '$obj20.3']
2025-07-23 17:15:48,096 - DEBUG - dispatch pc=24, inst=CALL(arg=2, lineno=1008)
2025-07-23 17:15:48,096 - DEBUG - stack ['$null$10.2', '$10load_global.1', '$obj20.3', '$attr22.4']
2025-07-23 17:15:48,096 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=1008)
2025-07-23 17:15:48,096 - DEBUG - stack ['$24call.5']
2025-07-23 17:15:48,097 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=40, lineno=1008)
2025-07-23 17:15:48,097 - DEBUG - stack ['$24call.5', '$const32.6.2']
2025-07-23 17:15:48,097 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1008)
2025-07-23 17:15:48,097 - DEBUG - stack ['$34compare_op.7']
2025-07-23 17:15:48,097 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:48,098 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-07-23 17:15:48,098 - DEBUG - stack: []
2025-07-23 17:15:48,098 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-07-23 17:15:48,098 - DEBUG - dispatch pc=40, inst=PUSH_NULL(arg=None, lineno=1009)
2025-07-23 17:15:48,098 - DEBUG - stack []
2025-07-23 17:15:48,098 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=3, lineno=1009)
2025-07-23 17:15:48,099 - DEBUG - stack ['$null$40.0']
2025-07-23 17:15:48,099 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1009)
2025-07-23 17:15:48,099 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1']
2025-07-23 17:15:48,100 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=1009)
2025-07-23 17:15:48,100 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1', '$obj52.3']
2025-07-23 17:15:48,100 - DEBUG - dispatch pc=56, inst=CALL(arg=2, lineno=1009)
2025-07-23 17:15:48,100 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1', '$obj52.3', '$attr54.4']
2025-07-23 17:15:48,100 - DEBUG - dispatch pc=64, inst=CALL(arg=0, lineno=1009)
2025-07-23 17:15:48,100 - DEBUG - stack ['$null$40.0', '$56call.5']
2025-07-23 17:15:48,101 - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=1009)
2025-07-23 17:15:48,101 - DEBUG - stack ['$64call.6']
2025-07-23 17:15:48,101 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,101 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-07-23 17:15:48,101 - DEBUG - stack: []
2025-07-23 17:15:48,101 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-07-23 17:15:48,101 - DEBUG - dispatch pc=74, inst=LOAD_DEREF(arg=2, lineno=1013)
2025-07-23 17:15:48,102 - DEBUG - stack []
2025-07-23 17:15:48,102 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1013)
2025-07-23 17:15:48,102 - DEBUG - stack ['$74load_deref.0']
2025-07-23 17:15:48,102 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,102 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,103 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-07-23 17:15:48,103 - DEBUG - defmap: {}
2025-07-23 17:15:48,103 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,103 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,104 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,104 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,104 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,104 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'res': '$obj20.3'}), (22, {'res': '$attr22.4'}), (24, {'func': '$10load_global.1', 'args': ['$obj20.3', '$attr22.4'], 'kw_names': None, 'res': '$24call.5'}), (32, {'res': '$const32.6.2'}), (34, {'lhs': '$24call.5', 'rhs': '$const32.6.2', 'res': '$34compare_op.7'}), (38, {'pred': '$34compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 74: ()})
2025-07-23 17:15:48,104 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {}), (42, {'idx': 1, 'res': '$42load_global.1'}), (52, {'res': '$obj52.3'}), (54, {'res': '$attr54.4'}), (56, {'func': '$42load_global.1', 'args': ['$obj52.3', '$attr54.4'], 'kw_names': None, 'res': '$56call.5'}), (64, {'func': '$56call.5', 'args': [], 'kw_names': None, 'res': '$64call.6'}), (72, {'retval': '$64call.6', 'castval': '$72return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,105 - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_deref.0'}), (76, {'retval': '$74load_deref.0', 'castval': '$76return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,105 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    $10load_global.1 = global(hasattr: <built-in function hasattr>) ['$10load_global.1']
    $24call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.1', '$24call.5', 'attr', 'obj']
    $const32.6.2 = const(bool, True)         ['$const32.6.2']
    $34compare_op.7 = $24call.5 == $const32.6.2 ['$24call.5', '$34compare_op.7', '$const32.6.2']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.7, func=bool38, args=(Var($34compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.7', '$38pred', 'bool38']
    branch $38pred, 40, 74                   ['$38pred']
label 40:
    $42load_global.1 = global(getattr: <built-in function getattr>) ['$42load_global.1']
    $56call.5 = call $42load_global.1(obj, attr, func=$42load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.1', '$56call.5', 'attr', 'obj']
    $64call.6 = call $56call.5(func=$56call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$56call.5', '$64call.6']
    $72return_value.7 = cast(value=$64call.6) ['$64call.6', '$72return_value.7']
    return $72return_value.7                 ['$72return_value.7']
label 74:
    $74load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$74load_deref.0']
    $76return_value.1 = cast(value=$74load_deref.0) ['$74load_deref.0', '$76return_value.1']
    return $76return_value.1                 ['$76return_value.1']

2025-07-23 17:15:48,112 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,112 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB7D0>
2025-07-23 17:15:48,112 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,112 - DEBUG - on stmt: attr = const(str, __repr__)
2025-07-23 17:15:48,112 - DEBUG - on stmt: $10load_global.1 = global(hasattr: <built-in function hasattr>)
2025-07-23 17:15:48,113 - DEBUG - on stmt: $24call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,113 - DEBUG - on stmt: $const32.6.2 = const(bool, True)
2025-07-23 17:15:48,113 - DEBUG - on stmt: $34compare_op.7 = $24call.5 == $const32.6.2
2025-07-23 17:15:48,113 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,113 - DEBUG - on stmt: $38pred = call bool38($34compare_op.7, func=bool38, args=(Var($34compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,113 - DEBUG - on stmt: branch $38pred, 40, 74
2025-07-23 17:15:48,113 - DEBUG - ==== SSA block analysis pass on 40
2025-07-23 17:15:48,114 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB7D0>
2025-07-23 17:15:48,114 - DEBUG - on stmt: $42load_global.1 = global(getattr: <built-in function getattr>)
2025-07-23 17:15:48,114 - DEBUG - on stmt: $56call.5 = call $42load_global.1(obj, attr, func=$42load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,114 - DEBUG - on stmt: $64call.6 = call $56call.5(func=$56call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,114 - DEBUG - on stmt: $72return_value.7 = cast(value=$64call.6)
2025-07-23 17:15:48,114 - DEBUG - on stmt: return $72return_value.7
2025-07-23 17:15:48,114 - DEBUG - ==== SSA block analysis pass on 74
2025-07-23 17:15:48,114 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66AB7D0>
2025-07-23 17:15:48,114 - DEBUG - on stmt: $74load_deref.0 = freevar(missing_repr_format: <object type:int64>)
2025-07-23 17:15:48,115 - DEBUG - on stmt: $76return_value.1 = cast(value=$74load_deref.0)
2025-07-23 17:15:48,115 - DEBUG - on stmt: return $76return_value.1
2025-07-23 17:15:48,115 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA62BBC0>,
                                   0)],
             '$24call.5': [(<numba.core.ir.Assign object at 0x000001F6E66D60C0>,
                            0)],
             '$34compare_op.7': [(<numba.core.ir.Assign object at 0x000001F6E66D56A0>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001F6E6705CA0>,
                          0)],
             '$42load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E66A9490>,
                                   40)],
             '$56call.5': [(<numba.core.ir.Assign object at 0x000001F6E66E8470>,
                            40)],
             '$64call.6': [(<numba.core.ir.Assign object at 0x000001F6E6761D30>,
                            40)],
             '$72return_value.7': [(<numba.core.ir.Assign object at 0x000001F6E6761E20>,
                                    40)],
             '$74load_deref.0': [(<numba.core.ir.Assign object at 0x000001F6E6761F40>,
                                  74)],
             '$76return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E6762090>,
                                    74)],
             '$const32.6.2': [(<numba.core.ir.Assign object at 0x000001F6E66D72C0>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x000001F6DA68BBF0>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x000001F6E673A540>,
                         0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6DA68A390>, 0)]})
2025-07-23 17:15:48,116 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E66AB7D0>
2025-07-23 17:15:48,120 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,120 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,120 - DEBUG - stack: []
2025-07-23 17:15:48,120 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,120 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:48,120 - DEBUG - stack []
2025-07-23 17:15:48,121 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:48,121 - DEBUG - stack []
2025-07-23 17:15:48,121 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:48,121 - DEBUG - stack []
2025-07-23 17:15:48,121 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:48,121 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,121 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:48,122 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:48,122 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:48,122 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:48,122 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,123 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:48,123 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,123 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,123 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,123 - DEBUG - defmap: {}
2025-07-23 17:15:48,124 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,124 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,124 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,124 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,125 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,125 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,125 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:48,127 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,127 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6762FC0>
2025-07-23 17:15:48,127 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,127 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:48,127 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:48,127 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,129 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:48,129 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:48,129 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E67704D0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E67705F0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6770140>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6763F80>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6763E60>, 0)]})
2025-07-23 17:15:48,129 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6762FC0>
2025-07-23 17:15:48,139 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m   - Of which 2 did not match due to:
   Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
     With argument(s): '(int64, unicode_type)':[0m
[1m    Rejected as the implementation raised a specific error:
      RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,146 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m    - Of which 2 did not match due to:
    Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
      With argument(s): '(int64, unicode_type)':[0m
[1m     Rejected as the implementation raised a specific error:
       RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,152 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,152 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,152 - DEBUG - stack: []
2025-07-23 17:15:48,153 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,153 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:48,153 - DEBUG - stack []
2025-07-23 17:15:48,154 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:48,154 - DEBUG - stack []
2025-07-23 17:15:48,154 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:48,154 - DEBUG - stack []
2025-07-23 17:15:48,155 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:48,155 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,155 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:48,155 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:48,155 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:48,156 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:48,156 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,156 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:48,156 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,157 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,157 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,157 - DEBUG - defmap: {}
2025-07-23 17:15:48,157 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,158 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,158 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,158 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,158 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,159 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,159 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:48,164 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,164 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6760EC0>
2025-07-23 17:15:48,164 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,164 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:48,165 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:48,165 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,165 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:48,165 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:48,166 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E66EB3E0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E66EAFC0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66EBB90>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E66EB890>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E66EB770>, 0)]})
2025-07-23 17:15:48,166 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6760EC0>
2025-07-23 17:15:48,200 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          14	LOAD_FAST(arg=0, lineno=955)
          16	LOAD_FAST(arg=1, lineno=955)
          18	LOAD_GLOBAL(arg=2, lineno=955)
          28	CALL(arg=3, lineno=955)
          36	RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:48,200 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,200 - DEBUG - stack: []
2025-07-23 17:15:48,200 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,201 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=954)
2025-07-23 17:15:48,202 - DEBUG - stack []
2025-07-23 17:15:48,203 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=954)
2025-07-23 17:15:48,203 - DEBUG - stack []
2025-07-23 17:15:48,204 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
2025-07-23 17:15:48,204 - DEBUG - stack []
2025-07-23 17:15:48,204 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=955)
2025-07-23 17:15:48,204 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,205 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=955)
2025-07-23 17:15:48,205 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:48,205 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=955)
2025-07-23 17:15:48,205 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:48,207 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=955)
2025-07-23 17:15:48,207 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3', '$18load_global.4']
2025-07-23 17:15:48,207 - DEBUG - dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:48,207 - DEBUG - stack ['$28call.5']
2025-07-23 17:15:48,208 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,208 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,208 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,208 - DEBUG - defmap: {}
2025-07-23 17:15:48,208 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,208 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,209 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,209 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,209 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,210 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'idx': 1, 'res': '$18load_global.4'}), (28, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3', '$18load_global.4'], 'kw_names': None, 'res': '$28call.5'}), (36, {'retval': '$28call.5', 'castval': '$36return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,213 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $18load_global.4 = global(_getattr_default: _getattr_default_type()) ['$18load_global.4']
    $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.4', '$28call.5', '$4load_global.0', 'name', 'obj']
    $36return_value.6 = cast(value=$28call.5) ['$28call.5', '$36return_value.6']
    return $36return_value.6                 ['$36return_value.6']

2025-07-23 17:15:48,215 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,215 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E668EA20>
2025-07-23 17:15:48,215 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,216 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:48,216 - DEBUG - on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
2025-07-23 17:15:48,216 - DEBUG - on stmt: $18load_global.4 = global(_getattr_default: _getattr_default_type())
2025-07-23 17:15:48,216 - DEBUG - on stmt: $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,217 - DEBUG - on stmt: $36return_value.6 = cast(value=$28call.5)
2025-07-23 17:15:48,217 - DEBUG - on stmt: return $36return_value.6
2025-07-23 17:15:48,217 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18load_global.4': [(<numba.core.ir.Assign object at 0x000001F6E6756CC0>,
                                   0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x000001F6E6756F00>,
                            0)],
             '$36return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E67576E0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67562A0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6756390>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6756720>, 0)]})
2025-07-23 17:15:48,218 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E668EA20>
2025-07-23 17:15:48,254 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2597)
           2	RESUME(arg=0, lineno=2597)
           4	LOAD_FAST(arg=0, lineno=2597)
           6	LOAD_ATTR(arg=1, lineno=2597)
          26	CALL(arg=0, lineno=2597)
          34	RETURN_VALUE(arg=None, lineno=2597)
2025-07-23 17:15:48,254 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,255 - DEBUG - stack: []
2025-07-23 17:15:48,255 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,255 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2597)
2025-07-23 17:15:48,255 - DEBUG - stack []
2025-07-23 17:15:48,255 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2597)
2025-07-23 17:15:48,256 - DEBUG - stack []
2025-07-23 17:15:48,256 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2597)
2025-07-23 17:15:48,256 - DEBUG - stack []
2025-07-23 17:15:48,256 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=2597)
2025-07-23 17:15:48,256 - DEBUG - stack ['$n4.0']
2025-07-23 17:15:48,257 - DEBUG - dispatch pc=26, inst=CALL(arg=0, lineno=2597)
2025-07-23 17:15:48,257 - DEBUG - stack ['$null$6.2', '$6load_attr.1']
2025-07-23 17:15:48,257 - DEBUG - dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=2597)
2025-07-23 17:15:48,257 - DEBUG - stack ['$26call.3']
2025-07-23 17:15:48,257 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,258 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,258 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,258 - DEBUG - defmap: {}
2025-07-23 17:15:48,258 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,258 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,258 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,258 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,259 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,259 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$n4.0'}), (6, {'item': '$n4.0', 'res': '$6load_attr.1'}), (26, {'func': '$6load_attr.1', 'args': [], 'kw_names': None, 'res': '$26call.3'}), (34, {'retval': '$26call.3', 'castval': '$34return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,259 - DEBUG - label 0:
    n = arg(0, name=n)                       ['n']
    $6load_attr.1 = getattr(value=n, attr=__str__) ['$6load_attr.1', 'n']
    $26call.3 = call $6load_attr.1(func=$6load_attr.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.3', '$6load_attr.1']
    $34return_value.4 = cast(value=$26call.3) ['$26call.3', '$34return_value.4']
    return $34return_value.4                 ['$34return_value.4']

2025-07-23 17:15:48,271 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA64E0F0>
2025-07-23 17:15:48,272 - DEBUG - on stmt: n = arg(0, name=n)
2025-07-23 17:15:48,272 - DEBUG - on stmt: $6load_attr.1 = getattr(value=n, attr=__str__)
2025-07-23 17:15:48,272 - DEBUG - on stmt: $26call.3 = call $6load_attr.1(func=$6load_attr.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,272 - DEBUG - on stmt: $34return_value.4 = cast(value=$26call.3)
2025-07-23 17:15:48,272 - DEBUG - on stmt: return $34return_value.4
2025-07-23 17:15:48,272 - DEBUG - defs defaultdict(<class 'list'>,
            {'$26call.3': [(<numba.core.ir.Assign object at 0x000001F6E66A96A0>,
                            0)],
             '$34return_value.4': [(<numba.core.ir.Assign object at 0x000001F6E66A9AF0>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66A8050>,
                                0)],
             'n': [(<numba.core.ir.Assign object at 0x000001F6E66A8140>, 0)]})
2025-07-23 17:15:48,273 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA64E0F0>
2025-07-23 17:15:48,407 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,407 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,407 - DEBUG - stack: []
2025-07-23 17:15:48,408 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,408 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:48,408 - DEBUG - stack []
2025-07-23 17:15:48,408 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:48,408 - DEBUG - stack []
2025-07-23 17:15:48,408 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:48,408 - DEBUG - stack []
2025-07-23 17:15:48,409 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:48,409 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,409 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:48,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:48,410 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:48,410 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:48,411 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,411 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:48,411 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,411 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,412 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,412 - DEBUG - defmap: {}
2025-07-23 17:15:48,412 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,413 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,413 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,413 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,413 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,414 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,414 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:48,417 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,417 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E672E090>
2025-07-23 17:15:48,417 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,419 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:48,419 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:48,419 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,420 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:48,420 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:48,420 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E672F980>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E672DC10>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E672F8F0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E672FB00>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E672FE30>, 0)]})
2025-07-23 17:15:48,421 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E672E090>
2025-07-23 17:15:48,428 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m     - Of which 2 did not match due to:
     Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
       With argument(s): '(int64, unicode_type)':[0m
[1m      Rejected as the implementation raised a specific error:
        RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,441 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,496 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,496 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,497 - DEBUG - stack: []
2025-07-23 17:15:48,497 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,497 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:48,497 - DEBUG - stack []
2025-07-23 17:15:48,497 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:48,497 - DEBUG - stack []
2025-07-23 17:15:48,497 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:48,499 - DEBUG - stack []
2025-07-23 17:15:48,499 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:48,499 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,499 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:48,499 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:48,499 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:48,499 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:48,500 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:48,500 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:48,500 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,500 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,500 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,501 - DEBUG - defmap: {}
2025-07-23 17:15:48,501 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,502 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,503 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,503 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,503 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,503 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,504 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:48,624 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67065A0>
2025-07-23 17:15:48,624 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:48,624 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:48,625 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:48,625 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,625 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:48,625 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:48,625 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E66D52B0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E66D4F50>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66D6DB0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E66D6FF0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E66D4950>, 0)]})
2025-07-23 17:15:48,626 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67065A0>
2025-07-23 17:15:48,633 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,641 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:48,709 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1527)
           2	RESUME(arg=0, lineno=1527)
           4	LOAD_GLOBAL(arg=1, lineno=1528)
          14	LOAD_FAST(arg=0, lineno=1528)
          16	LOAD_FAST(arg=1, lineno=1528)
          18	CALL(arg=2, lineno=1528)
          26	RETURN_VALUE(arg=None, lineno=1528)
2025-07-23 17:15:48,709 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,710 - DEBUG - stack: []
2025-07-23 17:15:48,710 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,711 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1527)
2025-07-23 17:15:48,712 - DEBUG - stack []
2025-07-23 17:15:48,712 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1527)
2025-07-23 17:15:48,712 - DEBUG - stack []
2025-07-23 17:15:48,713 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1528)
2025-07-23 17:15:48,713 - DEBUG - stack []
2025-07-23 17:15:48,713 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1528)
2025-07-23 17:15:48,713 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,713 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=1528)
2025-07-23 17:15:48,713 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$sep14.2']
2025-07-23 17:15:48,714 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=1528)
2025-07-23 17:15:48,714 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$sep14.2', '$parts16.3']
2025-07-23 17:15:48,714 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=1528)
2025-07-23 17:15:48,714 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:48,714 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,714 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,715 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:48,715 - DEBUG - defmap: {}
2025-07-23 17:15:48,715 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,715 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:48,715 - DEBUG - keep phismap: {}
2025-07-23 17:15:48,715 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:48,716 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,716 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$sep14.2'}), (16, {'res': '$parts16.3'}), (18, {'func': '$4load_global.0', 'args': ['$sep14.2', '$parts16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,716 - DEBUG - label 0:
    sep = arg(0, name=sep)                   ['sep']
    parts = arg(1, name=parts)               ['parts']
    $4load_global.0 = global(join_list: <function join_list at 0x000001F6D191BEC0>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(sep, parts, func=$4load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'parts', 'sep']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:48,718 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,718 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63ED80>
2025-07-23 17:15:48,719 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,719 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,719 - DEBUG - on stmt: $4load_global.0 = global(join_list: <function join_list at 0x000001F6D191BEC0>)
2025-07-23 17:15:48,719 - DEBUG - on stmt: $18call.4 = call $4load_global.0(sep, parts, func=$4load_global.0, args=[Var(sep, unicode.py:1527), Var(parts, unicode.py:1527)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,720 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:48,720 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:48,720 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6DA64FB30>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6DA64EC00>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA64F7A0>,
                                  0)],
             'parts': [(<numba.core.ir.Assign object at 0x000001F6DA64D6D0>,
                        0)],
             'sep': [(<numba.core.ir.Assign object at 0x000001F6DA64E9F0>, 0)]})
2025-07-23 17:15:48,721 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA63ED80>
2025-07-23 17:15:48,725 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1490)
           2	RESUME(arg=0, lineno=1490)
           4	LOAD_GLOBAL(arg=1, lineno=1492)
          14	LOAD_FAST(arg=1, lineno=1492)
          16	CALL(arg=1, lineno=1492)
          24	STORE_FAST(arg=2, lineno=1492)
          26	LOAD_FAST(arg=2, lineno=1493)
          28	LOAD_CONST(arg=1, lineno=1493)
          30	COMPARE_OP(arg=40, lineno=1493)
          34	POP_JUMP_IF_FALSE(arg=1, lineno=1493)
          36	RETURN_CONST(arg=2, lineno=1494)
>         38	LOAD_GLOBAL(arg=1, lineno=1497)
          48	LOAD_FAST(arg=0, lineno=1497)
          50	CALL(arg=1, lineno=1497)
          58	STORE_FAST(arg=3, lineno=1497)
          60	LOAD_FAST(arg=2, lineno=1498)
          62	LOAD_CONST(arg=3, lineno=1498)
          64	BINARY_OP(arg=10, lineno=1498)
          68	LOAD_FAST(arg=3, lineno=1498)
          70	BINARY_OP(arg=5, lineno=1498)
          74	STORE_FAST(arg=4, lineno=1498)
          76	LOAD_FAST(arg=0, lineno=1499)
          78	LOAD_ATTR(arg=2, lineno=1499)
          98	STORE_FAST(arg=5, lineno=1499)
         100	LOAD_FAST(arg=0, lineno=1500)
         102	LOAD_ATTR(arg=4, lineno=1500)
         122	STORE_FAST(arg=6, lineno=1500)
         124	LOAD_FAST(arg=1, lineno=1501)
         126	GET_ITER(arg=None, lineno=1501)
>        128	FOR_ITER(arg=60, lineno=1501)
         132	STORE_FAST(arg=7, lineno=1501)
         134	LOAD_FAST(arg=4, lineno=1502)
         136	LOAD_GLOBAL(arg=1, lineno=1502)
         146	LOAD_FAST(arg=7, lineno=1502)
         148	CALL(arg=1, lineno=1502)
         156	BINARY_OP(arg=13, lineno=1502)
         160	STORE_FAST(arg=4, lineno=1502)
         162	LOAD_GLOBAL(arg=7, lineno=1503)
         172	LOAD_FAST(arg=5, lineno=1503)
         174	LOAD_FAST(arg=7, lineno=1503)
         176	LOAD_ATTR(arg=2, lineno=1503)
         196	CALL(arg=2, lineno=1503)
         204	STORE_FAST(arg=5, lineno=1503)
         206	LOAD_GLOBAL(arg=9, lineno=1504)
         216	LOAD_FAST(arg=6, lineno=1504)
         218	LOAD_FAST(arg=7, lineno=1504)
         220	LOAD_ATTR(arg=4, lineno=1504)
         240	CALL(arg=2, lineno=1504)
         248	STORE_FAST(arg=6, lineno=1504)
         250	JUMP_BACKWARD(arg=62, lineno=1504)
>        252	END_FOR(arg=None, lineno=1501)
         254	LOAD_GLOBAL(arg=11, lineno=1506)
         264	LOAD_FAST(arg=5, lineno=1506)
         266	LOAD_FAST(arg=4, lineno=1506)
         268	LOAD_FAST(arg=6, lineno=1506)
         270	CALL(arg=3, lineno=1506)
         278	STORE_FAST(arg=8, lineno=1506)
         280	LOAD_FAST(arg=1, lineno=1509)
         282	LOAD_CONST(arg=1, lineno=1509)
         284	BINARY_SUBSCR(arg=None, lineno=1509)
         288	STORE_FAST(arg=9, lineno=1509)
         290	LOAD_GLOBAL(arg=13, lineno=1510)
         300	LOAD_FAST(arg=8, lineno=1510)
         302	LOAD_CONST(arg=1, lineno=1510)
         304	LOAD_FAST(arg=9, lineno=1510)
         306	LOAD_CONST(arg=1, lineno=1510)
         308	LOAD_GLOBAL(arg=1, lineno=1510)
         318	LOAD_FAST(arg=9, lineno=1510)
         320	CALL(arg=1, lineno=1510)
         328	CALL(arg=5, lineno=1510)
         336	POP_TOP(arg=None, lineno=1510)
         338	LOAD_GLOBAL(arg=1, lineno=1511)
         348	LOAD_FAST(arg=9, lineno=1511)
         350	CALL(arg=1, lineno=1511)
         358	STORE_FAST(arg=10, lineno=1511)
         360	LOAD_GLOBAL(arg=15, lineno=1512)
         370	LOAD_CONST(arg=3, lineno=1512)
         372	LOAD_FAST(arg=2, lineno=1512)
         374	CALL(arg=2, lineno=1512)
         382	GET_ITER(arg=None, lineno=1512)
>        384	FOR_ITER(arg=65, lineno=1512)
         388	STORE_FAST(arg=11, lineno=1512)
         390	LOAD_GLOBAL(arg=13, lineno=1513)
         400	LOAD_FAST(arg=8, lineno=1513)
         402	LOAD_FAST(arg=10, lineno=1513)
         404	LOAD_FAST(arg=0, lineno=1513)
         406	LOAD_CONST(arg=1, lineno=1513)
         408	LOAD_FAST(arg=3, lineno=1513)
         410	CALL(arg=5, lineno=1513)
         418	POP_TOP(arg=None, lineno=1513)
         420	LOAD_FAST(arg=10, lineno=1514)
         422	LOAD_FAST(arg=3, lineno=1514)
         424	BINARY_OP(arg=13, lineno=1514)
         428	STORE_FAST(arg=10, lineno=1514)
         430	LOAD_FAST(arg=1, lineno=1515)
         432	LOAD_FAST(arg=11, lineno=1515)
         434	BINARY_SUBSCR(arg=None, lineno=1515)
         438	STORE_FAST(arg=9, lineno=1515)
         440	LOAD_GLOBAL(arg=13, lineno=1516)
         450	LOAD_FAST(arg=8, lineno=1516)
         452	LOAD_FAST(arg=10, lineno=1516)
         454	LOAD_FAST(arg=9, lineno=1516)
         456	LOAD_CONST(arg=1, lineno=1516)
         458	LOAD_GLOBAL(arg=1, lineno=1516)
         468	LOAD_FAST(arg=9, lineno=1516)
         470	CALL(arg=1, lineno=1516)
         478	CALL(arg=5, lineno=1516)
         486	POP_TOP(arg=None, lineno=1516)
         488	LOAD_FAST(arg=10, lineno=1517)
         490	LOAD_GLOBAL(arg=1, lineno=1517)
         500	LOAD_FAST(arg=9, lineno=1517)
         502	CALL(arg=1, lineno=1517)
         510	BINARY_OP(arg=13, lineno=1517)
         514	STORE_FAST(arg=10, lineno=1517)
         516	JUMP_BACKWARD(arg=67, lineno=1517)
>        518	END_FOR(arg=None, lineno=1512)
         520	LOAD_FAST(arg=8, lineno=1519)
         522	RETURN_VALUE(arg=None, lineno=1519)
2025-07-23 17:15:48,725 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:48,725 - DEBUG - stack: []
2025-07-23 17:15:48,725 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:48,726 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1490)
2025-07-23 17:15:48,726 - DEBUG - stack []
2025-07-23 17:15:48,726 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1490)
2025-07-23 17:15:48,726 - DEBUG - stack []
2025-07-23 17:15:48,726 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1492)
2025-07-23 17:15:48,726 - DEBUG - stack []
2025-07-23 17:15:48,726 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=1492)
2025-07-23 17:15:48,727 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1492)
2025-07-23 17:15:48,727 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$parts14.2']
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=2, lineno=1492)
2025-07-23 17:15:48,727 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=1493)
2025-07-23 17:15:48,727 - DEBUG - stack []
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1493)
2025-07-23 17:15:48,727 - DEBUG - stack ['$parts_len26.4']
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=40, lineno=1493)
2025-07-23 17:15:48,727 - DEBUG - stack ['$parts_len26.4', '$const28.5.1']
2025-07-23 17:15:48,727 - DEBUG - dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=1, lineno=1493)
2025-07-23 17:15:48,727 - DEBUG - stack ['$30compare_op.6']
2025-07-23 17:15:48,729 - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:48,729 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=38 nstack_initial=0)])
2025-07-23 17:15:48,729 - DEBUG - stack: []
2025-07-23 17:15:48,729 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-23 17:15:48,729 - DEBUG - dispatch pc=36, inst=RETURN_CONST(arg=2, lineno=1494)
2025-07-23 17:15:48,729 - DEBUG - stack []
2025-07-23 17:15:48,729 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,729 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=0)])
2025-07-23 17:15:48,729 - DEBUG - stack: []
2025-07-23 17:15:48,730 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=0)
2025-07-23 17:15:48,730 - DEBUG - dispatch pc=38, inst=LOAD_GLOBAL(arg=1, lineno=1497)
2025-07-23 17:15:48,730 - DEBUG - stack []
2025-07-23 17:15:48,730 - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=1497)
2025-07-23 17:15:48,730 - DEBUG - stack ['$null$38.1', '$38load_global.0']
2025-07-23 17:15:48,730 - DEBUG - dispatch pc=50, inst=CALL(arg=1, lineno=1497)
2025-07-23 17:15:48,731 - DEBUG - stack ['$null$38.1', '$38load_global.0', '$sep48.2']
2025-07-23 17:15:48,732 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=3, lineno=1497)
2025-07-23 17:15:48,732 - DEBUG - stack ['$50call.3']
2025-07-23 17:15:48,733 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=2, lineno=1498)
2025-07-23 17:15:48,733 - DEBUG - stack []
2025-07-23 17:15:48,733 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=1498)
2025-07-23 17:15:48,733 - DEBUG - stack ['$parts_len60.4']
2025-07-23 17:15:48,733 - DEBUG - dispatch pc=64, inst=BINARY_OP(arg=10, lineno=1498)
2025-07-23 17:15:48,734 - DEBUG - stack ['$parts_len60.4', '$const62.5.3']
2025-07-23 17:15:48,734 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=1498)
2025-07-23 17:15:48,734 - DEBUG - stack ['$binop_sub64.6']
2025-07-23 17:15:48,734 - DEBUG - dispatch pc=70, inst=BINARY_OP(arg=5, lineno=1498)
2025-07-23 17:15:48,734 - DEBUG - stack ['$binop_sub64.6', '$sep_len68.7']
2025-07-23 17:15:48,734 - DEBUG - dispatch pc=74, inst=STORE_FAST(arg=4, lineno=1498)
2025-07-23 17:15:48,735 - DEBUG - stack ['$binop_mul70.8']
2025-07-23 17:15:48,735 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=1499)
2025-07-23 17:15:48,735 - DEBUG - stack []
2025-07-23 17:15:48,735 - DEBUG - dispatch pc=78, inst=LOAD_ATTR(arg=2, lineno=1499)
2025-07-23 17:15:48,735 - DEBUG - stack ['$sep76.9']
2025-07-23 17:15:48,736 - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=5, lineno=1499)
2025-07-23 17:15:48,736 - DEBUG - stack ['$78load_attr.10']
2025-07-23 17:15:48,736 - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=1500)
2025-07-23 17:15:48,736 - DEBUG - stack []
2025-07-23 17:15:48,736 - DEBUG - dispatch pc=102, inst=LOAD_ATTR(arg=4, lineno=1500)
2025-07-23 17:15:48,737 - DEBUG - stack ['$sep100.11']
2025-07-23 17:15:48,737 - DEBUG - dispatch pc=122, inst=STORE_FAST(arg=6, lineno=1500)
2025-07-23 17:15:48,737 - DEBUG - stack ['$102load_attr.12']
2025-07-23 17:15:48,737 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=1501)
2025-07-23 17:15:48,737 - DEBUG - stack []
2025-07-23 17:15:48,737 - DEBUG - dispatch pc=126, inst=GET_ITER(arg=None, lineno=1501)
2025-07-23 17:15:48,738 - DEBUG - stack ['$parts124.13']
2025-07-23 17:15:48,738 - DEBUG - end state. edges=[Edge(pc=128, stack=('$126get_iter.14',), blockstack=(), npush=0)]
2025-07-23 17:15:48,738 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=1)])
2025-07-23 17:15:48,738 - DEBUG - stack: ['$phi128.0']
2025-07-23 17:15:48,738 - DEBUG - state.pc_initial: State(pc_initial=128 nstack_initial=1)
2025-07-23 17:15:48,738 - DEBUG - dispatch pc=128, inst=FOR_ITER(arg=60, lineno=1501)
2025-07-23 17:15:48,738 - DEBUG - stack ['$phi128.0']
2025-07-23 17:15:48,739 - DEBUG - end state. edges=[Edge(pc=252, stack=('$phi128.0', '$128for_iter.2'), blockstack=(), npush=0), Edge(pc=132, stack=('$phi128.0', '$128for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:48,739 - DEBUG - pending: deque([State(pc_initial=252 nstack_initial=2), State(pc_initial=132 nstack_initial=2)])
2025-07-23 17:15:48,739 - DEBUG - stack: ['$phi252.0', '$phi252.1']
2025-07-23 17:15:48,739 - DEBUG - state.pc_initial: State(pc_initial=252 nstack_initial=2)
2025-07-23 17:15:48,739 - DEBUG - dispatch pc=252, inst=END_FOR(arg=None, lineno=1501)
2025-07-23 17:15:48,739 - DEBUG - stack ['$phi252.0', '$phi252.1']
2025-07-23 17:15:48,739 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=11, lineno=1506)
2025-07-23 17:15:48,739 - DEBUG - stack []
2025-07-23 17:15:48,739 - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=5, lineno=1506)
2025-07-23 17:15:48,739 - DEBUG - stack ['$null$254.3', '$254load_global.2']
2025-07-23 17:15:48,739 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=4, lineno=1506)
2025-07-23 17:15:48,739 - DEBUG - stack ['$null$254.3', '$254load_global.2', '$kind264.4']
2025-07-23 17:15:48,739 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=6, lineno=1506)
2025-07-23 17:15:48,739 - DEBUG - stack ['$null$254.3', '$254load_global.2', '$kind264.4', '$length266.5']
2025-07-23 17:15:48,740 - DEBUG - dispatch pc=270, inst=CALL(arg=3, lineno=1506)
2025-07-23 17:15:48,740 - DEBUG - stack ['$null$254.3', '$254load_global.2', '$kind264.4', '$length266.5', '$is_ascii268.6']
2025-07-23 17:15:48,740 - DEBUG - dispatch pc=278, inst=STORE_FAST(arg=8, lineno=1506)
2025-07-23 17:15:48,740 - DEBUG - stack ['$270call.7']
2025-07-23 17:15:48,741 - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=1, lineno=1509)
2025-07-23 17:15:48,741 - DEBUG - stack []
2025-07-23 17:15:48,741 - DEBUG - dispatch pc=282, inst=LOAD_CONST(arg=1, lineno=1509)
2025-07-23 17:15:48,741 - DEBUG - stack ['$parts280.8']
2025-07-23 17:15:48,741 - DEBUG - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=1509)
2025-07-23 17:15:48,741 - DEBUG - stack ['$parts280.8', '$const282.9.1']
2025-07-23 17:15:48,742 - DEBUG - dispatch pc=288, inst=STORE_FAST(arg=9, lineno=1509)
2025-07-23 17:15:48,742 - DEBUG - stack ['$284binary_subscr.10']
2025-07-23 17:15:48,742 - DEBUG - dispatch pc=290, inst=LOAD_GLOBAL(arg=13, lineno=1510)
2025-07-23 17:15:48,742 - DEBUG - stack []
2025-07-23 17:15:48,742 - DEBUG - dispatch pc=300, inst=LOAD_FAST(arg=8, lineno=1510)
2025-07-23 17:15:48,742 - DEBUG - stack ['$null$290.12', '$290load_global.11']
2025-07-23 17:15:48,742 - DEBUG - dispatch pc=302, inst=LOAD_CONST(arg=1, lineno=1510)
2025-07-23 17:15:48,742 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13']
2025-07-23 17:15:48,743 - DEBUG - dispatch pc=304, inst=LOAD_FAST(arg=9, lineno=1510)
2025-07-23 17:15:48,743 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1']
2025-07-23 17:15:48,743 - DEBUG - dispatch pc=306, inst=LOAD_CONST(arg=1, lineno=1510)
2025-07-23 17:15:48,743 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1', '$part304.15']
2025-07-23 17:15:48,743 - DEBUG - dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=1510)
2025-07-23 17:15:48,743 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1', '$part304.15', '$const306.16.1']
2025-07-23 17:15:48,743 - DEBUG - dispatch pc=318, inst=LOAD_FAST(arg=9, lineno=1510)
2025-07-23 17:15:48,743 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1', '$part304.15', '$const306.16.1', '$null$308.18', '$308load_global.17']
2025-07-23 17:15:48,743 - DEBUG - dispatch pc=320, inst=CALL(arg=1, lineno=1510)
2025-07-23 17:15:48,744 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1', '$part304.15', '$const306.16.1', '$null$308.18', '$308load_global.17', '$part318.19']
2025-07-23 17:15:48,744 - DEBUG - dispatch pc=328, inst=CALL(arg=5, lineno=1510)
2025-07-23 17:15:48,744 - DEBUG - stack ['$null$290.12', '$290load_global.11', '$result300.13', '$const302.14.1', '$part304.15', '$const306.16.1', '$320call.20']
2025-07-23 17:15:48,744 - DEBUG - dispatch pc=336, inst=POP_TOP(arg=None, lineno=1510)
2025-07-23 17:15:48,744 - DEBUG - stack ['$328call.21']
2025-07-23 17:15:48,744 - DEBUG - dispatch pc=338, inst=LOAD_GLOBAL(arg=1, lineno=1511)
2025-07-23 17:15:48,744 - DEBUG - stack []
2025-07-23 17:15:48,744 - DEBUG - dispatch pc=348, inst=LOAD_FAST(arg=9, lineno=1511)
2025-07-23 17:15:48,744 - DEBUG - stack ['$null$338.23', '$338load_global.22']
2025-07-23 17:15:48,745 - DEBUG - dispatch pc=350, inst=CALL(arg=1, lineno=1511)
2025-07-23 17:15:48,745 - DEBUG - stack ['$null$338.23', '$338load_global.22', '$part348.24']
2025-07-23 17:15:48,745 - DEBUG - dispatch pc=358, inst=STORE_FAST(arg=10, lineno=1511)
2025-07-23 17:15:48,745 - DEBUG - stack ['$350call.25']
2025-07-23 17:15:48,745 - DEBUG - dispatch pc=360, inst=LOAD_GLOBAL(arg=15, lineno=1512)
2025-07-23 17:15:48,745 - DEBUG - stack []
2025-07-23 17:15:48,745 - DEBUG - dispatch pc=370, inst=LOAD_CONST(arg=3, lineno=1512)
2025-07-23 17:15:48,745 - DEBUG - stack ['$null$360.27', '$360load_global.26']
2025-07-23 17:15:48,745 - DEBUG - dispatch pc=372, inst=LOAD_FAST(arg=2, lineno=1512)
2025-07-23 17:15:48,746 - DEBUG - stack ['$null$360.27', '$360load_global.26', '$const370.28.3']
2025-07-23 17:15:48,746 - DEBUG - dispatch pc=374, inst=CALL(arg=2, lineno=1512)
2025-07-23 17:15:48,746 - DEBUG - stack ['$null$360.27', '$360load_global.26', '$const370.28.3', '$parts_len372.29']
2025-07-23 17:15:48,746 - DEBUG - dispatch pc=382, inst=GET_ITER(arg=None, lineno=1512)
2025-07-23 17:15:48,746 - DEBUG - stack ['$374call.30']
2025-07-23 17:15:48,746 - DEBUG - end state. edges=[Edge(pc=384, stack=('$382get_iter.31',), blockstack=(), npush=0)]
2025-07-23 17:15:48,746 - DEBUG - pending: deque([State(pc_initial=132 nstack_initial=2), State(pc_initial=384 nstack_initial=1)])
2025-07-23 17:15:48,747 - DEBUG - stack: ['$phi132.0', '$phi132.1']
2025-07-23 17:15:48,747 - DEBUG - state.pc_initial: State(pc_initial=132 nstack_initial=2)
2025-07-23 17:15:48,747 - DEBUG - dispatch pc=132, inst=STORE_FAST(arg=7, lineno=1501)
2025-07-23 17:15:48,747 - DEBUG - stack ['$phi132.0', '$phi132.1']
2025-07-23 17:15:48,747 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=4, lineno=1502)
2025-07-23 17:15:48,747 - DEBUG - stack ['$phi132.0']
2025-07-23 17:15:48,747 - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=1, lineno=1502)
2025-07-23 17:15:48,747 - DEBUG - stack ['$phi132.0', '$length134.2']
2025-07-23 17:15:48,747 - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=7, lineno=1502)
2025-07-23 17:15:48,747 - DEBUG - stack ['$phi132.0', '$length134.2', '$null$136.4', '$136load_global.3']
2025-07-23 17:15:48,749 - DEBUG - dispatch pc=148, inst=CALL(arg=1, lineno=1502)
2025-07-23 17:15:48,749 - DEBUG - stack ['$phi132.0', '$length134.2', '$null$136.4', '$136load_global.3', '$p146.5']
2025-07-23 17:15:48,749 - DEBUG - dispatch pc=156, inst=BINARY_OP(arg=13, lineno=1502)
2025-07-23 17:15:48,749 - DEBUG - stack ['$phi132.0', '$length134.2', '$148call.6']
2025-07-23 17:15:48,749 - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=1502)
2025-07-23 17:15:48,749 - DEBUG - stack ['$phi132.0', '$binop_iadd156.7']
2025-07-23 17:15:48,750 - DEBUG - dispatch pc=162, inst=LOAD_GLOBAL(arg=7, lineno=1503)
2025-07-23 17:15:48,750 - DEBUG - stack ['$phi132.0']
2025-07-23 17:15:48,750 - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=5, lineno=1503)
2025-07-23 17:15:48,750 - DEBUG - stack ['$phi132.0', '$null$162.9', '$162load_global.8']
2025-07-23 17:15:48,750 - DEBUG - dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=1503)
2025-07-23 17:15:48,751 - DEBUG - stack ['$phi132.0', '$null$162.9', '$162load_global.8', '$kind172.10']
2025-07-23 17:15:48,751 - DEBUG - dispatch pc=176, inst=LOAD_ATTR(arg=2, lineno=1503)
2025-07-23 17:15:48,751 - DEBUG - stack ['$phi132.0', '$null$162.9', '$162load_global.8', '$kind172.10', '$p174.11']
2025-07-23 17:15:48,752 - DEBUG - dispatch pc=196, inst=CALL(arg=2, lineno=1503)
2025-07-23 17:15:48,752 - DEBUG - stack ['$phi132.0', '$null$162.9', '$162load_global.8', '$kind172.10', '$176load_attr.12']
2025-07-23 17:15:48,752 - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=5, lineno=1503)
2025-07-23 17:15:48,752 - DEBUG - stack ['$phi132.0', '$196call.13']
2025-07-23 17:15:48,752 - DEBUG - dispatch pc=206, inst=LOAD_GLOBAL(arg=9, lineno=1504)
2025-07-23 17:15:48,753 - DEBUG - stack ['$phi132.0']
2025-07-23 17:15:48,753 - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=6, lineno=1504)
2025-07-23 17:15:48,753 - DEBUG - stack ['$phi132.0', '$null$206.15', '$206load_global.14']
2025-07-23 17:15:48,753 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=7, lineno=1504)
2025-07-23 17:15:48,754 - DEBUG - stack ['$phi132.0', '$null$206.15', '$206load_global.14', '$is_ascii216.16']
2025-07-23 17:15:48,754 - DEBUG - dispatch pc=220, inst=LOAD_ATTR(arg=4, lineno=1504)
2025-07-23 17:15:48,754 - DEBUG - stack ['$phi132.0', '$null$206.15', '$206load_global.14', '$is_ascii216.16', '$p218.17']
2025-07-23 17:15:48,754 - DEBUG - dispatch pc=240, inst=CALL(arg=2, lineno=1504)
2025-07-23 17:15:48,754 - DEBUG - stack ['$phi132.0', '$null$206.15', '$206load_global.14', '$is_ascii216.16', '$220load_attr.18']
2025-07-23 17:15:48,754 - DEBUG - dispatch pc=248, inst=STORE_FAST(arg=6, lineno=1504)
2025-07-23 17:15:48,754 - DEBUG - stack ['$phi132.0', '$240call.19']
2025-07-23 17:15:48,755 - DEBUG - dispatch pc=250, inst=JUMP_BACKWARD(arg=62, lineno=1504)
2025-07-23 17:15:48,755 - DEBUG - stack ['$phi132.0']
2025-07-23 17:15:48,755 - DEBUG - end state. edges=[Edge(pc=128, stack=('$phi132.0',), blockstack=(), npush=0)]
2025-07-23 17:15:48,755 - DEBUG - pending: deque([State(pc_initial=384 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
2025-07-23 17:15:48,755 - DEBUG - stack: ['$phi384.0']
2025-07-23 17:15:48,755 - DEBUG - state.pc_initial: State(pc_initial=384 nstack_initial=1)
2025-07-23 17:15:48,756 - DEBUG - dispatch pc=384, inst=FOR_ITER(arg=65, lineno=1512)
2025-07-23 17:15:48,756 - DEBUG - stack ['$phi384.0']
2025-07-23 17:15:48,756 - DEBUG - end state. edges=[Edge(pc=518, stack=('$phi384.0', '$384for_iter.2'), blockstack=(), npush=0), Edge(pc=388, stack=('$phi384.0', '$384for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:48,756 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=518 nstack_initial=2), State(pc_initial=388 nstack_initial=2)])
2025-07-23 17:15:48,756 - DEBUG - pending: deque([State(pc_initial=518 nstack_initial=2), State(pc_initial=388 nstack_initial=2)])
2025-07-23 17:15:48,756 - DEBUG - stack: ['$phi518.0', '$phi518.1']
2025-07-23 17:15:48,757 - DEBUG - state.pc_initial: State(pc_initial=518 nstack_initial=2)
2025-07-23 17:15:48,757 - DEBUG - dispatch pc=518, inst=END_FOR(arg=None, lineno=1512)
2025-07-23 17:15:48,757 - DEBUG - stack ['$phi518.0', '$phi518.1']
2025-07-23 17:15:48,757 - DEBUG - dispatch pc=520, inst=LOAD_FAST(arg=8, lineno=1519)
2025-07-23 17:15:48,757 - DEBUG - stack []
2025-07-23 17:15:48,757 - DEBUG - dispatch pc=522, inst=RETURN_VALUE(arg=None, lineno=1519)
2025-07-23 17:15:48,757 - DEBUG - stack ['$result520.2']
2025-07-23 17:15:48,757 - DEBUG - end state. edges=[]
2025-07-23 17:15:48,758 - DEBUG - pending: deque([State(pc_initial=388 nstack_initial=2)])
2025-07-23 17:15:48,758 - DEBUG - stack: ['$phi388.0', '$phi388.1']
2025-07-23 17:15:48,758 - DEBUG - state.pc_initial: State(pc_initial=388 nstack_initial=2)
2025-07-23 17:15:48,758 - DEBUG - dispatch pc=388, inst=STORE_FAST(arg=11, lineno=1512)
2025-07-23 17:15:48,758 - DEBUG - stack ['$phi388.0', '$phi388.1']
2025-07-23 17:15:48,758 - DEBUG - dispatch pc=390, inst=LOAD_GLOBAL(arg=13, lineno=1513)
2025-07-23 17:15:48,758 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,758 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1513)
2025-07-23 17:15:48,759 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2']
2025-07-23 17:15:48,759 - DEBUG - dispatch pc=402, inst=LOAD_FAST(arg=10, lineno=1513)
2025-07-23 17:15:48,759 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2', '$result400.4']
2025-07-23 17:15:48,759 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=0, lineno=1513)
2025-07-23 17:15:48,759 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2', '$result400.4', '$dst_offset402.5']
2025-07-23 17:15:48,759 - DEBUG - dispatch pc=406, inst=LOAD_CONST(arg=1, lineno=1513)
2025-07-23 17:15:48,759 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2', '$result400.4', '$dst_offset402.5', '$sep404.6']
2025-07-23 17:15:48,759 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=3, lineno=1513)
2025-07-23 17:15:48,760 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2', '$result400.4', '$dst_offset402.5', '$sep404.6', '$const406.7.1']
2025-07-23 17:15:48,760 - DEBUG - dispatch pc=410, inst=CALL(arg=5, lineno=1513)
2025-07-23 17:15:48,760 - DEBUG - stack ['$phi388.0', '$null$390.3', '$390load_global.2', '$result400.4', '$dst_offset402.5', '$sep404.6', '$const406.7.1', '$sep_len408.8']
2025-07-23 17:15:48,760 - DEBUG - dispatch pc=418, inst=POP_TOP(arg=None, lineno=1513)
2025-07-23 17:15:48,760 - DEBUG - stack ['$phi388.0', '$410call.9']
2025-07-23 17:15:48,760 - DEBUG - dispatch pc=420, inst=LOAD_FAST(arg=10, lineno=1514)
2025-07-23 17:15:48,760 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,761 - DEBUG - dispatch pc=422, inst=LOAD_FAST(arg=3, lineno=1514)
2025-07-23 17:15:48,761 - DEBUG - stack ['$phi388.0', '$dst_offset420.10']
2025-07-23 17:15:48,761 - DEBUG - dispatch pc=424, inst=BINARY_OP(arg=13, lineno=1514)
2025-07-23 17:15:48,761 - DEBUG - stack ['$phi388.0', '$dst_offset420.10', '$sep_len422.11']
2025-07-23 17:15:48,762 - DEBUG - dispatch pc=428, inst=STORE_FAST(arg=10, lineno=1514)
2025-07-23 17:15:48,762 - DEBUG - stack ['$phi388.0', '$binop_iadd424.12']
2025-07-23 17:15:48,762 - DEBUG - dispatch pc=430, inst=LOAD_FAST(arg=1, lineno=1515)
2025-07-23 17:15:48,762 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,762 - DEBUG - dispatch pc=432, inst=LOAD_FAST(arg=11, lineno=1515)
2025-07-23 17:15:48,762 - DEBUG - stack ['$phi388.0', '$parts430.13']
2025-07-23 17:15:48,763 - DEBUG - dispatch pc=434, inst=BINARY_SUBSCR(arg=None, lineno=1515)
2025-07-23 17:15:48,763 - DEBUG - stack ['$phi388.0', '$parts430.13', '$idx432.14']
2025-07-23 17:15:48,763 - DEBUG - dispatch pc=438, inst=STORE_FAST(arg=9, lineno=1515)
2025-07-23 17:15:48,763 - DEBUG - stack ['$phi388.0', '$434binary_subscr.15']
2025-07-23 17:15:48,763 - DEBUG - dispatch pc=440, inst=LOAD_GLOBAL(arg=13, lineno=1516)
2025-07-23 17:15:48,764 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,764 - DEBUG - dispatch pc=450, inst=LOAD_FAST(arg=8, lineno=1516)
2025-07-23 17:15:48,764 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16']
2025-07-23 17:15:48,764 - DEBUG - dispatch pc=452, inst=LOAD_FAST(arg=10, lineno=1516)
2025-07-23 17:15:48,764 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18']
2025-07-23 17:15:48,764 - DEBUG - dispatch pc=454, inst=LOAD_FAST(arg=9, lineno=1516)
2025-07-23 17:15:48,765 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19']
2025-07-23 17:15:48,765 - DEBUG - dispatch pc=456, inst=LOAD_CONST(arg=1, lineno=1516)
2025-07-23 17:15:48,765 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19', '$part454.20']
2025-07-23 17:15:48,765 - DEBUG - dispatch pc=458, inst=LOAD_GLOBAL(arg=1, lineno=1516)
2025-07-23 17:15:48,765 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19', '$part454.20', '$const456.21.1']
2025-07-23 17:15:48,765 - DEBUG - dispatch pc=468, inst=LOAD_FAST(arg=9, lineno=1516)
2025-07-23 17:15:48,766 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19', '$part454.20', '$const456.21.1', '$null$458.23', '$458load_global.22']
2025-07-23 17:15:48,766 - DEBUG - dispatch pc=470, inst=CALL(arg=1, lineno=1516)
2025-07-23 17:15:48,766 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19', '$part454.20', '$const456.21.1', '$null$458.23', '$458load_global.22', '$part468.24']
2025-07-23 17:15:48,766 - DEBUG - dispatch pc=478, inst=CALL(arg=5, lineno=1516)
2025-07-23 17:15:48,766 - DEBUG - stack ['$phi388.0', '$null$440.17', '$440load_global.16', '$result450.18', '$dst_offset452.19', '$part454.20', '$const456.21.1', '$470call.25']
2025-07-23 17:15:48,766 - DEBUG - dispatch pc=486, inst=POP_TOP(arg=None, lineno=1516)
2025-07-23 17:15:48,766 - DEBUG - stack ['$phi388.0', '$478call.26']
2025-07-23 17:15:48,767 - DEBUG - dispatch pc=488, inst=LOAD_FAST(arg=10, lineno=1517)
2025-07-23 17:15:48,767 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,767 - DEBUG - dispatch pc=490, inst=LOAD_GLOBAL(arg=1, lineno=1517)
2025-07-23 17:15:48,767 - DEBUG - stack ['$phi388.0', '$dst_offset488.27']
2025-07-23 17:15:48,767 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=9, lineno=1517)
2025-07-23 17:15:48,767 - DEBUG - stack ['$phi388.0', '$dst_offset488.27', '$null$490.29', '$490load_global.28']
2025-07-23 17:15:48,768 - DEBUG - dispatch pc=502, inst=CALL(arg=1, lineno=1517)
2025-07-23 17:15:48,768 - DEBUG - stack ['$phi388.0', '$dst_offset488.27', '$null$490.29', '$490load_global.28', '$part500.30']
2025-07-23 17:15:48,768 - DEBUG - dispatch pc=510, inst=BINARY_OP(arg=13, lineno=1517)
2025-07-23 17:15:48,768 - DEBUG - stack ['$phi388.0', '$dst_offset488.27', '$502call.31']
2025-07-23 17:15:48,768 - DEBUG - dispatch pc=514, inst=STORE_FAST(arg=10, lineno=1517)
2025-07-23 17:15:48,768 - DEBUG - stack ['$phi388.0', '$binop_iadd510.32']
2025-07-23 17:15:48,769 - DEBUG - dispatch pc=516, inst=JUMP_BACKWARD(arg=67, lineno=1517)
2025-07-23 17:15:48,769 - DEBUG - stack ['$phi388.0']
2025-07-23 17:15:48,769 - DEBUG - end state. edges=[Edge(pc=384, stack=('$phi388.0',), blockstack=(), npush=0)]
2025-07-23 17:15:48,769 - DEBUG - pending: deque([State(pc_initial=384 nstack_initial=1)])
2025-07-23 17:15:48,769 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:48,769 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=1): {'$phi128.0'},
             State(pc_initial=132 nstack_initial=2): {'$phi132.1'},
             State(pc_initial=252 nstack_initial=2): set(),
             State(pc_initial=384 nstack_initial=1): {'$phi384.0'},
             State(pc_initial=388 nstack_initial=2): {'$phi388.1'},
             State(pc_initial=518 nstack_initial=2): set()})
2025-07-23 17:15:48,769 - DEBUG - defmap: {'$phi128.0': State(pc_initial=38 nstack_initial=0),
 '$phi132.1': State(pc_initial=128 nstack_initial=1),
 '$phi252.1': State(pc_initial=128 nstack_initial=1),
 '$phi384.0': State(pc_initial=252 nstack_initial=2),
 '$phi388.1': State(pc_initial=384 nstack_initial=1),
 '$phi518.1': State(pc_initial=384 nstack_initial=1)}
2025-07-23 17:15:48,769 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi128.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0)),
                           ('$phi132.0',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi132.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi132.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi252.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi252.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi384.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=2))},
             '$phi388.0': {('$phi384.0',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi388.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi518.0': {('$phi384.0',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi518.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))}})
2025-07-23 17:15:48,771 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi128.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0)),
                           ('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi132.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi132.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi252.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi252.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi384.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2)),
                           ('$phi384.0',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi388.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi388.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi518.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi518.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))}})
2025-07-23 17:15:48,772 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi128.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi132.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi132.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi252.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi252.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi384.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi388.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi388.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi518.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi518.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))}})
2025-07-23 17:15:48,774 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi128.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi132.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi132.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi252.0': {('$126get_iter.14',
                            State(pc_initial=38 nstack_initial=0))},
             '$phi252.1': {('$128for_iter.2',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi384.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi388.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi388.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))},
             '$phi518.0': {('$382get_iter.31',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi518.1': {('$384for_iter.2',
                            State(pc_initial=384 nstack_initial=1))}})
2025-07-23 17:15:48,774 - DEBUG - keep phismap: {'$phi128.0': {('$126get_iter.14', State(pc_initial=38 nstack_initial=0))},
 '$phi132.1': {('$128for_iter.2', State(pc_initial=128 nstack_initial=1))},
 '$phi384.0': {('$382get_iter.31', State(pc_initial=252 nstack_initial=2))},
 '$phi388.1': {('$384for_iter.2', State(pc_initial=384 nstack_initial=1))}}
2025-07-23 17:15:48,775 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=38 nstack_initial=0): {'$phi128.0': '$126get_iter.14'},
             State(pc_initial=128 nstack_initial=1): {'$phi132.1': '$128for_iter.2'},
             State(pc_initial=252 nstack_initial=2): {'$phi384.0': '$382get_iter.31'},
             State(pc_initial=384 nstack_initial=1): {'$phi388.1': '$384for_iter.2'}})
2025-07-23 17:15:48,775 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:48,775 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$parts14.2'}), (16, {'func': '$4load_global.0', 'args': ['$parts14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'res': '$parts_len26.4'}), (28, {'res': '$const28.5.1'}), (30, {'lhs': '$parts_len26.4', 'rhs': '$const28.5.1', 'res': '$30compare_op.6'}), (34, {'pred': '$30compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 38: ()})
2025-07-23 17:15:48,776 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'retval': '$const36.0', 'castval': '$36return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,776 - DEBUG - block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {'idx': 0, 'res': '$38load_global.0'}), (48, {'res': '$sep48.2'}), (50, {'func': '$38load_global.0', 'args': ['$sep48.2'], 'kw_names': None, 'res': '$50call.3'}), (58, {'value': '$50call.3'}), (60, {'res': '$parts_len60.4'}), (62, {'res': '$const62.5.3'}), (64, {'op': '-', 'lhs': '$parts_len60.4', 'rhs': '$const62.5.3', 'res': '$binop_sub64.6'}), (68, {'res': '$sep_len68.7'}), (70, {'op': '*', 'lhs': '$binop_sub64.6', 'rhs': '$sep_len68.7', 'res': '$binop_mul70.8'}), (74, {'value': '$binop_mul70.8'}), (76, {'res': '$sep76.9'}), (78, {'item': '$sep76.9', 'res': '$78load_attr.10'}), (98, {'value': '$78load_attr.10'}), (100, {'res': '$sep100.11'}), (102, {'item': '$sep100.11', 'res': '$102load_attr.12'}), (122, {'value': '$102load_attr.12'}), (124, {'res': '$parts124.13'}), (126, {'value': '$parts124.13', 'res': '$126get_iter.14'})), outgoing_phis={'$phi128.0': '$126get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$126get_iter.14',)})
2025-07-23 17:15:48,776 - DEBUG - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'iterator': '$phi128.0', 'pair': '$128for_iter.1', 'indval': '$128for_iter.2', 'pred': '$128for_iter.3'}),), outgoing_phis={'$phi132.1': '$128for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={252: ('$phi128.0', '$128for_iter.2'), 132: ('$phi128.0', '$128for_iter.2')})
2025-07-23 17:15:48,776 - DEBUG - block_infos State(pc_initial=132 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'value': '$phi132.1'}), (134, {'res': '$length134.2'}), (136, {'idx': 0, 'res': '$136load_global.3'}), (146, {'res': '$p146.5'}), (148, {'func': '$136load_global.3', 'args': ['$p146.5'], 'kw_names': None, 'res': '$148call.6'}), (156, {'op': '+=', 'lhs': '$length134.2', 'rhs': '$148call.6', 'res': '$binop_iadd156.7'}), (160, {'value': '$binop_iadd156.7'}), (162, {'idx': 3, 'res': '$162load_global.8'}), (172, {'res': '$kind172.10'}), (174, {'res': '$p174.11'}), (176, {'item': '$p174.11', 'res': '$176load_attr.12'}), (196, {'func': '$162load_global.8', 'args': ['$kind172.10', '$176load_attr.12'], 'kw_names': None, 'res': '$196call.13'}), (204, {'value': '$196call.13'}), (206, {'idx': 4, 'res': '$206load_global.14'}), (216, {'res': '$is_ascii216.16'}), (218, {'res': '$p218.17'}), (220, {'item': '$p218.17', 'res': '$220load_attr.18'}), (240, {'func': '$206load_global.14', 'args': ['$is_ascii216.16', '$220load_attr.18'], 'kw_names': None, 'res': '$240call.19'}), (248, {'value': '$240call.19'}), (250, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi132.0',)})
2025-07-23 17:15:48,776 - DEBUG - block_infos State(pc_initial=252 nstack_initial=2):
AdaptBlockInfo(insts=((254, {'idx': 5, 'res': '$254load_global.2'}), (264, {'res': '$kind264.4'}), (266, {'res': '$length266.5'}), (268, {'res': '$is_ascii268.6'}), (270, {'func': '$254load_global.2', 'args': ['$kind264.4', '$length266.5', '$is_ascii268.6'], 'kw_names': None, 'res': '$270call.7'}), (278, {'value': '$270call.7'}), (280, {'res': '$parts280.8'}), (282, {'res': '$const282.9.1'}), (284, {'index': '$const282.9.1', 'target': '$parts280.8', 'res': '$284binary_subscr.10'}), (288, {'value': '$284binary_subscr.10'}), (290, {'idx': 6, 'res': '$290load_global.11'}), (300, {'res': '$result300.13'}), (302, {'res': '$const302.14.1'}), (304, {'res': '$part304.15'}), (306, {'res': '$const306.16.1'}), (308, {'idx': 0, 'res': '$308load_global.17'}), (318, {'res': '$part318.19'}), (320, {'func': '$308load_global.17', 'args': ['$part318.19'], 'kw_names': None, 'res': '$320call.20'}), (328, {'func': '$290load_global.11', 'args': ['$result300.13', '$const302.14.1', '$part304.15', '$const306.16.1', '$320call.20'], 'kw_names': None, 'res': '$328call.21'}), (338, {'idx': 0, 'res': '$338load_global.22'}), (348, {'res': '$part348.24'}), (350, {'func': '$338load_global.22', 'args': ['$part348.24'], 'kw_names': None, 'res': '$350call.25'}), (358, {'value': '$350call.25'}), (360, {'idx': 7, 'res': '$360load_global.26'}), (370, {'res': '$const370.28.3'}), (372, {'res': '$parts_len372.29'}), (374, {'func': '$360load_global.26', 'args': ['$const370.28.3', '$parts_len372.29'], 'kw_names': None, 'res': '$374call.30'}), (382, {'value': '$374call.30', 'res': '$382get_iter.31'})), outgoing_phis={'$phi384.0': '$382get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={384: ('$382get_iter.31',)})
2025-07-23 17:15:48,777 - DEBUG - block_infos State(pc_initial=384 nstack_initial=1):
AdaptBlockInfo(insts=((384, {'iterator': '$phi384.0', 'pair': '$384for_iter.1', 'indval': '$384for_iter.2', 'pred': '$384for_iter.3'}),), outgoing_phis={'$phi388.1': '$384for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={518: ('$phi384.0', '$384for_iter.2'), 388: ('$phi384.0', '$384for_iter.2')})
2025-07-23 17:15:48,777 - DEBUG - block_infos State(pc_initial=388 nstack_initial=2):
AdaptBlockInfo(insts=((388, {'value': '$phi388.1'}), (390, {'idx': 6, 'res': '$390load_global.2'}), (400, {'res': '$result400.4'}), (402, {'res': '$dst_offset402.5'}), (404, {'res': '$sep404.6'}), (406, {'res': '$const406.7.1'}), (408, {'res': '$sep_len408.8'}), (410, {'func': '$390load_global.2', 'args': ['$result400.4', '$dst_offset402.5', '$sep404.6', '$const406.7.1', '$sep_len408.8'], 'kw_names': None, 'res': '$410call.9'}), (420, {'res': '$dst_offset420.10'}), (422, {'res': '$sep_len422.11'}), (424, {'op': '+=', 'lhs': '$dst_offset420.10', 'rhs': '$sep_len422.11', 'res': '$binop_iadd424.12'}), (428, {'value': '$binop_iadd424.12'}), (430, {'res': '$parts430.13'}), (432, {'res': '$idx432.14'}), (434, {'index': '$idx432.14', 'target': '$parts430.13', 'res': '$434binary_subscr.15'}), (438, {'value': '$434binary_subscr.15'}), (440, {'idx': 6, 'res': '$440load_global.16'}), (450, {'res': '$result450.18'}), (452, {'res': '$dst_offset452.19'}), (454, {'res': '$part454.20'}), (456, {'res': '$const456.21.1'}), (458, {'idx': 0, 'res': '$458load_global.22'}), (468, {'res': '$part468.24'}), (470, {'func': '$458load_global.22', 'args': ['$part468.24'], 'kw_names': None, 'res': '$470call.25'}), (478, {'func': '$440load_global.16', 'args': ['$result450.18', '$dst_offset452.19', '$part454.20', '$const456.21.1', '$470call.25'], 'kw_names': None, 'res': '$478call.26'}), (488, {'res': '$dst_offset488.27'}), (490, {'idx': 0, 'res': '$490load_global.28'}), (500, {'res': '$part500.30'}), (502, {'func': '$490load_global.28', 'args': ['$part500.30'], 'kw_names': None, 'res': '$502call.31'}), (510, {'op': '+=', 'lhs': '$dst_offset488.27', 'rhs': '$502call.31', 'res': '$binop_iadd510.32'}), (514, {'value': '$binop_iadd510.32'}), (516, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={384: ('$phi388.0',)})
2025-07-23 17:15:48,777 - DEBUG - block_infos State(pc_initial=518 nstack_initial=2):
AdaptBlockInfo(insts=((520, {'res': '$result520.2'}), (522, {'retval': '$result520.2', 'castval': '$522return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:48,779 - DEBUG - label 0:
    sep = arg(0, name=sep)                   ['sep']
    parts = arg(1, name=parts)               ['parts']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'parts', 'parts_len']
    $const28.5.1 = const(int, 0)             ['$const28.5.1']
    $30compare_op.6 = parts_len == $const28.5.1 ['$30compare_op.6', '$const28.5.1', 'parts_len']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$34pred', 'bool34']
    branch $34pred, 36, 38                   ['$34pred']
label 36:
    $const36.0 = const(str, )                ['$const36.0']
    $36return_const.1 = cast(value=$const36.0) ['$36return_const.1', '$const36.0']
    return $36return_const.1                 ['$36return_const.1']
label 38:
    $38load_global.0 = global(len: <built-in function len>) ['$38load_global.0']
    sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_global.0', 'sep', 'sep_len']
    $const62.5.3 = const(int, 1)             ['$const62.5.3']
    $binop_sub64.6 = parts_len - $const62.5.3 ['$binop_sub64.6', '$const62.5.3', 'parts_len']
    length = $binop_sub64.6 * sep_len        ['$binop_sub64.6', 'length', 'sep_len']
    kind = getattr(value=sep, attr=_kind)    ['kind', 'sep']
    is_ascii = getattr(value=sep, attr=_is_ascii) ['is_ascii', 'sep']
    $126get_iter.14 = getiter(value=parts)   ['$126get_iter.14', 'parts']
    $phi128.0 = $126get_iter.14              ['$126get_iter.14', '$phi128.0']
    jump 128                                 []
label 128:
    $128for_iter.1 = iternext(value=$phi128.0) ['$128for_iter.1', '$phi128.0']
    $128for_iter.2 = pair_first(value=$128for_iter.1) ['$128for_iter.1', '$128for_iter.2']
    $128for_iter.3 = pair_second(value=$128for_iter.1) ['$128for_iter.1', '$128for_iter.3']
    $phi132.1 = $128for_iter.2               ['$128for_iter.2', '$phi132.1']
    branch $128for_iter.3, 132, 252          ['$128for_iter.3']
label 132:
    p = $phi132.1                            ['$phi132.1', 'p']
    $136load_global.3 = global(len: <built-in function len>) ['$136load_global.3']
    $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_global.3', '$148call.6', 'p']
    $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined) ['$148call.6', '$binop_iadd156.7', 'length']
    length = $binop_iadd156.7                ['$binop_iadd156.7', 'length']
    $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>) ['$162load_global.8']
    $176load_attr.12 = getattr(value=p, attr=_kind) ['$176load_attr.12', 'p']
    kind = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None) ['$162load_global.8', '$176load_attr.12', 'kind', 'kind']
    $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>) ['$206load_global.14']
    $220load_attr.18 = getattr(value=p, attr=_is_ascii) ['$220load_attr.18', 'p']
    is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_global.14', '$220load_attr.18', 'is_ascii', 'is_ascii']
    jump 128                                 []
label 252:
    $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>) ['$254load_global.2']
    result = call $254load_global.2(kind, length, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.2', 'is_ascii', 'kind', 'length', 'result']
    $const282.9.1 = const(int, 0)            ['$const282.9.1']
    part = getitem(value=parts, index=$const282.9.1, fn=<built-in function getitem>) ['$const282.9.1', 'part', 'parts']
    $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>) ['$290load_global.11']
    $const302.14.1 = const(int, 0)           ['$const302.14.1']
    $const306.16.1 = const(int, 0)           ['$const306.16.1']
    $308load_global.17 = global(len: <built-in function len>) ['$308load_global.17']
    $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$308load_global.17', '$320call.20', 'part']
    $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None) ['$290load_global.11', '$320call.20', '$328call.21', '$const302.14.1', '$const306.16.1', 'part', 'result']
    $338load_global.22 = global(len: <built-in function len>) ['$338load_global.22']
    dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$338load_global.22', 'dst_offset', 'part']
    $360load_global.26 = global(range: <class 'range'>) ['$360load_global.26']
    $const370.28.3 = const(int, 1)           ['$const370.28.3']
    $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None) ['$360load_global.26', '$374call.30', '$const370.28.3', 'parts_len']
    $382get_iter.31 = getiter(value=$374call.30) ['$374call.30', '$382get_iter.31']
    $phi384.0 = $382get_iter.31              ['$382get_iter.31', '$phi384.0']
    jump 384                                 []
label 384:
    $384for_iter.1 = iternext(value=$phi384.0) ['$384for_iter.1', '$phi384.0']
    $384for_iter.2 = pair_first(value=$384for_iter.1) ['$384for_iter.1', '$384for_iter.2']
    $384for_iter.3 = pair_second(value=$384for_iter.1) ['$384for_iter.1', '$384for_iter.3']
    $phi388.1 = $384for_iter.2               ['$384for_iter.2', '$phi388.1']
    branch $384for_iter.3, 388, 518          ['$384for_iter.3']
label 388:
    idx = $phi388.1                          ['$phi388.1', 'idx']
    $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>) ['$390load_global.2']
    $const406.7.1 = const(int, 0)            ['$const406.7.1']
    $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None) ['$390load_global.2', '$410call.9', '$const406.7.1', 'dst_offset', 'result', 'sep', 'sep_len']
    $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd424.12', 'dst_offset', 'sep_len']
    dst_offset = $binop_iadd424.12           ['$binop_iadd424.12', 'dst_offset']
    part = getitem(value=parts, index=idx, fn=<built-in function getitem>) ['idx', 'part', 'parts']
    $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>) ['$440load_global.16']
    $const456.21.1 = const(int, 0)           ['$const456.21.1']
    $458load_global.22 = global(len: <built-in function len>) ['$458load_global.22']
    $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$458load_global.22', '$470call.25', 'part']
    $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None) ['$440load_global.16', '$470call.25', '$478call.26', '$const456.21.1', 'dst_offset', 'part', 'result']
    $490load_global.28 = global(len: <built-in function len>) ['$490load_global.28']
    $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None) ['$490load_global.28', '$502call.31', 'part']
    $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined) ['$502call.31', '$binop_iadd510.32', 'dst_offset']
    dst_offset = $binop_iadd510.32           ['$binop_iadd510.32', 'dst_offset']
    jump 384                                 []
label 518:
    $522return_value.3 = cast(value=result)  ['$522return_value.3', 'result']
    return $522return_value.3                ['$522return_value.3']

2025-07-23 17:15:48,793 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:48,793 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,793 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,793 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,793 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,793 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,793 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,793 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,794 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,794 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,794 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,794 - DEBUG - ==== SSA block analysis pass on 36
2025-07-23 17:15:48,794 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,794 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,794 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,795 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,795 - DEBUG - ==== SSA block analysis pass on 38
2025-07-23 17:15:48,795 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,795 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,795 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,795 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,796 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,796 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,796 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,796 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,796 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,796 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,797 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,797 - DEBUG - ==== SSA block analysis pass on 128
2025-07-23 17:15:48,797 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,797 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,797 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,797 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,797 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,798 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,798 - DEBUG - ==== SSA block analysis pass on 132
2025-07-23 17:15:48,798 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,798 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,798 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,798 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,798 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,798 - DEBUG - on stmt: length = $binop_iadd156.7
2025-07-23 17:15:48,798 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,798 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,798 - DEBUG - on stmt: kind = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,799 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,799 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,799 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,799 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,799 - DEBUG - ==== SSA block analysis pass on 252
2025-07-23 17:15:48,799 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,799 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,799 - DEBUG - on stmt: result = call $254load_global.2(kind, length, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,799 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,800 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,800 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,801 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,801 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,801 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,801 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,801 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,802 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,802 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,802 - DEBUG - ==== SSA block analysis pass on 384
2025-07-23 17:15:48,802 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,802 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,802 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,803 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,803 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,804 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,804 - DEBUG - ==== SSA block analysis pass on 388
2025-07-23 17:15:48,804 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,804 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,804 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,805 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,805 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,805 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,805 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,805 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,805 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,806 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,807 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,807 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,807 - DEBUG - ==== SSA block analysis pass on 518
2025-07-23 17:15:48,807 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E66F3290>
2025-07-23 17:15:48,807 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,807 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,807 - DEBUG - defs defaultdict(<class 'list'>,
            {'$126get_iter.14': [(<numba.core.ir.Assign object at 0x000001F6E66A8F20>,
                                  38)],
             '$128for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E66A99D0>,
                                 128)],
             '$128for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E66AA330>,
                                 128)],
             '$128for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E66AA630>,
                                 128)],
             '$136load_global.3': [(<numba.core.ir.Assign object at 0x000001F6E66A8FB0>,
                                    132)],
             '$148call.6': [(<numba.core.ir.Assign object at 0x000001F6E66AA5A0>,
                             132)],
             '$162load_global.8': [(<numba.core.ir.Assign object at 0x000001F6E66AA3C0>,
                                    132)],
             '$176load_attr.12': [(<numba.core.ir.Assign object at 0x000001F6DA67CD10>,
                                   132)],
             '$206load_global.14': [(<numba.core.ir.Assign object at 0x000001F6DA688380>,
                                     132)],
             '$220load_attr.18': [(<numba.core.ir.Assign object at 0x000001F6DA68B3B0>,
                                   132)],
             '$254load_global.2': [(<numba.core.ir.Assign object at 0x000001F6DA68AF60>,
                                    252)],
             '$290load_global.11': [(<numba.core.ir.Assign object at 0x000001F6DA6894C0>,
                                     252)],
             '$308load_global.17': [(<numba.core.ir.Assign object at 0x000001F6E66F1790>,
                                     252)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x000001F6DA6C8380>,
                                  0)],
             '$320call.20': [(<numba.core.ir.Assign object at 0x000001F6E66F27E0>,
                              252)],
             '$328call.21': [(<numba.core.ir.Assign object at 0x000001F6E66F07D0>,
                              252)],
             '$338load_global.22': [(<numba.core.ir.Assign object at 0x000001F6E66F16D0>,
                                     252)],
             '$34pred': [(<numba.core.ir.Assign object at 0x000001F6E6757680>,
                          0)],
             '$360load_global.26': [(<numba.core.ir.Assign object at 0x000001F6E66F0140>,
                                     252)],
             '$36return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E6757950>,
                                    36)],
             '$374call.30': [(<numba.core.ir.Assign object at 0x000001F6E66F04D0>,
                              252)],
             '$382get_iter.31': [(<numba.core.ir.Assign object at 0x000001F6E66F0BF0>,
                                  252)],
             '$384for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E66AA1E0>,
                                 384)],
             '$384for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E66F0290>,
                                 384)],
             '$384for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E66F38C0>,
                                 384)],
             '$38load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67559D0>,
                                   38)],
             '$390load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66F1280>,
                                    388)],
             '$410call.9': [(<numba.core.ir.Assign object at 0x000001F6E66F1580>,
                             388)],
             '$440load_global.16': [(<numba.core.ir.Assign object at 0x000001F6E66F2060>,
                                     388)],
             '$458load_global.22': [(<numba.core.ir.Assign object at 0x000001F6E66F2600>,
                                     388)],
             '$470call.25': [(<numba.core.ir.Assign object at 0x000001F6E66F2A20>,
                              388)],
             '$478call.26': [(<numba.core.ir.Assign object at 0x000001F6E66F2CC0>,
                              388)],
             '$490load_global.28': [(<numba.core.ir.Assign object at 0x000001F6E66F3CB0>,
                                     388)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA6C8AA0>,
                                  0)],
             '$502call.31': [(<numba.core.ir.Assign object at 0x000001F6E66F3B90>,
                              388)],
             '$522return_value.3': [(<numba.core.ir.Assign object at 0x000001F6E66F1FD0>,
                                     518)],
             '$binop_iadd156.7': [(<numba.core.ir.Assign object at 0x000001F6E66AA510>,
                                   132)],
             '$binop_iadd424.12': [(<numba.core.ir.Assign object at 0x000001F6E66F11C0>,
                                    388)],
             '$binop_iadd510.32': [(<numba.core.ir.Assign object at 0x000001F6E66F2960>,
                                    388)],
             '$binop_sub64.6': [(<numba.core.ir.Assign object at 0x000001F6E6756630>,
                                 38)],
             '$const28.5.1': [(<numba.core.ir.Assign object at 0x000001F6DA6CB590>,
                               0)],
             '$const282.9.1': [(<numba.core.ir.Assign object at 0x000001F6DA68B020>,
                                252)],
             '$const302.14.1': [(<numba.core.ir.Assign object at 0x000001F6DA68B8C0>,
                                 252)],
             '$const306.16.1': [(<numba.core.ir.Assign object at 0x000001F6E66F16A0>,
                                 252)],
             '$const36.0': [(<numba.core.ir.Assign object at 0x000001F6E6757560>,
                             36)],
             '$const370.28.3': [(<numba.core.ir.Assign object at 0x000001F6E66F0A70>,
                                 252)],
             '$const406.7.1': [(<numba.core.ir.Assign object at 0x000001F6E66F17F0>,
                                388)],
             '$const456.21.1': [(<numba.core.ir.Assign object at 0x000001F6E66F1E50>,
                                 388)],
             '$const62.5.3': [(<numba.core.ir.Assign object at 0x000001F6E6757EF0>,
                               38)],
             '$phi128.0': [(<numba.core.ir.Assign object at 0x000001F6E6757920>,
                            38)],
             '$phi132.1': [(<numba.core.ir.Assign object at 0x000001F6E66A9D60>,
                            128)],
             '$phi384.0': [(<numba.core.ir.Assign object at 0x000001F6DA6881D0>,
                            252)],
             '$phi388.1': [(<numba.core.ir.Assign object at 0x000001F6E66F1640>,
                            384)],
             'bool34': [(<numba.core.ir.Assign object at 0x000001F6DA6C8170>,
                         0)],
             'dst_offset': [(<numba.core.ir.Assign object at 0x000001F6E66F0260>,
                             252),
                            (<numba.core.ir.Assign object at 0x000001F6DA6C9760>,
                             388),
                            (<numba.core.ir.Assign object at 0x000001F6E66F3140>,
                             388)],
             'idx': [(<numba.core.ir.Assign object at 0x000001F6E66F0CB0>,
                      388)],
             'is_ascii': [(<numba.core.ir.Assign object at 0x000001F6E66A9190>,
                           38),
                          (<numba.core.ir.Assign object at 0x000001F6DA688320>,
                           132)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6E66A8B30>, 38),
                      (<numba.core.ir.Assign object at 0x000001F6DA688860>,
                       132)],
             'length': [(<numba.core.ir.Assign object at 0x000001F6E66A8980>,
                         38),
                        (<numba.core.ir.Assign object at 0x000001F6E66A9400>,
                         132)],
             'p': [(<numba.core.ir.Assign object at 0x000001F6E66A9F10>, 132)],
             'part': [(<numba.core.ir.Assign object at 0x000001F6E66F1AC0>,
                       252),
                      (<numba.core.ir.Assign object at 0x000001F6E66F2090>,
                       388)],
             'parts': [(<numba.core.ir.Assign object at 0x000001F6DA63F290>,
                        0)],
             'parts_len': [(<numba.core.ir.Assign object at 0x000001F6DA6CB3E0>,
                            0)],
             'result': [(<numba.core.ir.Assign object at 0x000001F6DA688D70>,
                         252)],
             'sep': [(<numba.core.ir.Assign object at 0x000001F6DA64C260>, 0)],
             'sep_len': [(<numba.core.ir.Assign object at 0x000001F6E6757BF0>,
                          38)]})
2025-07-23 17:15:48,810 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E66F3290>
2025-07-23 17:15:48,810 - DEBUG - Fix SSA violator on var length
2025-07-23 17:15:48,810 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,810 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,810 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,810 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,811 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,811 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,811 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,811 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,811 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,812 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,812 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,812 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,812 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,812 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,813 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,813 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,813 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,813 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,813 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,813 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,814 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,814 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,814 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,814 - DEBUG - first assign: length
2025-07-23 17:15:48,814 - DEBUG - replaced with: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,814 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,814 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,815 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,815 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,815 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,815 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,815 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,815 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,815 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,815 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,816 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,816 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,816 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,816 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,816 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,816 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,816 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,816 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,816 - DEBUG - on stmt: length = $binop_iadd156.7
2025-07-23 17:15:48,817 - DEBUG - replaced with: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,817 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,817 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,817 - DEBUG - on stmt: kind = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,817 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,817 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,817 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,818 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,818 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,818 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,818 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,818 - DEBUG - on stmt: result = call $254load_global.2(kind, length, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,818 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,819 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,819 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,819 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,820 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,820 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,820 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,820 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,821 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,821 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,821 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,821 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,821 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,822 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,822 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,822 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,822 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,822 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,822 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,822 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,823 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,823 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,823 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,823 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,823 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,823 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,823 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,823 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,823 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,824 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,824 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,824 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,825 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,825 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,825 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,825 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,825 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,825 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,825 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64C290>
2025-07-23 17:15:48,825 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,825 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,825 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x000001F6DA64C590>],
             132: [<numba.core.ir.Assign object at 0x000001F6DA628740>]})
2025-07-23 17:15:48,826 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,826 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,826 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,826 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,826 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,826 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,827 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,827 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,827 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,827 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,827 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,827 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,828 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,828 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,828 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,828 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,828 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,828 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,828 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,828 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,828 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,828 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,829 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,829 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,829 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,829 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,829 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,829 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,830 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,830 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,830 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,830 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,830 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,830 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,831 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,831 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,831 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,831 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,831 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,831 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,831 - DEBUG - find_def var='length' stmt=$binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,832 - DEBUG - find_def_from_top label 132
2025-07-23 17:15:48,832 - DEBUG - idom 128 from label 132
2025-07-23 17:15:48,832 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,832 - DEBUG - find_def_from_top label 128
2025-07-23 17:15:48,832 - DEBUG - insert phi node length.2 = phi(incoming_values=[], incoming_blocks=[]) at 128
2025-07-23 17:15:48,832 - DEBUG - find_def_from_bottom label 132
2025-07-23 17:15:48,832 - DEBUG - incoming_def length.1 = $binop_iadd156.7
2025-07-23 17:15:48,832 - DEBUG - find_def_from_bottom label 38
2025-07-23 17:15:48,833 - DEBUG - incoming_def length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,833 - DEBUG - replaced with: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,833 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,833 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,833 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,833 - DEBUG - on stmt: kind = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,833 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,833 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,833 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,834 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,834 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,834 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,834 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,835 - DEBUG - on stmt: result = call $254load_global.2(kind, length, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,835 - DEBUG - find_def var='length' stmt=result = call $254load_global.2(kind, length, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length, unicode.py:1498), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,835 - DEBUG - find_def_from_top label 252
2025-07-23 17:15:48,835 - DEBUG - idom 128 from label 252
2025-07-23 17:15:48,835 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,836 - DEBUG - replaced with: result = call $254load_global.2(kind, length.2, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,836 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,836 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,837 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,837 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,837 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,837 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,837 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,839 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,839 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,839 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,839 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,839 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,839 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,839 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,839 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,840 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,840 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,840 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,840 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,840 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,840 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,840 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,841 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,842 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,842 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,842 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,842 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,842 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,842 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,842 - DEBUG - Fix SSA violator on var kind
2025-07-23 17:15:48,842 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,842 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,843 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,843 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,843 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,843 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,843 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,843 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,843 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,843 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,844 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,844 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,844 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,844 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,844 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,844 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,844 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,844 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,844 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,844 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,845 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,845 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,845 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,845 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,845 - DEBUG - first assign: kind
2025-07-23 17:15:48,845 - DEBUG - replaced with: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,845 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,845 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,845 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,846 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,846 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,846 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,846 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,846 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,846 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,846 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,847 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,847 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,847 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,847 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,847 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,847 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,847 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,847 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,848 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,848 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,848 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,848 - DEBUG - on stmt: kind = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,848 - DEBUG - replaced with: kind.1 = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,848 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,848 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,848 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,848 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,849 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,849 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,849 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,849 - DEBUG - on stmt: result = call $254load_global.2(kind, length.2, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,849 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,849 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,850 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,850 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,850 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,850 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,850 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,850 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,851 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,851 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,851 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,851 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,851 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,851 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,852 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,852 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,852 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,852 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,852 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,853 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,853 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,853 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,853 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,854 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,854 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,854 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,854 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,854 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,854 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,855 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,855 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,855 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,855 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,855 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,855 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,856 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,856 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,856 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,856 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,856 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,856 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x000001F6DA64FDD0>],
             132: [<numba.core.ir.Assign object at 0x000001F6DA628F20>]})
2025-07-23 17:15:48,857 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,857 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,857 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,857 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,857 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,857 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,857 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,857 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,857 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,857 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,859 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,859 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,859 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,859 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,859 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,859 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,859 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,859 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,860 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,860 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,860 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,860 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,860 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,860 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,860 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,861 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,861 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,861 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,861 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,861 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,861 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,862 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,862 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,862 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,862 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,862 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,862 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,862 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,863 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,863 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,863 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,863 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,863 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,863 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,863 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,863 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,864 - DEBUG - find_def var='kind' stmt=kind.1 = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,864 - DEBUG - find_def_from_top label 132
2025-07-23 17:15:48,864 - DEBUG - idom 128 from label 132
2025-07-23 17:15:48,864 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,864 - DEBUG - find_def_from_top label 128
2025-07-23 17:15:48,864 - DEBUG - insert phi node kind.2 = phi(incoming_values=[], incoming_blocks=[]) at 128
2025-07-23 17:15:48,864 - DEBUG - find_def_from_bottom label 132
2025-07-23 17:15:48,865 - DEBUG - incoming_def kind.1 = call $162load_global.8(kind, $176load_attr.12, func=$162load_global.8, args=[Var(kind, unicode.py:1499), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,865 - DEBUG - find_def_from_bottom label 38
2025-07-23 17:15:48,865 - DEBUG - incoming_def kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,865 - DEBUG - replaced with: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,865 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,866 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,866 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,866 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,866 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,866 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,867 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,867 - DEBUG - on stmt: result = call $254load_global.2(kind, length.2, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,867 - DEBUG - find_def var='kind' stmt=result = call $254load_global.2(kind, length.2, is_ascii, func=$254load_global.2, args=[Var(kind, unicode.py:1499), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,867 - DEBUG - find_def_from_top label 252
2025-07-23 17:15:48,867 - DEBUG - idom 128 from label 252
2025-07-23 17:15:48,867 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,868 - DEBUG - replaced with: result = call $254load_global.2(kind.2, length.2, is_ascii, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,868 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,869 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,869 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,869 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,870 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,870 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,870 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,870 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,870 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,870 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,870 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,871 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,871 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,871 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,871 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,871 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,871 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,872 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,872 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,872 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,872 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,872 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,872 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,873 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,873 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,873 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,873 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,873 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,873 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,873 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,874 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,874 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,874 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,874 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,874 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,874 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,874 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64C290>
2025-07-23 17:15:48,874 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,875 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,875 - DEBUG - Fix SSA violator on var is_ascii
2025-07-23 17:15:48,875 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,875 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,875 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,875 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,875 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,875 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,875 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,876 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,876 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,876 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,876 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,876 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,876 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,876 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,876 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,876 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,877 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,877 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,877 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,877 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,877 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,877 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,877 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,877 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,877 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,877 - DEBUG - first assign: is_ascii
2025-07-23 17:15:48,877 - DEBUG - replaced with: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,877 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,877 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,877 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,879 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,879 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,879 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,879 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,879 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,879 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,879 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,879 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,879 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,880 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,880 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,880 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,880 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,880 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,880 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,880 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,881 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,881 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,881 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,881 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,881 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,881 - DEBUG - on stmt: is_ascii = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,882 - DEBUG - replaced with: is_ascii.1 = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,882 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,882 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,882 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,882 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,882 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,882 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,882 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,883 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,883 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,884 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,884 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,884 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,884 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,884 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,884 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,884 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,885 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,885 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,885 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,885 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,885 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,885 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,886 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,886 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,886 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,886 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,886 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,886 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,887 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,887 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,887 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,887 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,888 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,888 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,888 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,889 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,889 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,889 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,889 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,889 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,889 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,889 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,889 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64D640>
2025-07-23 17:15:48,889 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,890 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,890 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {38: [<numba.core.ir.Assign object at 0x000001F6DA64C290>],
             132: [<numba.core.ir.Assign object at 0x000001F6DA62A330>]})
2025-07-23 17:15:48,890 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,890 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,890 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,890 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,891 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,891 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,891 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,891 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,891 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,891 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,891 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,891 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,892 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,892 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,892 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,892 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,892 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,892 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,892 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,892 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,892 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,893 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,893 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,893 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,893 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,893 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,893 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,893 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,893 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,894 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,894 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,894 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,894 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,894 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,894 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,894 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,894 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,894 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,895 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,895 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,895 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,895 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,895 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,895 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,895 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,895 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,895 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,896 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,896 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,896 - DEBUG - on stmt: is_ascii.1 = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,896 - DEBUG - find_def var='is_ascii' stmt=is_ascii.1 = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,896 - DEBUG - find_def_from_top label 132
2025-07-23 17:15:48,896 - DEBUG - idom 128 from label 132
2025-07-23 17:15:48,896 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,896 - DEBUG - find_def_from_top label 128
2025-07-23 17:15:48,897 - DEBUG - insert phi node is_ascii.2 = phi(incoming_values=[], incoming_blocks=[]) at 128
2025-07-23 17:15:48,897 - DEBUG - find_def_from_bottom label 132
2025-07-23 17:15:48,897 - DEBUG - incoming_def is_ascii.1 = call $206load_global.14(is_ascii, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii, unicode.py:1500), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,897 - DEBUG - find_def_from_bottom label 38
2025-07-23 17:15:48,897 - DEBUG - incoming_def is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,897 - DEBUG - replaced with: is_ascii.1 = call $206load_global.14(is_ascii.2, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii.2, unicode.py:1501), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,897 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,897 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,897 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,899 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,899 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,899 - DEBUG - find_def var='is_ascii' stmt=result = call $254load_global.2(kind.2, length.2, is_ascii, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii, unicode.py:1500)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,899 - DEBUG - find_def_from_top label 252
2025-07-23 17:15:48,900 - DEBUG - idom 128 from label 252
2025-07-23 17:15:48,900 - DEBUG - find_def_from_bottom label 128
2025-07-23 17:15:48,900 - DEBUG - replaced with: result = call $254load_global.2(kind.2, length.2, is_ascii.2, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii.2, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,901 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,901 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,901 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,901 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,902 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,902 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,902 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,902 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,903 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,903 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,903 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,903 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,904 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,904 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,904 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,904 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,905 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,905 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,905 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,906 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,906 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,906 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,906 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,907 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,907 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,907 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,907 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,907 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,907 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,907 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,907 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,907 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,907 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,909 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,910 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,910 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,910 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,910 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64DC70>
2025-07-23 17:15:48,910 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,910 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,910 - DEBUG - Fix SSA violator on var part
2025-07-23 17:15:48,910 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,911 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,911 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,911 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,911 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,911 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,911 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,911 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,911 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,911 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,912 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,912 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,912 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,912 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,912 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,912 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,912 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,912 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,912 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,912 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,913 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,913 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,913 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,913 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,913 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,913 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,914 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,914 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,914 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,914 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,914 - DEBUG - on stmt: is_ascii.2 = phi(incoming_values=[Var(is_ascii.1, unicode.py:1504), Var(is_ascii, unicode.py:1500)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,915 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,915 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,915 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,915 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,915 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,915 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,916 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,916 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,916 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,916 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,916 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,916 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,916 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,916 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,916 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,917 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,917 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,917 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,917 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,917 - DEBUG - on stmt: is_ascii.1 = call $206load_global.14(is_ascii.2, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii.2, unicode.py:1501), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,917 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,917 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,918 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,918 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,918 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii.2, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii.2, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,918 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,918 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,918 - DEBUG - first assign: part
2025-07-23 17:15:48,919 - DEBUG - replaced with: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,919 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,919 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,919 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,919 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,919 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,920 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,920 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,920 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,920 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,921 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,921 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,922 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,923 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,923 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,923 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,923 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,923 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,923 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,924 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,924 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,924 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,924 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,924 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,924 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,924 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,925 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,925 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,925 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,925 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,925 - DEBUG - on stmt: part = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,925 - DEBUG - replaced with: part.1 = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,925 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,926 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,926 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,926 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,927 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,927 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,927 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,927 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,927 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {252: [<numba.core.ir.Assign object at 0x000001F6DA629D90>],
             388: [<numba.core.ir.Assign object at 0x000001F6DA62B4A0>]})
2025-07-23 17:15:48,927 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,927 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,927 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,927 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,927 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,927 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,927 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,927 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,929 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,929 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,929 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,929 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,929 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,929 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,929 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,929 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,930 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,930 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,930 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,930 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,930 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,930 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,930 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,930 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,931 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,931 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,931 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,931 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,931 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,931 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,931 - DEBUG - on stmt: is_ascii.2 = phi(incoming_values=[Var(is_ascii.1, unicode.py:1504), Var(is_ascii, unicode.py:1500)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,931 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,932 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,932 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,932 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,932 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,932 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,932 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,932 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,932 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,932 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,933 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,933 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,933 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,933 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,933 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,933 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,933 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,934 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,934 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,934 - DEBUG - on stmt: is_ascii.1 = call $206load_global.14(is_ascii.2, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii.2, unicode.py:1501), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,934 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,934 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,935 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,935 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,935 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii.2, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii.2, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,935 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,935 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,935 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,935 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,936 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,936 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,936 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,936 - DEBUG - find_def var='part' stmt=$320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,936 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,936 - DEBUG - find_def var='part' stmt=$328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,936 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,936 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,937 - DEBUG - find_def var='part' stmt=dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,937 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,937 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,937 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,937 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,937 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,937 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,937 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,938 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,938 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,938 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,938 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,938 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,938 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,938 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,938 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,939 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,939 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,939 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,939 - DEBUG - on stmt: part.1 = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,939 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,939 - DEBUG - find_def var='part' stmt=$470call.25 = call $458load_global.22(part, func=$458load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,940 - DEBUG - replaced with: $470call.25 = call $458load_global.22(part.1, func=$458load_global.22, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,940 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,940 - DEBUG - find_def var='part' stmt=$478call.26 = call $440load_global.16(result, dst_offset, part, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part, unicode.py:1509), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,940 - DEBUG - replaced with: $478call.26 = call $440load_global.16(result, dst_offset, part.1, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part.1, unicode.py:1515), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,940 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,940 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,941 - DEBUG - find_def var='part' stmt=$502call.31 = call $490load_global.28(part, func=$490load_global.28, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,941 - DEBUG - replaced with: $502call.31 = call $490load_global.28(part.1, func=$490load_global.28, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,941 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,941 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,941 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,941 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,941 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64D640>
2025-07-23 17:15:48,941 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,941 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,942 - DEBUG - Fix SSA violator on var dst_offset
2025-07-23 17:15:48,942 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,942 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,942 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,942 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,942 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,942 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,942 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,942 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,943 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,943 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,943 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,943 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,943 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,943 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,943 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,943 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,943 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,944 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,944 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,944 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,944 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,944 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,944 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,944 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,944 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,944 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,945 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,945 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,945 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,945 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,945 - DEBUG - on stmt: is_ascii.2 = phi(incoming_values=[Var(is_ascii.1, unicode.py:1504), Var(is_ascii, unicode.py:1500)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,945 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,945 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,946 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,946 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,946 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,946 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,946 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,948 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,948 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,948 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,948 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,948 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,948 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,948 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,948 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,948 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,948 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,949 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,949 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,949 - DEBUG - on stmt: is_ascii.1 = call $206load_global.14(is_ascii.2, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii.2, unicode.py:1501), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,949 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,949 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,949 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,949 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,949 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii.2, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii.2, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,950 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,950 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,951 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,951 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,951 - DEBUG - first assign: dst_offset
2025-07-23 17:15:48,951 - DEBUG - replaced with: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,952 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,952 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,952 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,952 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,952 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,952 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,954 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,954 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,954 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,954 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,954 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,954 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,954 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,954 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,954 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,954 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,955 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,955 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,955 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,955 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,955 - DEBUG - on stmt: dst_offset = $binop_iadd424.12
2025-07-23 17:15:48,955 - DEBUG - replaced with: dst_offset.1 = $binop_iadd424.12
2025-07-23 17:15:48,956 - DEBUG - on stmt: part.1 = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,956 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,956 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,956 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,956 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part.1, func=$458load_global.22, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,956 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part.1, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part.1, unicode.py:1515), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,957 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,957 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part.1, func=$490load_global.28, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,957 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,957 - DEBUG - on stmt: dst_offset = $binop_iadd510.32
2025-07-23 17:15:48,957 - DEBUG - replaced with: dst_offset.2 = $binop_iadd510.32
2025-07-23 17:15:48,957 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,957 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,957 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6DA629CA0>
2025-07-23 17:15:48,957 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,957 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:48,957 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {252: [<numba.core.ir.Assign object at 0x000001F6DA64C4A0>],
             388: [<numba.core.ir.Assign object at 0x000001F6DA65D190>,
                   <numba.core.ir.Assign object at 0x000001F6DA65CB60>]})
2025-07-23 17:15:48,959 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:15:48,959 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,959 - DEBUG - on stmt: sep = arg(0, name=sep)
2025-07-23 17:15:48,959 - DEBUG - on stmt: parts = arg(1, name=parts)
2025-07-23 17:15:48,959 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,959 - DEBUG - on stmt: parts_len = call $4load_global.0(parts, func=$4load_global.0, args=[Var(parts, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,960 - DEBUG - on stmt: $const28.5.1 = const(int, 0)
2025-07-23 17:15:48,961 - DEBUG - on stmt: $30compare_op.6 = parts_len == $const28.5.1
2025-07-23 17:15:48,961 - DEBUG - on stmt: bool34 = global(bool: <class 'bool'>)
2025-07-23 17:15:48,962 - DEBUG - on stmt: $34pred = call bool34($30compare_op.6, func=bool34, args=(Var($30compare_op.6, unicode.py:1493),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,962 - DEBUG - on stmt: branch $34pred, 36, 38
2025-07-23 17:15:48,962 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:15:48,963 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,963 - DEBUG - on stmt: $const36.0 = const(str, )
2025-07-23 17:15:48,963 - DEBUG - on stmt: $36return_const.1 = cast(value=$const36.0)
2025-07-23 17:15:48,963 - DEBUG - on stmt: return $36return_const.1
2025-07-23 17:15:48,963 - DEBUG - ==== SSA block rewrite pass on 38
2025-07-23 17:15:48,963 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,963 - DEBUG - on stmt: $38load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:48,963 - DEBUG - on stmt: sep_len = call $38load_global.0(sep, func=$38load_global.0, args=[Var(sep, unicode.py:1490)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,963 - DEBUG - on stmt: $const62.5.3 = const(int, 1)
2025-07-23 17:15:48,964 - DEBUG - on stmt: $binop_sub64.6 = parts_len - $const62.5.3
2025-07-23 17:15:48,964 - DEBUG - on stmt: length = $binop_sub64.6 * sep_len
2025-07-23 17:15:48,964 - DEBUG - on stmt: kind = getattr(value=sep, attr=_kind)
2025-07-23 17:15:48,964 - DEBUG - on stmt: is_ascii = getattr(value=sep, attr=_is_ascii)
2025-07-23 17:15:48,964 - DEBUG - on stmt: $126get_iter.14 = getiter(value=parts)
2025-07-23 17:15:48,964 - DEBUG - on stmt: $phi128.0 = $126get_iter.14
2025-07-23 17:15:48,964 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,965 - DEBUG - ==== SSA block rewrite pass on 128
2025-07-23 17:15:48,965 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,965 - DEBUG - on stmt: is_ascii.2 = phi(incoming_values=[Var(is_ascii.1, unicode.py:1504), Var(is_ascii, unicode.py:1500)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,965 - DEBUG - on stmt: kind.2 = phi(incoming_values=[Var(kind.1, unicode.py:1503), Var(kind, unicode.py:1499)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,965 - DEBUG - on stmt: length.2 = phi(incoming_values=[Var(length.1, unicode.py:1502), Var(length, unicode.py:1498)], incoming_blocks=[132, 38])
2025-07-23 17:15:48,965 - DEBUG - on stmt: $128for_iter.1 = iternext(value=$phi128.0)
2025-07-23 17:15:48,965 - DEBUG - on stmt: $128for_iter.2 = pair_first(value=$128for_iter.1)
2025-07-23 17:15:48,965 - DEBUG - on stmt: $128for_iter.3 = pair_second(value=$128for_iter.1)
2025-07-23 17:15:48,966 - DEBUG - on stmt: $phi132.1 = $128for_iter.2
2025-07-23 17:15:48,966 - DEBUG - on stmt: branch $128for_iter.3, 132, 252
2025-07-23 17:15:48,966 - DEBUG - ==== SSA block rewrite pass on 132
2025-07-23 17:15:48,966 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,966 - DEBUG - on stmt: p = $phi132.1
2025-07-23 17:15:48,966 - DEBUG - on stmt: $136load_global.3 = global(len: <built-in function len>)
2025-07-23 17:15:48,966 - DEBUG - on stmt: $148call.6 = call $136load_global.3(p, func=$136load_global.3, args=[Var(p, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,966 - DEBUG - on stmt: $binop_iadd156.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=length.2, rhs=$148call.6, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,967 - DEBUG - on stmt: length.1 = $binop_iadd156.7
2025-07-23 17:15:48,967 - DEBUG - on stmt: $162load_global.8 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:48,967 - DEBUG - on stmt: $176load_attr.12 = getattr(value=p, attr=_kind)
2025-07-23 17:15:48,967 - DEBUG - on stmt: kind.1 = call $162load_global.8(kind.2, $176load_attr.12, func=$162load_global.8, args=[Var(kind.2, unicode.py:1501), Var($176load_attr.12, unicode.py:1503)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,967 - DEBUG - on stmt: $206load_global.14 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:48,967 - DEBUG - on stmt: $220load_attr.18 = getattr(value=p, attr=_is_ascii)
2025-07-23 17:15:48,967 - DEBUG - on stmt: is_ascii.1 = call $206load_global.14(is_ascii.2, $220load_attr.18, func=$206load_global.14, args=[Var(is_ascii.2, unicode.py:1501), Var($220load_attr.18, unicode.py:1504)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,967 - DEBUG - on stmt: jump 128
2025-07-23 17:15:48,968 - DEBUG - ==== SSA block rewrite pass on 252
2025-07-23 17:15:48,968 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,968 - DEBUG - on stmt: $254load_global.2 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:48,968 - DEBUG - on stmt: result = call $254load_global.2(kind.2, length.2, is_ascii.2, func=$254load_global.2, args=[Var(kind.2, unicode.py:1501), Var(length.2, unicode.py:1501), Var(is_ascii.2, unicode.py:1501)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,968 - DEBUG - on stmt: $const282.9.1 = const(int, 0)
2025-07-23 17:15:48,969 - DEBUG - on stmt: part = static_getitem(value=parts, index=0, index_var=$const282.9.1, fn=<built-in function getitem>)
2025-07-23 17:15:48,969 - DEBUG - on stmt: $290load_global.11 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,969 - DEBUG - on stmt: $const302.14.1 = const(int, 0)
2025-07-23 17:15:48,969 - DEBUG - on stmt: $const306.16.1 = const(int, 0)
2025-07-23 17:15:48,969 - DEBUG - on stmt: $308load_global.17 = global(len: <built-in function len>)
2025-07-23 17:15:48,969 - DEBUG - on stmt: $320call.20 = call $308load_global.17(part, func=$308load_global.17, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,970 - DEBUG - on stmt: $328call.21 = call $290load_global.11(result, $const302.14.1, part, $const306.16.1, $320call.20, func=$290load_global.11, args=[Var(result, unicode.py:1506), Var($const302.14.1, unicode.py:1510), Var(part, unicode.py:1509), Var($const306.16.1, unicode.py:1510), Var($320call.20, unicode.py:1510)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,971 - DEBUG - on stmt: $338load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,971 - DEBUG - on stmt: dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,971 - DEBUG - on stmt: $360load_global.26 = global(range: <class 'range'>)
2025-07-23 17:15:48,971 - DEBUG - on stmt: $const370.28.3 = const(int, 1)
2025-07-23 17:15:48,971 - DEBUG - on stmt: $374call.30 = call $360load_global.26($const370.28.3, parts_len, func=$360load_global.26, args=[Var($const370.28.3, unicode.py:1512), Var(parts_len, unicode.py:1492)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,972 - DEBUG - on stmt: $382get_iter.31 = getiter(value=$374call.30)
2025-07-23 17:15:48,972 - DEBUG - on stmt: $phi384.0 = $382get_iter.31
2025-07-23 17:15:48,972 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,972 - DEBUG - ==== SSA block rewrite pass on 384
2025-07-23 17:15:48,972 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,972 - DEBUG - on stmt: $384for_iter.1 = iternext(value=$phi384.0)
2025-07-23 17:15:48,972 - DEBUG - on stmt: $384for_iter.2 = pair_first(value=$384for_iter.1)
2025-07-23 17:15:48,972 - DEBUG - on stmt: $384for_iter.3 = pair_second(value=$384for_iter.1)
2025-07-23 17:15:48,973 - DEBUG - on stmt: $phi388.1 = $384for_iter.2
2025-07-23 17:15:48,973 - DEBUG - on stmt: branch $384for_iter.3, 388, 518
2025-07-23 17:15:48,973 - DEBUG - ==== SSA block rewrite pass on 388
2025-07-23 17:15:48,973 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,973 - DEBUG - on stmt: idx = $phi388.1
2025-07-23 17:15:48,973 - DEBUG - on stmt: $390load_global.2 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,973 - DEBUG - on stmt: $const406.7.1 = const(int, 0)
2025-07-23 17:15:48,974 - DEBUG - on stmt: $410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,974 - DEBUG - find_def var='dst_offset' stmt=$410call.9 = call $390load_global.2(result, dst_offset, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,974 - DEBUG - find_def_from_top label 388
2025-07-23 17:15:48,974 - DEBUG - idom 384 from label 388
2025-07-23 17:15:48,974 - DEBUG - find_def_from_bottom label 384
2025-07-23 17:15:48,974 - DEBUG - find_def_from_top label 384
2025-07-23 17:15:48,974 - DEBUG - insert phi node dst_offset.3 = phi(incoming_values=[], incoming_blocks=[]) at 384
2025-07-23 17:15:48,974 - DEBUG - find_def_from_bottom label 388
2025-07-23 17:15:48,974 - DEBUG - incoming_def dst_offset.2 = $binop_iadd510.32
2025-07-23 17:15:48,975 - DEBUG - find_def_from_bottom label 252
2025-07-23 17:15:48,975 - DEBUG - incoming_def dst_offset = call $338load_global.22(part, func=$338load_global.22, args=[Var(part, unicode.py:1509)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,975 - DEBUG - replaced with: $410call.9 = call $390load_global.2(result, dst_offset.3, sep, $const406.7.1, sep_len, func=$390load_global.2, args=[Var(result, unicode.py:1506), Var(dst_offset.3, unicode.py:1512), Var(sep, unicode.py:1490), Var($const406.7.1, unicode.py:1513), Var(sep_len, unicode.py:1497)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,975 - DEBUG - on stmt: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,975 - DEBUG - find_def var='dst_offset' stmt=$binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,975 - DEBUG - find_def_from_top label 388
2025-07-23 17:15:48,975 - DEBUG - idom 384 from label 388
2025-07-23 17:15:48,976 - DEBUG - find_def_from_bottom label 384
2025-07-23 17:15:48,976 - DEBUG - replaced with: $binop_iadd424.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset.3, rhs=sep_len, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,976 - DEBUG - on stmt: dst_offset.1 = $binop_iadd424.12
2025-07-23 17:15:48,976 - DEBUG - on stmt: part.1 = getitem(value=parts, index=idx, fn=<built-in function getitem>)
2025-07-23 17:15:48,976 - DEBUG - on stmt: $440load_global.16 = global(_strncpy: <function _strncpy at 0x000001F6D18F4D60>)
2025-07-23 17:15:48,976 - DEBUG - on stmt: $const456.21.1 = const(int, 0)
2025-07-23 17:15:48,976 - DEBUG - on stmt: $458load_global.22 = global(len: <built-in function len>)
2025-07-23 17:15:48,976 - DEBUG - on stmt: $470call.25 = call $458load_global.22(part.1, func=$458load_global.22, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,976 - DEBUG - on stmt: $478call.26 = call $440load_global.16(result, dst_offset, part.1, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part.1, unicode.py:1515), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,977 - DEBUG - find_def var='dst_offset' stmt=$478call.26 = call $440load_global.16(result, dst_offset, part.1, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset, unicode.py:1511), Var(part.1, unicode.py:1515), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,977 - DEBUG - replaced with: $478call.26 = call $440load_global.16(result, dst_offset.1, part.1, $const456.21.1, $470call.25, func=$440load_global.16, args=[Var(result, unicode.py:1506), Var(dst_offset.1, unicode.py:1514), Var(part.1, unicode.py:1515), Var($const456.21.1, unicode.py:1516), Var($470call.25, unicode.py:1516)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,977 - DEBUG - on stmt: $490load_global.28 = global(len: <built-in function len>)
2025-07-23 17:15:48,977 - DEBUG - on stmt: $502call.31 = call $490load_global.28(part.1, func=$490load_global.28, args=[Var(part.1, unicode.py:1515)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:48,977 - DEBUG - on stmt: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,977 - DEBUG - find_def var='dst_offset' stmt=$binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,977 - DEBUG - replaced with: $binop_iadd510.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dst_offset.1, rhs=$502call.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:15:48,977 - DEBUG - on stmt: dst_offset.2 = $binop_iadd510.32
2025-07-23 17:15:48,979 - DEBUG - on stmt: jump 384
2025-07-23 17:15:48,979 - DEBUG - ==== SSA block rewrite pass on 518
2025-07-23 17:15:48,979 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6DA64CD40>
2025-07-23 17:15:48,979 - DEBUG - on stmt: $522return_value.3 = cast(value=result)
2025-07-23 17:15:48,979 - DEBUG - on stmt: return $522return_value.3
2025-07-23 17:15:49,003 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=356)
           2	RESUME(arg=0, lineno=356)
           4	LOAD_FAST(arg=0, lineno=358)
           6	LOAD_GLOBAL(arg=0, lineno=358)
          16	COMPARE_OP(arg=40, lineno=358)
          20	POP_JUMP_IF_FALSE(arg=2, lineno=358)
          22	LOAD_FAST(arg=1, lineno=359)
          24	RETURN_VALUE(arg=None, lineno=359)
>         26	LOAD_FAST(arg=0, lineno=360)
          28	LOAD_GLOBAL(arg=2, lineno=360)
          38	COMPARE_OP(arg=40, lineno=360)
          42	POP_JUMP_IF_FALSE(arg=13, lineno=360)
          44	LOAD_FAST(arg=1, lineno=361)
          46	LOAD_GLOBAL(arg=4, lineno=361)
          56	COMPARE_OP(arg=40, lineno=361)
          60	POP_JUMP_IF_FALSE(arg=2, lineno=361)
          62	LOAD_FAST(arg=1, lineno=362)
          64	RETURN_VALUE(arg=None, lineno=362)
>         66	LOAD_FAST(arg=0, lineno=364)
          68	RETURN_VALUE(arg=None, lineno=364)
>         70	LOAD_FAST(arg=0, lineno=365)
          72	LOAD_GLOBAL(arg=4, lineno=365)
          82	COMPARE_OP(arg=40, lineno=365)
          86	POP_JUMP_IF_FALSE(arg=2, lineno=365)
          88	LOAD_FAST(arg=0, lineno=366)
          90	RETURN_VALUE(arg=None, lineno=366)
>         92	LOAD_GLOBAL(arg=7, lineno=368)
         102	LOAD_CONST(arg=1, lineno=369)
         104	CALL(arg=1, lineno=368)
         112	RAISE_VARARGS(arg=1, lineno=368)
2025-07-23 17:15:49,004 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,004 - DEBUG - stack: []
2025-07-23 17:15:49,004 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,004 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=356)
2025-07-23 17:15:49,004 - DEBUG - stack []
2025-07-23 17:15:49,005 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=356)
2025-07-23 17:15:49,005 - DEBUG - stack []
2025-07-23 17:15:49,005 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=358)
2025-07-23 17:15:49,005 - DEBUG - stack []
2025-07-23 17:15:49,005 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=358)
2025-07-23 17:15:49,005 - DEBUG - stack ['$kind14.0']
2025-07-23 17:15:49,006 - DEBUG - dispatch pc=16, inst=COMPARE_OP(arg=40, lineno=358)
2025-07-23 17:15:49,006 - DEBUG - stack ['$kind14.0', '$6load_global.1']
2025-07-23 17:15:49,006 - DEBUG - dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=2, lineno=358)
2025-07-23 17:15:49,006 - DEBUG - stack ['$16compare_op.2']
2025-07-23 17:15:49,006 - DEBUG - end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,006 - DEBUG - pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
2025-07-23 17:15:49,006 - DEBUG - stack: []
2025-07-23 17:15:49,006 - DEBUG - state.pc_initial: State(pc_initial=22 nstack_initial=0)
2025-07-23 17:15:49,007 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=359)
2025-07-23 17:15:49,007 - DEBUG - stack []
2025-07-23 17:15:49,007 - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=359)
2025-07-23 17:15:49,007 - DEBUG - stack ['$kind222.0']
2025-07-23 17:15:49,007 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,007 - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0)])
2025-07-23 17:15:49,007 - DEBUG - stack: []
2025-07-23 17:15:49,008 - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-07-23 17:15:49,008 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=360)
2025-07-23 17:15:49,008 - DEBUG - stack []
2025-07-23 17:15:49,008 - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=360)
2025-07-23 17:15:49,008 - DEBUG - stack ['$kind126.0']
2025-07-23 17:15:49,008 - DEBUG - dispatch pc=38, inst=COMPARE_OP(arg=40, lineno=360)
2025-07-23 17:15:49,009 - DEBUG - stack ['$kind126.0', '$28load_global.1']
2025-07-23 17:15:49,009 - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=13, lineno=360)
2025-07-23 17:15:49,009 - DEBUG - stack ['$38compare_op.2']
2025-07-23 17:15:49,010 - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,010 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=70 nstack_initial=0)])
2025-07-23 17:15:49,010 - DEBUG - stack: []
2025-07-23 17:15:49,010 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-23 17:15:49,010 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=361)
2025-07-23 17:15:49,011 - DEBUG - stack []
2025-07-23 17:15:49,011 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=361)
2025-07-23 17:15:49,011 - DEBUG - stack ['$kind244.0']
2025-07-23 17:15:49,011 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=40, lineno=361)
2025-07-23 17:15:49,012 - DEBUG - stack ['$kind244.0', '$46load_global.1']
2025-07-23 17:15:49,012 - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=2, lineno=361)
2025-07-23 17:15:49,012 - DEBUG - stack ['$56compare_op.2']
2025-07-23 17:15:49,012 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,012 - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=62 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
2025-07-23 17:15:49,012 - DEBUG - stack: []
2025-07-23 17:15:49,012 - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-07-23 17:15:49,012 - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=365)
2025-07-23 17:15:49,013 - DEBUG - stack []
2025-07-23 17:15:49,013 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=4, lineno=365)
2025-07-23 17:15:49,013 - DEBUG - stack ['$kind170.0']
2025-07-23 17:15:49,013 - DEBUG - dispatch pc=82, inst=COMPARE_OP(arg=40, lineno=365)
2025-07-23 17:15:49,013 - DEBUG - stack ['$kind170.0', '$72load_global.1']
2025-07-23 17:15:49,013 - DEBUG - dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=2, lineno=365)
2025-07-23 17:15:49,013 - DEBUG - stack ['$82compare_op.2']
2025-07-23 17:15:49,013 - DEBUG - end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=92, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,013 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=66 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2025-07-23 17:15:49,014 - DEBUG - stack: []
2025-07-23 17:15:49,014 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2025-07-23 17:15:49,014 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=362)
2025-07-23 17:15:49,014 - DEBUG - stack []
2025-07-23 17:15:49,014 - DEBUG - dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=362)
2025-07-23 17:15:49,014 - DEBUG - stack ['$kind262.0']
2025-07-23 17:15:49,014 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,014 - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2025-07-23 17:15:49,015 - DEBUG - stack: []
2025-07-23 17:15:49,015 - DEBUG - state.pc_initial: State(pc_initial=66 nstack_initial=0)
2025-07-23 17:15:49,015 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=364)
2025-07-23 17:15:49,015 - DEBUG - stack []
2025-07-23 17:15:49,015 - DEBUG - dispatch pc=68, inst=RETURN_VALUE(arg=None, lineno=364)
2025-07-23 17:15:49,015 - DEBUG - stack ['$kind166.0']
2025-07-23 17:15:49,015 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,015 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=92 nstack_initial=0)])
2025-07-23 17:15:49,015 - DEBUG - stack: []
2025-07-23 17:15:49,016 - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=0)
2025-07-23 17:15:49,016 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=366)
2025-07-23 17:15:49,016 - DEBUG - stack []
2025-07-23 17:15:49,016 - DEBUG - dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=366)
2025-07-23 17:15:49,016 - DEBUG - stack ['$kind188.0']
2025-07-23 17:15:49,016 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,016 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0)])
2025-07-23 17:15:49,016 - DEBUG - stack: []
2025-07-23 17:15:49,016 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-07-23 17:15:49,017 - DEBUG - dispatch pc=92, inst=LOAD_GLOBAL(arg=7, lineno=368)
2025-07-23 17:15:49,017 - DEBUG - stack []
2025-07-23 17:15:49,017 - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=369)
2025-07-23 17:15:49,017 - DEBUG - stack ['$null$92.1', '$92load_global.0']
2025-07-23 17:15:49,017 - DEBUG - dispatch pc=104, inst=CALL(arg=1, lineno=368)
2025-07-23 17:15:49,017 - DEBUG - stack ['$null$92.1', '$92load_global.0', '$const102.2.1']
2025-07-23 17:15:49,017 - DEBUG - dispatch pc=112, inst=RAISE_VARARGS(arg=1, lineno=368)
2025-07-23 17:15:49,017 - DEBUG - stack ['$104call.3']
2025-07-23 17:15:49,017 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,018 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,018 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set()})
2025-07-23 17:15:49,018 - DEBUG - defmap: {}
2025-07-23 17:15:49,018 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,018 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,018 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,018 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,019 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,019 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind14.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (16, {'lhs': '$kind14.0', 'rhs': '$6load_global.1', 'res': '$16compare_op.2'}), (20, {'pred': '$16compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
2025-07-23 17:15:49,019 - DEBUG - block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$kind222.0'}), (24, {'retval': '$kind222.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,020 - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$kind126.0'}), (28, {'idx': 1, 'res': '$28load_global.1'}), (38, {'lhs': '$kind126.0', 'rhs': '$28load_global.1', 'res': '$38compare_op.2'}), (42, {'pred': '$38compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 70: ()})
2025-07-23 17:15:49,021 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$kind244.0'}), (46, {'idx': 2, 'res': '$46load_global.1'}), (56, {'lhs': '$kind244.0', 'rhs': '$46load_global.1', 'res': '$56compare_op.2'}), (60, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 66: ()})
2025-07-23 17:15:49,022 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$kind262.0'}), (64, {'retval': '$kind262.0', 'castval': '$64return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,023 - DEBUG - block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$kind166.0'}), (68, {'retval': '$kind166.0', 'castval': '$68return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,023 - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$kind170.0'}), (72, {'idx': 2, 'res': '$72load_global.1'}), (82, {'lhs': '$kind170.0', 'rhs': '$72load_global.1', 'res': '$82compare_op.2'}), (86, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 92: ()})
2025-07-23 17:15:49,023 - DEBUG - block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$kind188.0'}), (90, {'retval': '$kind188.0', 'castval': '$90return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,023 - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'idx': 3, 'res': '$92load_global.0'}), (102, {'res': '$const102.2.1'}), (104, {'func': '$92load_global.0', 'args': ['$const102.2.1'], 'kw_names': None, 'res': '$104call.3'}), (112, {'exc': '$104call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,024 - DEBUG - label 0:
    kind1 = arg(0, name=kind1)               ['kind1']
    kind2 = arg(1, name=kind2)               ['kind2']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $16compare_op.2 = kind1 == $6load_global.1 ['$16compare_op.2', '$6load_global.1', 'kind1']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:358),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $24return_value.1 = cast(value=kind2)    ['$24return_value.1', 'kind2']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $28load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$28load_global.1']
    $38compare_op.2 = kind1 == $28load_global.1 ['$28load_global.1', '$38compare_op.2', 'kind1']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($38compare_op.2, func=bool42, args=(Var($38compare_op.2, unicode.py:360),), kws=(), vararg=None, varkwarg=None, target=None) ['$38compare_op.2', '$42pred', 'bool42']
    branch $42pred, 44, 70                   ['$42pred']
label 44:
    $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$46load_global.1']
    $56compare_op.2 = kind2 == $46load_global.1 ['$46load_global.1', '$56compare_op.2', 'kind2']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:361),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$60pred', 'bool60']
    branch $60pred, 62, 66                   ['$60pred']
label 62:
    $64return_value.1 = cast(value=kind2)    ['$64return_value.1', 'kind2']
    return $64return_value.1                 ['$64return_value.1']
label 66:
    $68return_value.1 = cast(value=kind1)    ['$68return_value.1', 'kind1']
    return $68return_value.1                 ['$68return_value.1']
label 70:
    $72load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$72load_global.1']
    $82compare_op.2 = kind1 == $72load_global.1 ['$72load_global.1', '$82compare_op.2', 'kind1']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($82compare_op.2, func=bool86, args=(Var($82compare_op.2, unicode.py:365),), kws=(), vararg=None, varkwarg=None, target=None) ['$82compare_op.2', '$86pred', 'bool86']
    branch $86pred, 88, 92                   ['$86pred']
label 88:
    $90return_value.1 = cast(value=kind1)    ['$90return_value.1', 'kind1']
    return $90return_value.1                 ['$90return_value.1']
label 92:
    $92load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$92load_global.0']
    $const102.2.1 = const(str, Unexpected unicode representation in _pick_kind) ['$const102.2.1']
    $104call.3 = call $92load_global.0($const102.2.1, func=$92load_global.0, args=[Var($const102.2.1, unicode.py:369)], kws=(), vararg=None, varkwarg=None, target=None) ['$104call.3', '$92load_global.0', '$const102.2.1']
    raise $104call.3                         ['$104call.3']

2025-07-23 17:15:49,031 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,031 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,031 - DEBUG - on stmt: kind1 = arg(0, name=kind1)
2025-07-23 17:15:49,031 - DEBUG - on stmt: kind2 = arg(1, name=kind2)
2025-07-23 17:15:49,031 - DEBUG - on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:49,031 - DEBUG - on stmt: $16compare_op.2 = kind1 == $6load_global.1
2025-07-23 17:15:49,032 - DEBUG - on stmt: bool20 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,032 - DEBUG - on stmt: $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:358),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,032 - DEBUG - on stmt: branch $20pred, 22, 26
2025-07-23 17:15:49,032 - DEBUG - ==== SSA block analysis pass on 22
2025-07-23 17:15:49,032 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,032 - DEBUG - on stmt: $24return_value.1 = cast(value=kind2)
2025-07-23 17:15:49,032 - DEBUG - on stmt: return $24return_value.1
2025-07-23 17:15:49,032 - DEBUG - ==== SSA block analysis pass on 26
2025-07-23 17:15:49,032 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,033 - DEBUG - on stmt: $28load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:49,033 - DEBUG - on stmt: $38compare_op.2 = kind1 == $28load_global.1
2025-07-23 17:15:49,033 - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,033 - DEBUG - on stmt: $42pred = call bool42($38compare_op.2, func=bool42, args=(Var($38compare_op.2, unicode.py:360),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,033 - DEBUG - on stmt: branch $42pred, 44, 70
2025-07-23 17:15:49,033 - DEBUG - ==== SSA block analysis pass on 44
2025-07-23 17:15:49,033 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,033 - DEBUG - on stmt: $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,034 - DEBUG - on stmt: $56compare_op.2 = kind2 == $46load_global.1
2025-07-23 17:15:49,034 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,034 - DEBUG - on stmt: $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:361),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,034 - DEBUG - on stmt: branch $60pred, 62, 66
2025-07-23 17:15:49,034 - DEBUG - ==== SSA block analysis pass on 62
2025-07-23 17:15:49,034 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,034 - DEBUG - on stmt: $64return_value.1 = cast(value=kind2)
2025-07-23 17:15:49,034 - DEBUG - on stmt: return $64return_value.1
2025-07-23 17:15:49,035 - DEBUG - ==== SSA block analysis pass on 66
2025-07-23 17:15:49,035 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,036 - DEBUG - on stmt: $68return_value.1 = cast(value=kind1)
2025-07-23 17:15:49,036 - DEBUG - on stmt: return $68return_value.1
2025-07-23 17:15:49,037 - DEBUG - ==== SSA block analysis pass on 70
2025-07-23 17:15:49,037 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,037 - DEBUG - on stmt: $72load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,038 - DEBUG - on stmt: $82compare_op.2 = kind1 == $72load_global.1
2025-07-23 17:15:49,038 - DEBUG - on stmt: bool86 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,038 - DEBUG - on stmt: $86pred = call bool86($82compare_op.2, func=bool86, args=(Var($82compare_op.2, unicode.py:365),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,038 - DEBUG - on stmt: branch $86pred, 88, 92
2025-07-23 17:15:49,038 - DEBUG - ==== SSA block analysis pass on 88
2025-07-23 17:15:49,038 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,039 - DEBUG - on stmt: $90return_value.1 = cast(value=kind1)
2025-07-23 17:15:49,039 - DEBUG - on stmt: return $90return_value.1
2025-07-23 17:15:49,039 - DEBUG - ==== SSA block analysis pass on 92
2025-07-23 17:15:49,039 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6761970>
2025-07-23 17:15:49,039 - DEBUG - on stmt: $92load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:49,039 - DEBUG - on stmt: $const102.2.1 = const(str, Unexpected unicode representation in _pick_kind)
2025-07-23 17:15:49,040 - DEBUG - on stmt: $104call.3 = call $92load_global.0($const102.2.1, func=$92load_global.0, args=[Var($const102.2.1, unicode.py:369)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,040 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _pick_kind')
2025-07-23 17:15:49,040 - DEBUG - defs defaultdict(<class 'list'>,
            {'$104call.3': [(<numba.core.ir.Assign object at 0x000001F6E66E5CA0>,
                             92)],
             '$16compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E66E7D10>,
                                  0)],
             '$20pred': [(<numba.core.ir.Assign object at 0x000001F6E66E77D0>,
                          0)],
             '$24return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E66E71A0>,
                                    22)],
             '$28load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E66E5BB0>,
                                   26)],
             '$38compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E67607D0>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x000001F6E6760E60>,
                          26)],
             '$46load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E6762180>,
                                   44)],
             '$56compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA556600>,
                                  44)],
             '$60pred': [(<numba.core.ir.Assign object at 0x000001F6E668DDF0>,
                          44)],
             '$64return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E668F260>,
                                    62)],
             '$68return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E66F39E0>,
                                    66)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E66E5BE0>,
                                  0)],
             '$72load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E66E7860>,
                                   70)],
             '$82compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E66E6000>,
                                  70)],
             '$86pred': [(<numba.core.ir.Assign object at 0x000001F6E66E4DD0>,
                          70)],
             '$90return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E66E7B00>,
                                    88)],
             '$92load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66E4530>,
                                   92)],
             '$const102.2.1': [(<numba.core.ir.Assign object at 0x000001F6E66E72F0>,
                                92)],
             'bool20': [(<numba.core.ir.Assign object at 0x000001F6E66E62D0>,
                         0)],
             'bool42': [(<numba.core.ir.Assign object at 0x000001F6E67607A0>,
                         26)],
             'bool60': [(<numba.core.ir.Assign object at 0x000001F6E668DA30>,
                         44)],
             'bool86': [(<numba.core.ir.Assign object at 0x000001F6E66E4FE0>,
                         70)],
             'kind1': [(<numba.core.ir.Assign object at 0x000001F6E6763AD0>,
                        0)],
             'kind2': [(<numba.core.ir.Assign object at 0x000001F6E67602F0>,
                        0)]})
2025-07-23 17:15:49,041 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6761970>
2025-07-23 17:15:49,113 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=392)
           2	RESUME(arg=0, lineno=392)
           4	LOAD_FAST(arg=0, lineno=394)
           6	LOAD_CONST(arg=1, lineno=394)
           8	COMPARE_OP(arg=40, lineno=394)
          12	POP_JUMP_IF_FALSE(arg=26, lineno=394)
          14	LOAD_FAST(arg=1, lineno=394)
          16	LOAD_CONST(arg=1, lineno=394)
          18	COMPARE_OP(arg=40, lineno=394)
          22	POP_JUMP_IF_FALSE(arg=21, lineno=394)
          24	LOAD_GLOBAL(arg=1, lineno=395)
          34	LOAD_ATTR(arg=2, lineno=395)
          54	LOAD_CONST(arg=1, lineno=395)
          56	CALL(arg=1, lineno=395)
          64	RETURN_VALUE(arg=None, lineno=395)
>         66	LOAD_GLOBAL(arg=1, lineno=396)
          76	LOAD_ATTR(arg=2, lineno=396)
          96	LOAD_CONST(arg=2, lineno=396)
          98	CALL(arg=1, lineno=396)
         106	RETURN_VALUE(arg=None, lineno=396)
2025-07-23 17:15:49,114 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,114 - DEBUG - stack: []
2025-07-23 17:15:49,114 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,114 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=392)
2025-07-23 17:15:49,114 - DEBUG - stack []
2025-07-23 17:15:49,114 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=392)
2025-07-23 17:15:49,115 - DEBUG - stack []
2025-07-23 17:15:49,115 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=394)
2025-07-23 17:15:49,115 - DEBUG - stack []
2025-07-23 17:15:49,115 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=394)
2025-07-23 17:15:49,115 - DEBUG - stack ['$is_ascii14.0']
2025-07-23 17:15:49,116 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=40, lineno=394)
2025-07-23 17:15:49,116 - DEBUG - stack ['$is_ascii14.0', '$const6.1.1']
2025-07-23 17:15:49,116 - DEBUG - dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=26, lineno=394)
2025-07-23 17:15:49,116 - DEBUG - stack ['$8compare_op.2']
2025-07-23 17:15:49,116 - DEBUG - end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,116 - DEBUG - pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
2025-07-23 17:15:49,117 - DEBUG - stack: []
2025-07-23 17:15:49,117 - DEBUG - state.pc_initial: State(pc_initial=14 nstack_initial=0)
2025-07-23 17:15:49,117 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=394)
2025-07-23 17:15:49,117 - DEBUG - stack []
2025-07-23 17:15:49,117 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=394)
2025-07-23 17:15:49,117 - DEBUG - stack ['$is_ascii214.0']
2025-07-23 17:15:49,117 - DEBUG - dispatch pc=18, inst=COMPARE_OP(arg=40, lineno=394)
2025-07-23 17:15:49,117 - DEBUG - stack ['$is_ascii214.0', '$const16.1.1']
2025-07-23 17:15:49,118 - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=21, lineno=394)
2025-07-23 17:15:49,118 - DEBUG - stack ['$18compare_op.2']
2025-07-23 17:15:49,118 - DEBUG - end state. edges=[Edge(pc=24, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,118 - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=24 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
2025-07-23 17:15:49,118 - DEBUG - stack: []
2025-07-23 17:15:49,118 - DEBUG - state.pc_initial: State(pc_initial=66 nstack_initial=0)
2025-07-23 17:15:49,119 - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=1, lineno=396)
2025-07-23 17:15:49,119 - DEBUG - stack []
2025-07-23 17:15:49,119 - DEBUG - dispatch pc=76, inst=LOAD_ATTR(arg=2, lineno=396)
2025-07-23 17:15:49,119 - DEBUG - stack ['$null$66.1', '$66load_global.0']
2025-07-23 17:15:49,119 - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=2, lineno=396)
2025-07-23 17:15:49,119 - DEBUG - stack ['$null$66.1', '$76load_attr.2']
2025-07-23 17:15:49,119 - DEBUG - dispatch pc=98, inst=CALL(arg=1, lineno=396)
2025-07-23 17:15:49,120 - DEBUG - stack ['$null$66.1', '$76load_attr.2', '$const96.3.2']
2025-07-23 17:15:49,120 - DEBUG - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=396)
2025-07-23 17:15:49,120 - DEBUG - stack ['$98call.4']
2025-07-23 17:15:49,120 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,121 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
2025-07-23 17:15:49,121 - DEBUG - stack: []
2025-07-23 17:15:49,121 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=0)
2025-07-23 17:15:49,121 - DEBUG - dispatch pc=24, inst=LOAD_GLOBAL(arg=1, lineno=395)
2025-07-23 17:15:49,121 - DEBUG - stack []
2025-07-23 17:15:49,121 - DEBUG - dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=395)
2025-07-23 17:15:49,122 - DEBUG - stack ['$null$24.1', '$24load_global.0']
2025-07-23 17:15:49,122 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=395)
2025-07-23 17:15:49,122 - DEBUG - stack ['$null$24.1', '$34load_attr.2']
2025-07-23 17:15:49,122 - DEBUG - dispatch pc=56, inst=CALL(arg=1, lineno=395)
2025-07-23 17:15:49,122 - DEBUG - stack ['$null$24.1', '$34load_attr.2', '$const54.3.1']
2025-07-23 17:15:49,122 - DEBUG - dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=395)
2025-07-23 17:15:49,122 - DEBUG - stack ['$56call.4']
2025-07-23 17:15:49,123 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,123 - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=0)])
2025-07-23 17:15:49,123 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,123 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set()})
2025-07-23 17:15:49,123 - DEBUG - defmap: {}
2025-07-23 17:15:49,124 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,124 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,124 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,124 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,124 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,125 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$is_ascii14.0'}), (6, {'res': '$const6.1.1'}), (8, {'lhs': '$is_ascii14.0', 'rhs': '$const6.1.1', 'res': '$8compare_op.2'}), (12, {'pred': '$8compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 66: ()})
2025-07-23 17:15:49,125 - DEBUG - block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$is_ascii214.0'}), (16, {'res': '$const16.1.1'}), (18, {'lhs': '$is_ascii214.0', 'rhs': '$const16.1.1', 'res': '$18compare_op.2'}), (22, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: (), 66: ()})
2025-07-23 17:15:49,125 - DEBUG - block_infos State(pc_initial=24 nstack_initial=0):
AdaptBlockInfo(insts=((24, {'idx': 0, 'res': '$24load_global.0'}), (34, {'item': '$24load_global.0', 'res': '$34load_attr.2'}), (54, {'res': '$const54.3.1'}), (56, {'func': '$34load_attr.2', 'args': ['$const54.3.1'], 'kw_names': None, 'res': '$56call.4'}), (64, {'retval': '$56call.4', 'castval': '$64return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,125 - DEBUG - block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'idx': 0, 'res': '$66load_global.0'}), (76, {'item': '$66load_global.0', 'res': '$76load_attr.2'}), (96, {'res': '$const96.3.2'}), (98, {'func': '$76load_attr.2', 'args': ['$const96.3.2'], 'kw_names': None, 'res': '$98call.4'}), (106, {'retval': '$98call.4', 'castval': '$106return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,126 - DEBUG - label 0:
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8compare_op.2 = is_ascii1 == $const6.1.1 ['$8compare_op.2', '$const6.1.1', 'is_ascii1']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$12pred', '$8compare_op.2', 'bool12']
    branch $12pred, 14, 66                   ['$12pred']
label 14:
    $const16.1.1 = const(int, 1)             ['$const16.1.1']
    $18compare_op.2 = is_ascii2 == $const16.1.1 ['$18compare_op.2', '$const16.1.1', 'is_ascii2']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($18compare_op.2, func=bool22, args=(Var($18compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$22pred', 'bool22']
    branch $22pred, 24, 66                   ['$22pred']
label 24:
    $24load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>) ['$24load_global.0']
    $34load_attr.2 = getattr(value=$24load_global.0, attr=uint32) ['$24load_global.0', '$34load_attr.2']
    $const54.3.1 = const(int, 1)             ['$const54.3.1']
    $56call.4 = call $34load_attr.2($const54.3.1, func=$34load_attr.2, args=[Var($const54.3.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_attr.2', '$56call.4', '$const54.3.1']
    $64return_value.5 = cast(value=$56call.4) ['$56call.4', '$64return_value.5']
    return $64return_value.5                 ['$64return_value.5']
label 66:
    $66load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>) ['$66load_global.0']
    $76load_attr.2 = getattr(value=$66load_global.0, attr=uint32) ['$66load_global.0', '$76load_attr.2']
    $const96.3.2 = const(int, 0)             ['$const96.3.2']
    $98call.4 = call $76load_attr.2($const96.3.2, func=$76load_attr.2, args=[Var($const96.3.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_attr.2', '$98call.4', '$const96.3.2']
    $106return_value.5 = cast(value=$98call.4) ['$106return_value.5', '$98call.4']
    return $106return_value.5                ['$106return_value.5']

2025-07-23 17:15:49,136 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,137 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B1640>
2025-07-23 17:15:49,137 - DEBUG - on stmt: is_ascii1 = arg(0, name=is_ascii1)
2025-07-23 17:15:49,137 - DEBUG - on stmt: is_ascii2 = arg(1, name=is_ascii2)
2025-07-23 17:15:49,137 - DEBUG - on stmt: $const6.1.1 = const(int, 1)
2025-07-23 17:15:49,137 - DEBUG - on stmt: $8compare_op.2 = is_ascii1 == $const6.1.1
2025-07-23 17:15:49,137 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,137 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,138 - DEBUG - on stmt: branch $12pred, 14, 66
2025-07-23 17:15:49,138 - DEBUG - ==== SSA block analysis pass on 14
2025-07-23 17:15:49,138 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B1640>
2025-07-23 17:15:49,138 - DEBUG - on stmt: $const16.1.1 = const(int, 1)
2025-07-23 17:15:49,138 - DEBUG - on stmt: $18compare_op.2 = is_ascii2 == $const16.1.1
2025-07-23 17:15:49,138 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,138 - DEBUG - on stmt: $22pred = call bool22($18compare_op.2, func=bool22, args=(Var($18compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,139 - DEBUG - on stmt: branch $22pred, 24, 66
2025-07-23 17:15:49,139 - DEBUG - ==== SSA block analysis pass on 24
2025-07-23 17:15:49,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B1640>
2025-07-23 17:15:49,139 - DEBUG - on stmt: $24load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>)
2025-07-23 17:15:49,139 - DEBUG - on stmt: $34load_attr.2 = getattr(value=$24load_global.0, attr=uint32)
2025-07-23 17:15:49,139 - DEBUG - on stmt: $const54.3.1 = const(int, 1)
2025-07-23 17:15:49,139 - DEBUG - on stmt: $56call.4 = call $34load_attr.2($const54.3.1, func=$34load_attr.2, args=[Var($const54.3.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,139 - DEBUG - on stmt: $64return_value.5 = cast(value=$56call.4)
2025-07-23 17:15:49,139 - DEBUG - on stmt: return $64return_value.5
2025-07-23 17:15:49,139 - DEBUG - ==== SSA block analysis pass on 66
2025-07-23 17:15:49,139 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B1640>
2025-07-23 17:15:49,139 - DEBUG - on stmt: $66load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>)
2025-07-23 17:15:49,140 - DEBUG - on stmt: $76load_attr.2 = getattr(value=$66load_global.0, attr=uint32)
2025-07-23 17:15:49,140 - DEBUG - on stmt: $const96.3.2 = const(int, 0)
2025-07-23 17:15:49,140 - DEBUG - on stmt: $98call.4 = call $76load_attr.2($const96.3.2, func=$76load_attr.2, args=[Var($const96.3.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,140 - DEBUG - on stmt: $106return_value.5 = cast(value=$98call.4)
2025-07-23 17:15:49,140 - DEBUG - on stmt: return $106return_value.5
2025-07-23 17:15:49,140 - DEBUG - defs defaultdict(<class 'list'>,
            {'$106return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E67B0D70>,
                                     66)],
             '$12pred': [(<numba.core.ir.Assign object at 0x000001F6E6773770>,
                          0)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E6773BC0>,
                                  14)],
             '$22pred': [(<numba.core.ir.Assign object at 0x000001F6E6773E60>,
                          14)],
             '$24load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67B0080>,
                                   24)],
             '$34load_attr.2': [(<numba.core.ir.Assign object at 0x000001F6E67B01D0>,
                                 24)],
             '$56call.4': [(<numba.core.ir.Assign object at 0x000001F6E67B04D0>,
                            24)],
             '$64return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E67B05F0>,
                                    24)],
             '$66load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67B0800>,
                                   66)],
             '$76load_attr.2': [(<numba.core.ir.Assign object at 0x000001F6E67B0950>,
                                 66)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E67734D0>,
                                 0)],
             '$98call.4': [(<numba.core.ir.Assign object at 0x000001F6E67B0C50>,
                            66)],
             '$const16.1.1': [(<numba.core.ir.Assign object at 0x000001F6E6773A40>,
                               14)],
             '$const54.3.1': [(<numba.core.ir.Assign object at 0x000001F6E67B0320>,
                               24)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x000001F6E6773350>,
                              0)],
             '$const96.3.2': [(<numba.core.ir.Assign object at 0x000001F6E67B0AA0>,
                               66)],
             'bool12': [(<numba.core.ir.Assign object at 0x000001F6E6773620>,
                         0)],
             'bool22': [(<numba.core.ir.Assign object at 0x000001F6E6773D10>,
                         14)],
             'is_ascii1': [(<numba.core.ir.Assign object at 0x000001F6E670EA20>,
                            0)],
             'is_ascii2': [(<numba.core.ir.Assign object at 0x000001F6E6773110>,
                            0)]})
2025-07-23 17:15:49,141 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67B1640>
2025-07-23 17:15:49,513 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=281)
           2	RESUME(arg=0, lineno=281)
           4	LOAD_GLOBAL(arg=1, lineno=283)
          14	LOAD_FAST(arg=0, lineno=283)
          16	CALL(arg=1, lineno=283)
          24	STORE_FAST(arg=3, lineno=283)
          26	LOAD_GLOBAL(arg=3, lineno=284)
          36	LOAD_FAST(arg=0, lineno=284)
          38	LOAD_FAST(arg=3, lineno=284)
          40	LOAD_FAST(arg=1, lineno=284)
          42	LOAD_FAST(arg=2, lineno=284)
          44	CALL(arg=4, lineno=284)
          52	STORE_FAST(arg=4, lineno=284)
          54	LOAD_GLOBAL(arg=5, lineno=285)
          64	LOAD_FAST(arg=4, lineno=285)
          66	LOAD_FAST(arg=1, lineno=285)
          68	LOAD_GLOBAL(arg=7, lineno=285)
          78	LOAD_ATTR(arg=8, lineno=285)
          98	LOAD_CONST(arg=1, lineno=285)
         100	CALL(arg=1, lineno=285)
         108	CALL(arg=3, lineno=285)
         116	POP_TOP(arg=None, lineno=285)
         118	LOAD_FAST(arg=4, lineno=286)
         120	RETURN_VALUE(arg=None, lineno=286)
2025-07-23 17:15:49,513 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,514 - DEBUG - stack: []
2025-07-23 17:15:49,514 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,514 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=281)
2025-07-23 17:15:49,514 - DEBUG - stack []
2025-07-23 17:15:49,514 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=281)
2025-07-23 17:15:49,515 - DEBUG - stack []
2025-07-23 17:15:49,515 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=283)
2025-07-23 17:15:49,515 - DEBUG - stack []
2025-07-23 17:15:49,515 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=283)
2025-07-23 17:15:49,515 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:49,516 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=283)
2025-07-23 17:15:49,516 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$kind14.2']
2025-07-23 17:15:49,516 - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=3, lineno=283)
2025-07-23 17:15:49,516 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:49,516 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=284)
2025-07-23 17:15:49,517 - DEBUG - stack []
2025-07-23 17:15:49,517 - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=284)
2025-07-23 17:15:49,517 - DEBUG - stack ['$null$26.5', '$26load_global.4']
2025-07-23 17:15:49,517 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=3, lineno=284)
2025-07-23 17:15:49,517 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$kind36.6']
2025-07-23 17:15:49,517 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=284)
2025-07-23 17:15:49,517 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$kind36.6', '$char_width38.7']
2025-07-23 17:15:49,517 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=2, lineno=284)
2025-07-23 17:15:49,517 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$kind36.6', '$char_width38.7', '$length40.8']
2025-07-23 17:15:49,519 - DEBUG - dispatch pc=44, inst=CALL(arg=4, lineno=284)
2025-07-23 17:15:49,519 - DEBUG - stack ['$null$26.5', '$26load_global.4', '$kind36.6', '$char_width38.7', '$length40.8', '$is_ascii42.9']
2025-07-23 17:15:49,519 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=4, lineno=284)
2025-07-23 17:15:49,519 - DEBUG - stack ['$44call.10']
2025-07-23 17:15:49,519 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=5, lineno=285)
2025-07-23 17:15:49,519 - DEBUG - stack []
2025-07-23 17:15:49,520 - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=285)
2025-07-23 17:15:49,520 - DEBUG - stack ['$null$54.12', '$54load_global.11']
2025-07-23 17:15:49,520 - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=285)
2025-07-23 17:15:49,520 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13']
2025-07-23 17:15:49,520 - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=7, lineno=285)
2025-07-23 17:15:49,520 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13', '$length66.14']
2025-07-23 17:15:49,521 - DEBUG - dispatch pc=78, inst=LOAD_ATTR(arg=8, lineno=285)
2025-07-23 17:15:49,521 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13', '$length66.14', '$null$68.16', '$68load_global.15']
2025-07-23 17:15:49,521 - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=1, lineno=285)
2025-07-23 17:15:49,521 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13', '$length66.14', '$null$68.16', '$78load_attr.17']
2025-07-23 17:15:49,521 - DEBUG - dispatch pc=100, inst=CALL(arg=1, lineno=285)
2025-07-23 17:15:49,521 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13', '$length66.14', '$null$68.16', '$78load_attr.17', '$const98.18.1']
2025-07-23 17:15:49,522 - DEBUG - dispatch pc=108, inst=CALL(arg=3, lineno=285)
2025-07-23 17:15:49,522 - DEBUG - stack ['$null$54.12', '$54load_global.11', '$s64.13', '$length66.14', '$100call.19']
2025-07-23 17:15:49,522 - DEBUG - dispatch pc=116, inst=POP_TOP(arg=None, lineno=285)
2025-07-23 17:15:49,522 - DEBUG - stack ['$108call.20']
2025-07-23 17:15:49,522 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=4, lineno=286)
2025-07-23 17:15:49,522 - DEBUG - stack []
2025-07-23 17:15:49,522 - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=286)
2025-07-23 17:15:49,523 - DEBUG - stack ['$s118.21']
2025-07-23 17:15:49,523 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,523 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,523 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:49,523 - DEBUG - defmap: {}
2025-07-23 17:15:49,523 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,523 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,523 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,524 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,524 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,524 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$kind14.2'}), (16, {'func': '$4load_global.0', 'args': ['$kind14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'value': '$16call.3'}), (26, {'idx': 1, 'res': '$26load_global.4'}), (36, {'res': '$kind36.6'}), (38, {'res': '$char_width38.7'}), (40, {'res': '$length40.8'}), (42, {'res': '$is_ascii42.9'}), (44, {'func': '$26load_global.4', 'args': ['$kind36.6', '$char_width38.7', '$length40.8', '$is_ascii42.9'], 'kw_names': None, 'res': '$44call.10'}), (52, {'value': '$44call.10'}), (54, {'idx': 2, 'res': '$54load_global.11'}), (64, {'res': '$s64.13'}), (66, {'res': '$length66.14'}), (68, {'idx': 3, 'res': '$68load_global.15'}), (78, {'item': '$68load_global.15', 'res': '$78load_attr.17'}), (98, {'res': '$const98.18.1'}), (100, {'func': '$78load_attr.17', 'args': ['$const98.18.1'], 'kw_names': None, 'res': '$100call.19'}), (108, {'func': '$54load_global.11', 'args': ['$s64.13', '$length66.14', '$100call.19'], 'kw_names': None, 'res': '$108call.20'}), (118, {'res': '$s118.21'}), (120, {'retval': '$s118.21', 'castval': '$120return_value.22'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,525 - DEBUG - label 0:
    kind = arg(0, name=kind)                 ['kind']
    length = arg(1, name=length)             ['length']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    $4load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>) ['$4load_global.0']
    char_width = call $4load_global.0(kind, func=$4load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'char_width', 'kind']
    $26load_global.4 = global(_malloc_string: <intrinsic _malloc_string>) ['$26load_global.4']
    s = call $26load_global.4(kind, char_width, length, is_ascii, func=$26load_global.4, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.4', 'char_width', 'is_ascii', 'kind', 'length', 's']
    $54load_global.11 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$54load_global.11']
    $68load_global.15 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>) ['$68load_global.15']
    $78load_attr.17 = getattr(value=$68load_global.15, attr=uint32) ['$68load_global.15', '$78load_attr.17']
    $const98.18.1 = const(int, 0)            ['$const98.18.1']
    $100call.19 = call $78load_attr.17($const98.18.1, func=$78load_attr.17, args=[Var($const98.18.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call.19', '$78load_attr.17', '$const98.18.1']
    $108call.20 = call $54load_global.11(s, length, $100call.19, func=$54load_global.11, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($100call.19, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call.19', '$108call.20', '$54load_global.11', 'length', 's']
    $120return_value.22 = cast(value=s)      ['$120return_value.22', 's']
    return $120return_value.22               ['$120return_value.22']

2025-07-23 17:15:49,529 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,529 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63EAE0>
2025-07-23 17:15:49,529 - DEBUG - on stmt: kind = arg(0, name=kind)
2025-07-23 17:15:49,529 - DEBUG - on stmt: length = arg(1, name=length)
2025-07-23 17:15:49,530 - DEBUG - on stmt: is_ascii = arg(2, name=is_ascii)
2025-07-23 17:15:49,530 - DEBUG - on stmt: $4load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:49,530 - DEBUG - on stmt: char_width = call $4load_global.0(kind, func=$4load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,530 - DEBUG - on stmt: $26load_global.4 = global(_malloc_string: <intrinsic _malloc_string>)
2025-07-23 17:15:49,530 - DEBUG - on stmt: s = call $26load_global.4(kind, char_width, length, is_ascii, func=$26load_global.4, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,530 - DEBUG - on stmt: $54load_global.11 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:49,530 - DEBUG - on stmt: $68load_global.15 = global(np: <module 'numpy' from 'C:\\Users\\ASTU-PG\\Amharic-ecommerce-data-extractor\\.amhenv\\Lib\\site-packages\\numpy\\__init__.py'>)
2025-07-23 17:15:49,531 - DEBUG - on stmt: $78load_attr.17 = getattr(value=$68load_global.15, attr=uint32)
2025-07-23 17:15:49,531 - DEBUG - on stmt: $const98.18.1 = const(int, 0)
2025-07-23 17:15:49,531 - DEBUG - on stmt: $100call.19 = call $78load_attr.17($const98.18.1, func=$78load_attr.17, args=[Var($const98.18.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,531 - DEBUG - on stmt: $108call.20 = call $54load_global.11(s, length, $100call.19, func=$54load_global.11, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($100call.19, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,531 - DEBUG - on stmt: $120return_value.22 = cast(value=s)
2025-07-23 17:15:49,531 - DEBUG - on stmt: return $120return_value.22
2025-07-23 17:15:49,531 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100call.19': [(<numba.core.ir.Assign object at 0x000001F6E66E5820>,
                              0)],
             '$108call.20': [(<numba.core.ir.Assign object at 0x000001F6E66E9910>,
                              0)],
             '$120return_value.22': [(<numba.core.ir.Assign object at 0x000001F6E670DA90>,
                                      0)],
             '$26load_global.4': [(<numba.core.ir.Assign object at 0x000001F6E66E6E10>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66E5B50>,
                                  0)],
             '$54load_global.11': [(<numba.core.ir.Assign object at 0x000001F6E668E300>,
                                    0)],
             '$68load_global.15': [(<numba.core.ir.Assign object at 0x000001F6E668E4E0>,
                                    0)],
             '$78load_attr.17': [(<numba.core.ir.Assign object at 0x000001F6E66E5430>,
                                  0)],
             '$const98.18.1': [(<numba.core.ir.Assign object at 0x000001F6E66E51F0>,
                                0)],
             'char_width': [(<numba.core.ir.Assign object at 0x000001F6E66E53A0>,
                             0)],
             'is_ascii': [(<numba.core.ir.Assign object at 0x000001F6E66E64B0>,
                           0)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6E66E4E60>, 0)],
             'length': [(<numba.core.ir.Assign object at 0x000001F6E66E7230>,
                         0)],
             's': [(<numba.core.ir.Assign object at 0x000001F6E66E7170>, 0)]})
2025-07-23 17:15:49,532 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA63EAE0>
2025-07-23 17:15:49,538 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=400)
           2	RESUME(arg=0, lineno=400)
           4	LOAD_FAST(arg=0, lineno=402)
           6	LOAD_GLOBAL(arg=0, lineno=402)
          16	COMPARE_OP(arg=40, lineno=402)
          20	POP_JUMP_IF_FALSE(arg=1, lineno=402)
          22	RETURN_CONST(arg=1, lineno=403)
>         24	LOAD_FAST(arg=0, lineno=404)
          26	LOAD_GLOBAL(arg=2, lineno=404)
          36	COMPARE_OP(arg=40, lineno=404)
          40	POP_JUMP_IF_FALSE(arg=1, lineno=404)
          42	RETURN_CONST(arg=2, lineno=405)
>         44	LOAD_FAST(arg=0, lineno=406)
          46	LOAD_GLOBAL(arg=4, lineno=406)
          56	COMPARE_OP(arg=40, lineno=406)
          60	POP_JUMP_IF_FALSE(arg=1, lineno=406)
          62	RETURN_CONST(arg=3, lineno=407)
>         64	LOAD_GLOBAL(arg=7, lineno=409)
          74	LOAD_CONST(arg=4, lineno=409)
          76	CALL(arg=1, lineno=409)
          84	RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:49,538 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,538 - DEBUG - stack: []
2025-07-23 17:15:49,538 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,538 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=400)
2025-07-23 17:15:49,538 - DEBUG - stack []
2025-07-23 17:15:49,538 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=400)
2025-07-23 17:15:49,538 - DEBUG - stack []
2025-07-23 17:15:49,538 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=402)
2025-07-23 17:15:49,538 - DEBUG - stack []
2025-07-23 17:15:49,539 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=402)
2025-07-23 17:15:49,539 - DEBUG - stack ['$kind4.0']
2025-07-23 17:15:49,539 - DEBUG - dispatch pc=16, inst=COMPARE_OP(arg=40, lineno=402)
2025-07-23 17:15:49,539 - DEBUG - stack ['$kind4.0', '$6load_global.1']
2025-07-23 17:15:49,539 - DEBUG - dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=1, lineno=402)
2025-07-23 17:15:49,539 - DEBUG - stack ['$16compare_op.2']
2025-07-23 17:15:49,539 - DEBUG - end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=24, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,539 - DEBUG - pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:49,539 - DEBUG - stack: []
2025-07-23 17:15:49,540 - DEBUG - state.pc_initial: State(pc_initial=22 nstack_initial=0)
2025-07-23 17:15:49,540 - DEBUG - dispatch pc=22, inst=RETURN_CONST(arg=1, lineno=403)
2025-07-23 17:15:49,540 - DEBUG - stack []
2025-07-23 17:15:49,540 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,540 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:49,540 - DEBUG - stack: []
2025-07-23 17:15:49,540 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=0)
2025-07-23 17:15:49,540 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=404)
2025-07-23 17:15:49,541 - DEBUG - stack []
2025-07-23 17:15:49,541 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=404)
2025-07-23 17:15:49,541 - DEBUG - stack ['$kind24.0']
2025-07-23 17:15:49,541 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=404)
2025-07-23 17:15:49,541 - DEBUG - stack ['$kind24.0', '$26load_global.1']
2025-07-23 17:15:49,542 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=1, lineno=404)
2025-07-23 17:15:49,542 - DEBUG - stack ['$36compare_op.2']
2025-07-23 17:15:49,542 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,542 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:49,542 - DEBUG - stack: []
2025-07-23 17:15:49,542 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:49,542 - DEBUG - dispatch pc=42, inst=RETURN_CONST(arg=2, lineno=405)
2025-07-23 17:15:49,542 - DEBUG - stack []
2025-07-23 17:15:49,542 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,543 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:49,543 - DEBUG - stack: []
2025-07-23 17:15:49,543 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-23 17:15:49,543 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=406)
2025-07-23 17:15:49,543 - DEBUG - stack []
2025-07-23 17:15:49,543 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=406)
2025-07-23 17:15:49,543 - DEBUG - stack ['$kind44.0']
2025-07-23 17:15:49,543 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=40, lineno=406)
2025-07-23 17:15:49,543 - DEBUG - stack ['$kind44.0', '$46load_global.1']
2025-07-23 17:15:49,544 - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=1, lineno=406)
2025-07-23 17:15:49,544 - DEBUG - stack ['$56compare_op.2']
2025-07-23 17:15:49,544 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=64, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,544 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:49,544 - DEBUG - stack: []
2025-07-23 17:15:49,544 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2025-07-23 17:15:49,544 - DEBUG - dispatch pc=62, inst=RETURN_CONST(arg=3, lineno=407)
2025-07-23 17:15:49,544 - DEBUG - stack []
2025-07-23 17:15:49,545 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,545 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:49,545 - DEBUG - stack: []
2025-07-23 17:15:49,545 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-07-23 17:15:49,545 - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=7, lineno=409)
2025-07-23 17:15:49,545 - DEBUG - stack []
2025-07-23 17:15:49,545 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=409)
2025-07-23 17:15:49,545 - DEBUG - stack ['$null$64.1', '$64load_global.0']
2025-07-23 17:15:49,545 - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=409)
2025-07-23 17:15:49,546 - DEBUG - stack ['$null$64.1', '$64load_global.0', '$const74.2.4']
2025-07-23 17:15:49,546 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:49,546 - DEBUG - stack ['$76call.3']
2025-07-23 17:15:49,546 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,546 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,546 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set()})
2025-07-23 17:15:49,546 - DEBUG - defmap: {}
2025-07-23 17:15:49,546 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,547 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,547 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,547 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,547 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,547 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind4.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (16, {'lhs': '$kind4.0', 'rhs': '$6load_global.1', 'res': '$16compare_op.2'}), (20, {'pred': '$16compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 24: ()})
2025-07-23 17:15:49,547 - DEBUG - block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'retval': '$const22.0', 'castval': '$22return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,547 - DEBUG - block_infos State(pc_initial=24 nstack_initial=0):
AdaptBlockInfo(insts=((24, {'res': '$kind24.0'}), (26, {'idx': 1, 'res': '$26load_global.1'}), (36, {'lhs': '$kind24.0', 'rhs': '$26load_global.1', 'res': '$36compare_op.2'}), (40, {'pred': '$36compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 44: ()})
2025-07-23 17:15:49,547 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'retval': '$const42.0', 'castval': '$42return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,548 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$kind44.0'}), (46, {'idx': 2, 'res': '$46load_global.1'}), (56, {'lhs': '$kind44.0', 'rhs': '$46load_global.1', 'res': '$56compare_op.2'}), (60, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 64: ()})
2025-07-23 17:15:49,548 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'retval': '$const62.0', 'castval': '$62return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,548 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'idx': 3, 'res': '$64load_global.0'}), (74, {'res': '$const74.2.4'}), (76, {'func': '$64load_global.0', 'args': ['$const74.2.4'], 'kw_names': None, 'res': '$76call.3'}), (84, {'exc': '$76call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,549 - DEBUG - label 0:
    kind = arg(0, name=kind)                 ['kind']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $16compare_op.2 = kind == $6load_global.1 ['$16compare_op.2', '$6load_global.1', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 24                   ['$20pred']
label 22:
    $const22.0 = const(int, 1)               ['$const22.0']
    $22return_const.1 = cast(value=$const22.0) ['$22return_const.1', '$const22.0']
    return $22return_const.1                 ['$22return_const.1']
label 24:
    $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$26load_global.1']
    $36compare_op.2 = kind == $26load_global.1 ['$26load_global.1', '$36compare_op.2', 'kind']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.2', '$40pred', 'bool40']
    branch $40pred, 42, 44                   ['$40pred']
label 42:
    $const42.0 = const(int, 2)               ['$const42.0']
    $42return_const.1 = cast(value=$const42.0) ['$42return_const.1', '$const42.0']
    return $42return_const.1                 ['$42return_const.1']
label 44:
    $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$46load_global.1']
    $56compare_op.2 = kind == $46load_global.1 ['$46load_global.1', '$56compare_op.2', 'kind']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$60pred', 'bool60']
    branch $60pred, 62, 64                   ['$60pred']
label 62:
    $const62.0 = const(int, 4)               ['$const62.0']
    $62return_const.1 = cast(value=$const62.0) ['$62return_const.1', '$const62.0']
    return $62return_const.1                 ['$62return_const.1']
label 64:
    $64load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$64load_global.0']
    $const74.2.4 = const(str, Unexpected unicode encoding encountered) ['$const74.2.4']
    $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.0', '$76call.3', '$const74.2.4']
    raise $76call.3                          ['$76call.3']

2025-07-23 17:15:49,554 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,555 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,555 - DEBUG - on stmt: kind = arg(0, name=kind)
2025-07-23 17:15:49,555 - DEBUG - on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:49,555 - DEBUG - on stmt: $16compare_op.2 = kind == $6load_global.1
2025-07-23 17:15:49,555 - DEBUG - on stmt: bool20 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,555 - DEBUG - on stmt: $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,555 - DEBUG - on stmt: branch $20pred, 22, 24
2025-07-23 17:15:49,555 - DEBUG - ==== SSA block analysis pass on 22
2025-07-23 17:15:49,556 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,556 - DEBUG - on stmt: $const22.0 = const(int, 1)
2025-07-23 17:15:49,556 - DEBUG - on stmt: $22return_const.1 = cast(value=$const22.0)
2025-07-23 17:15:49,556 - DEBUG - on stmt: return $22return_const.1
2025-07-23 17:15:49,556 - DEBUG - ==== SSA block analysis pass on 24
2025-07-23 17:15:49,556 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,556 - DEBUG - on stmt: $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:49,556 - DEBUG - on stmt: $36compare_op.2 = kind == $26load_global.1
2025-07-23 17:15:49,557 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,557 - DEBUG - on stmt: $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,557 - DEBUG - on stmt: branch $40pred, 42, 44
2025-07-23 17:15:49,557 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:49,557 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,557 - DEBUG - on stmt: $const42.0 = const(int, 2)
2025-07-23 17:15:49,557 - DEBUG - on stmt: $42return_const.1 = cast(value=$const42.0)
2025-07-23 17:15:49,557 - DEBUG - on stmt: return $42return_const.1
2025-07-23 17:15:49,557 - DEBUG - ==== SSA block analysis pass on 44
2025-07-23 17:15:49,558 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,558 - DEBUG - on stmt: $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,558 - DEBUG - on stmt: $56compare_op.2 = kind == $46load_global.1
2025-07-23 17:15:49,558 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,558 - DEBUG - on stmt: $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,558 - DEBUG - on stmt: branch $60pred, 62, 64
2025-07-23 17:15:49,558 - DEBUG - ==== SSA block analysis pass on 62
2025-07-23 17:15:49,558 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,558 - DEBUG - on stmt: $const62.0 = const(int, 4)
2025-07-23 17:15:49,558 - DEBUG - on stmt: $62return_const.1 = cast(value=$const62.0)
2025-07-23 17:15:49,558 - DEBUG - on stmt: return $62return_const.1
2025-07-23 17:15:49,558 - DEBUG - ==== SSA block analysis pass on 64
2025-07-23 17:15:49,558 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63F170>
2025-07-23 17:15:49,559 - DEBUG - on stmt: $64load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:49,559 - DEBUG - on stmt: $const74.2.4 = const(str, Unexpected unicode encoding encountered)
2025-07-23 17:15:49,559 - DEBUG - on stmt: $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,559 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode encoding encountered')
2025-07-23 17:15:49,559 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA625550>,
                                  0)],
             '$20pred': [(<numba.core.ir.Assign object at 0x000001F6DA626DB0>,
                          0)],
             '$22return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA625760>,
                                    22)],
             '$26load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA627E00>,
                                   24)],
             '$36compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA626630>,
                                  24)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6DA625C40>,
                          24)],
             '$42return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA625AF0>,
                                    42)],
             '$46load_global.1': [(<numba.core.ir.Assign object at 0x000001F6DA624C50>,
                                   44)],
             '$56compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6DA625520>,
                                  44)],
             '$60pred': [(<numba.core.ir.Assign object at 0x000001F6DA626B10>,
                          44)],
             '$62return_const.1': [(<numba.core.ir.Assign object at 0x000001F6DA625BB0>,
                                    62)],
             '$64load_global.0': [(<numba.core.ir.Assign object at 0x000001F6DA626F30>,
                                   64)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E670E900>,
                                  0)],
             '$76call.3': [(<numba.core.ir.Assign object at 0x000001F6DA626EA0>,
                            64)],
             '$const22.0': [(<numba.core.ir.Assign object at 0x000001F6DA626900>,
                             22)],
             '$const42.0': [(<numba.core.ir.Assign object at 0x000001F6DA626F00>,
                             42)],
             '$const62.0': [(<numba.core.ir.Assign object at 0x000001F6DA6269F0>,
                             62)],
             '$const74.2.4': [(<numba.core.ir.Assign object at 0x000001F6DA624920>,
                               64)],
             'bool20': [(<numba.core.ir.Assign object at 0x000001F6DA6260F0>,
                         0)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6DA624830>,
                         24)],
             'bool60': [(<numba.core.ir.Assign object at 0x000001F6DA625C10>,
                         44)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6E66E7F80>,
                       0)]})
2025-07-23 17:15:49,560 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6DA63F170>
2025-07-23 17:15:49,612 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=336)
           2	RESUME(arg=0, lineno=336)
           4	LOAD_FAST(arg=0, lineno=344)
           6	LOAD_ATTR(arg=0, lineno=344)
          26	LOAD_GLOBAL(arg=2, lineno=344)
          36	COMPARE_OP(arg=40, lineno=344)
          40	POP_JUMP_IF_FALSE(arg=24, lineno=344)
          42	LOAD_GLOBAL(arg=5, lineno=345)
          52	LOAD_FAST(arg=0, lineno=345)
          54	LOAD_ATTR(arg=6, lineno=345)
          74	LOAD_FAST(arg=1, lineno=345)
          76	LOAD_FAST(arg=2, lineno=345)
          78	CALL(arg=3, lineno=345)
          86	POP_TOP(arg=None, lineno=345)
          88	RETURN_CONST(arg=0, lineno=345)
>         90	LOAD_FAST(arg=0, lineno=346)
          92	LOAD_ATTR(arg=0, lineno=346)
         112	LOAD_GLOBAL(arg=8, lineno=346)
         122	COMPARE_OP(arg=40, lineno=346)
         126	POP_JUMP_IF_FALSE(arg=24, lineno=346)
         128	LOAD_GLOBAL(arg=11, lineno=347)
         138	LOAD_FAST(arg=0, lineno=347)
         140	LOAD_ATTR(arg=6, lineno=347)
         160	LOAD_FAST(arg=1, lineno=347)
         162	LOAD_FAST(arg=2, lineno=347)
         164	CALL(arg=3, lineno=347)
         172	POP_TOP(arg=None, lineno=347)
         174	RETURN_CONST(arg=0, lineno=347)
>        176	LOAD_FAST(arg=0, lineno=348)
         178	LOAD_ATTR(arg=0, lineno=348)
         198	LOAD_GLOBAL(arg=12, lineno=348)
         208	COMPARE_OP(arg=40, lineno=348)
         212	POP_JUMP_IF_FALSE(arg=24, lineno=348)
         214	LOAD_GLOBAL(arg=15, lineno=349)
         224	LOAD_FAST(arg=0, lineno=349)
         226	LOAD_ATTR(arg=6, lineno=349)
         246	LOAD_FAST(arg=1, lineno=349)
         248	LOAD_FAST(arg=2, lineno=349)
         250	CALL(arg=3, lineno=349)
         258	POP_TOP(arg=None, lineno=349)
         260	RETURN_CONST(arg=0, lineno=349)
>        262	LOAD_GLOBAL(arg=17, lineno=351)
         272	LOAD_CONST(arg=1, lineno=352)
         274	CALL(arg=1, lineno=351)
         282	RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:49,612 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,613 - DEBUG - stack: []
2025-07-23 17:15:49,613 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,613 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=336)
2025-07-23 17:15:49,613 - DEBUG - stack []
2025-07-23 17:15:49,614 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=336)
2025-07-23 17:15:49,614 - DEBUG - stack []
2025-07-23 17:15:49,614 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=344)
2025-07-23 17:15:49,614 - DEBUG - stack []
2025-07-23 17:15:49,615 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=344)
2025-07-23 17:15:49,615 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:49,615 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=344)
2025-07-23 17:15:49,615 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:49,615 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=344)
2025-07-23 17:15:49,616 - DEBUG - stack ['$6load_attr.1', '$26load_global.2']
2025-07-23 17:15:49,616 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=24, lineno=344)
2025-07-23 17:15:49,616 - DEBUG - stack ['$36compare_op.3']
2025-07-23 17:15:49,616 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=90, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,616 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:49,617 - DEBUG - stack: []
2025-07-23 17:15:49,617 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:49,617 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=345)
2025-07-23 17:15:49,617 - DEBUG - stack []
2025-07-23 17:15:49,617 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=345)
2025-07-23 17:15:49,617 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:15:49,618 - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=345)
2025-07-23 17:15:49,618 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$a52.2']
2025-07-23 17:15:49,618 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=345)
2025-07-23 17:15:49,618 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3']
2025-07-23 17:15:49,618 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=345)
2025-07-23 17:15:49,618 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4']
2025-07-23 17:15:49,618 - DEBUG - dispatch pc=78, inst=CALL(arg=3, lineno=345)
2025-07-23 17:15:49,619 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4', '$ch76.5']
2025-07-23 17:15:49,619 - DEBUG - dispatch pc=86, inst=POP_TOP(arg=None, lineno=345)
2025-07-23 17:15:49,619 - DEBUG - stack ['$78call.6']
2025-07-23 17:15:49,619 - DEBUG - dispatch pc=88, inst=RETURN_CONST(arg=0, lineno=345)
2025-07-23 17:15:49,619 - DEBUG - stack []
2025-07-23 17:15:49,620 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,620 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:49,620 - DEBUG - stack: []
2025-07-23 17:15:49,621 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-23 17:15:49,621 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=346)
2025-07-23 17:15:49,621 - DEBUG - stack []
2025-07-23 17:15:49,621 - DEBUG - dispatch pc=92, inst=LOAD_ATTR(arg=0, lineno=346)
2025-07-23 17:15:49,621 - DEBUG - stack ['$a90.0']
2025-07-23 17:15:49,621 - DEBUG - dispatch pc=112, inst=LOAD_GLOBAL(arg=8, lineno=346)
2025-07-23 17:15:49,622 - DEBUG - stack ['$92load_attr.1']
2025-07-23 17:15:49,622 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=40, lineno=346)
2025-07-23 17:15:49,622 - DEBUG - stack ['$92load_attr.1', '$112load_global.2']
2025-07-23 17:15:49,622 - DEBUG - dispatch pc=126, inst=POP_JUMP_IF_FALSE(arg=24, lineno=346)
2025-07-23 17:15:49,622 - DEBUG - stack ['$122compare_op.3']
2025-07-23 17:15:49,622 - DEBUG - end state. edges=[Edge(pc=128, stack=(), blockstack=(), npush=0), Edge(pc=176, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,623 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:49,623 - DEBUG - stack: []
2025-07-23 17:15:49,623 - DEBUG - state.pc_initial: State(pc_initial=128 nstack_initial=0)
2025-07-23 17:15:49,623 - DEBUG - dispatch pc=128, inst=LOAD_GLOBAL(arg=11, lineno=347)
2025-07-23 17:15:49,623 - DEBUG - stack []
2025-07-23 17:15:49,623 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=347)
2025-07-23 17:15:49,623 - DEBUG - stack ['$null$128.1', '$128load_global.0']
2025-07-23 17:15:49,623 - DEBUG - dispatch pc=140, inst=LOAD_ATTR(arg=6, lineno=347)
2025-07-23 17:15:49,623 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$a138.2']
2025-07-23 17:15:49,624 - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=1, lineno=347)
2025-07-23 17:15:49,624 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3']
2025-07-23 17:15:49,624 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=347)
2025-07-23 17:15:49,624 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4']
2025-07-23 17:15:49,624 - DEBUG - dispatch pc=164, inst=CALL(arg=3, lineno=347)
2025-07-23 17:15:49,624 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4', '$ch162.5']
2025-07-23 17:15:49,624 - DEBUG - dispatch pc=172, inst=POP_TOP(arg=None, lineno=347)
2025-07-23 17:15:49,624 - DEBUG - stack ['$164call.6']
2025-07-23 17:15:49,624 - DEBUG - dispatch pc=174, inst=RETURN_CONST(arg=0, lineno=347)
2025-07-23 17:15:49,625 - DEBUG - stack []
2025-07-23 17:15:49,625 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,625 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:49,625 - DEBUG - stack: []
2025-07-23 17:15:49,625 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2025-07-23 17:15:49,625 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=0, lineno=348)
2025-07-23 17:15:49,625 - DEBUG - stack []
2025-07-23 17:15:49,625 - DEBUG - dispatch pc=178, inst=LOAD_ATTR(arg=0, lineno=348)
2025-07-23 17:15:49,625 - DEBUG - stack ['$a176.0']
2025-07-23 17:15:49,626 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=12, lineno=348)
2025-07-23 17:15:49,626 - DEBUG - stack ['$178load_attr.1']
2025-07-23 17:15:49,626 - DEBUG - dispatch pc=208, inst=COMPARE_OP(arg=40, lineno=348)
2025-07-23 17:15:49,626 - DEBUG - stack ['$178load_attr.1', '$198load_global.2']
2025-07-23 17:15:49,626 - DEBUG - dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=24, lineno=348)
2025-07-23 17:15:49,626 - DEBUG - stack ['$208compare_op.3']
2025-07-23 17:15:49,626 - DEBUG - end state. edges=[Edge(pc=214, stack=(), blockstack=(), npush=0), Edge(pc=262, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,626 - DEBUG - pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:49,627 - DEBUG - stack: []
2025-07-23 17:15:49,627 - DEBUG - state.pc_initial: State(pc_initial=214 nstack_initial=0)
2025-07-23 17:15:49,627 - DEBUG - dispatch pc=214, inst=LOAD_GLOBAL(arg=15, lineno=349)
2025-07-23 17:15:49,627 - DEBUG - stack []
2025-07-23 17:15:49,627 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=349)
2025-07-23 17:15:49,627 - DEBUG - stack ['$null$214.1', '$214load_global.0']
2025-07-23 17:15:49,627 - DEBUG - dispatch pc=226, inst=LOAD_ATTR(arg=6, lineno=349)
2025-07-23 17:15:49,627 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$a224.2']
2025-07-23 17:15:49,627 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=1, lineno=349)
2025-07-23 17:15:49,627 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3']
2025-07-23 17:15:49,628 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=2, lineno=349)
2025-07-23 17:15:49,628 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4']
2025-07-23 17:15:49,628 - DEBUG - dispatch pc=250, inst=CALL(arg=3, lineno=349)
2025-07-23 17:15:49,628 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4', '$ch248.5']
2025-07-23 17:15:49,628 - DEBUG - dispatch pc=258, inst=POP_TOP(arg=None, lineno=349)
2025-07-23 17:15:49,628 - DEBUG - stack ['$250call.6']
2025-07-23 17:15:49,628 - DEBUG - dispatch pc=260, inst=RETURN_CONST(arg=0, lineno=349)
2025-07-23 17:15:49,628 - DEBUG - stack []
2025-07-23 17:15:49,628 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,629 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:49,629 - DEBUG - stack: []
2025-07-23 17:15:49,629 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=0)
2025-07-23 17:15:49,629 - DEBUG - dispatch pc=262, inst=LOAD_GLOBAL(arg=17, lineno=351)
2025-07-23 17:15:49,629 - DEBUG - stack []
2025-07-23 17:15:49,630 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=1, lineno=352)
2025-07-23 17:15:49,630 - DEBUG - stack ['$null$262.1', '$262load_global.0']
2025-07-23 17:15:49,630 - DEBUG - dispatch pc=274, inst=CALL(arg=1, lineno=351)
2025-07-23 17:15:49,630 - DEBUG - stack ['$null$262.1', '$262load_global.0', '$const272.2.1']
2025-07-23 17:15:49,630 - DEBUG - dispatch pc=282, inst=RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:49,630 - DEBUG - stack ['$274call.3']
2025-07-23 17:15:49,630 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,630 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,631 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=262 nstack_initial=0): set()})
2025-07-23 17:15:49,631 - DEBUG - defmap: {}
2025-07-23 17:15:49,631 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,631 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,631 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,631 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,631 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'idx': 1, 'res': '$26load_global.2'}), (36, {'lhs': '$6load_attr.1', 'rhs': '$26load_global.2', 'res': '$36compare_op.3'}), (40, {'pred': '$36compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 90: ()})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 2, 'res': '$42load_global.0'}), (52, {'res': '$a52.2'}), (54, {'item': '$a52.2', 'res': '$54load_attr.3'}), (74, {'res': '$i74.4'}), (76, {'res': '$ch76.5'}), (78, {'func': '$42load_global.0', 'args': ['$54load_attr.3', '$i74.4', '$ch76.5'], 'kw_names': None, 'res': '$78call.6'}), (88, {'retval': '$const88.7', 'castval': '$88return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$a90.0'}), (92, {'item': '$a90.0', 'res': '$92load_attr.1'}), (112, {'idx': 4, 'res': '$112load_global.2'}), (122, {'lhs': '$92load_attr.1', 'rhs': '$112load_global.2', 'res': '$122compare_op.3'}), (126, {'pred': '$122compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: (), 176: ()})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'idx': 5, 'res': '$128load_global.0'}), (138, {'res': '$a138.2'}), (140, {'item': '$a138.2', 'res': '$140load_attr.3'}), (160, {'res': '$i160.4'}), (162, {'res': '$ch162.5'}), (164, {'func': '$128load_global.0', 'args': ['$140load_attr.3', '$i160.4', '$ch162.5'], 'kw_names': None, 'res': '$164call.6'}), (174, {'retval': '$const174.7', 'castval': '$174return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$a176.0'}), (178, {'item': '$a176.0', 'res': '$178load_attr.1'}), (198, {'idx': 6, 'res': '$198load_global.2'}), (208, {'lhs': '$178load_attr.1', 'rhs': '$198load_global.2', 'res': '$208compare_op.3'}), (212, {'pred': '$208compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: (), 262: ()})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'idx': 7, 'res': '$214load_global.0'}), (224, {'res': '$a224.2'}), (226, {'item': '$a224.2', 'res': '$226load_attr.3'}), (246, {'res': '$i246.4'}), (248, {'res': '$ch248.5'}), (250, {'func': '$214load_global.0', 'args': ['$226load_attr.3', '$i246.4', '$ch248.5'], 'kw_names': None, 'res': '$250call.6'}), (260, {'retval': '$const260.7', 'castval': '$260return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,632 - DEBUG - block_infos State(pc_initial=262 nstack_initial=0):
AdaptBlockInfo(insts=((262, {'idx': 8, 'res': '$262load_global.0'}), (272, {'res': '$const272.2.1'}), (274, {'func': '$262load_global.0', 'args': ['$const272.2.1'], 'kw_names': None, 'res': '$274call.3'}), (282, {'exc': '$274call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,633 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$26load_global.2']
    $36compare_op.3 = $6load_attr.1 == $26load_global.2 ['$26load_global.2', '$36compare_op.3', '$6load_attr.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 90                   ['$40pred']
label 42:
    $42load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$42load_global.0']
    $54load_attr.3 = getattr(value=a, attr=_data) ['$54load_attr.3', 'a']
    $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$54load_attr.3', '$78call.6', 'ch', 'i']
    $const88.7 = const(NoneType, None)       ['$const88.7']
    $88return_const.8 = cast(value=$const88.7) ['$88return_const.8', '$const88.7']
    return $88return_const.8                 ['$88return_const.8']
label 90:
    $92load_attr.1 = getattr(value=a, attr=_kind) ['$92load_attr.1', 'a']
    $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$112load_global.2']
    $122compare_op.3 = $92load_attr.1 == $112load_global.2 ['$112load_global.2', '$122compare_op.3', '$92load_attr.1']
    bool126 = global(bool: <class 'bool'>)   ['bool126']
    $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.3', '$126pred', 'bool126']
    branch $126pred, 128, 176                ['$126pred']
label 128:
    $128load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$128load_global.0']
    $140load_attr.3 = getattr(value=a, attr=_data) ['$140load_attr.3', 'a']
    $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_global.0', '$140load_attr.3', '$164call.6', 'ch', 'i']
    $const174.7 = const(NoneType, None)      ['$const174.7']
    $174return_const.8 = cast(value=$const174.7) ['$174return_const.8', '$const174.7']
    return $174return_const.8                ['$174return_const.8']
label 176:
    $178load_attr.1 = getattr(value=a, attr=_kind) ['$178load_attr.1', 'a']
    $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$198load_global.2']
    $208compare_op.3 = $178load_attr.1 == $198load_global.2 ['$178load_attr.1', '$198load_global.2', '$208compare_op.3']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$208compare_op.3', '$212pred', 'bool212']
    branch $212pred, 214, 262                ['$212pred']
label 214:
    $214load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$214load_global.0']
    $226load_attr.3 = getattr(value=a, attr=_data) ['$226load_attr.3', 'a']
    $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_global.0', '$226load_attr.3', '$250call.6', 'ch', 'i']
    $const260.7 = const(NoneType, None)      ['$const260.7']
    $260return_const.8 = cast(value=$const260.7) ['$260return_const.8', '$const260.7']
    return $260return_const.8                ['$260return_const.8']
label 262:
    $262load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$262load_global.0']
    $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const272.2.1']
    $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$262load_global.0', '$274call.3', '$const272.2.1']
    raise $274call.3                         ['$274call.3']

2025-07-23 17:15:49,640 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,641 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,641 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:49,641 - DEBUG - on stmt: i = arg(1, name=i)
2025-07-23 17:15:49,641 - DEBUG - on stmt: ch = arg(2, name=ch)
2025-07-23 17:15:49,642 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,642 - DEBUG - on stmt: $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:49,642 - DEBUG - on stmt: $36compare_op.3 = $6load_attr.1 == $26load_global.2
2025-07-23 17:15:49,643 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,643 - DEBUG - on stmt: $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,643 - DEBUG - on stmt: branch $40pred, 42, 90
2025-07-23 17:15:49,643 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:49,643 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,644 - DEBUG - on stmt: $42load_global.0 = global(set_uint8: <intrinsic set_uint8>)
2025-07-23 17:15:49,644 - DEBUG - on stmt: $54load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,644 - DEBUG - on stmt: $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,644 - DEBUG - on stmt: $const88.7 = const(NoneType, None)
2025-07-23 17:15:49,644 - DEBUG - on stmt: $88return_const.8 = cast(value=$const88.7)
2025-07-23 17:15:49,644 - DEBUG - on stmt: return $88return_const.8
2025-07-23 17:15:49,645 - DEBUG - ==== SSA block analysis pass on 90
2025-07-23 17:15:49,645 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,645 - DEBUG - on stmt: $92load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,645 - DEBUG - on stmt: $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:49,645 - DEBUG - on stmt: $122compare_op.3 = $92load_attr.1 == $112load_global.2
2025-07-23 17:15:49,645 - DEBUG - on stmt: bool126 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,645 - DEBUG - on stmt: $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,645 - DEBUG - on stmt: branch $126pred, 128, 176
2025-07-23 17:15:49,646 - DEBUG - ==== SSA block analysis pass on 128
2025-07-23 17:15:49,646 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,646 - DEBUG - on stmt: $128load_global.0 = global(set_uint16: <intrinsic set_uint16>)
2025-07-23 17:15:49,646 - DEBUG - on stmt: $140load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,646 - DEBUG - on stmt: $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,646 - DEBUG - on stmt: $const174.7 = const(NoneType, None)
2025-07-23 17:15:49,646 - DEBUG - on stmt: $174return_const.8 = cast(value=$const174.7)
2025-07-23 17:15:49,647 - DEBUG - on stmt: return $174return_const.8
2025-07-23 17:15:49,647 - DEBUG - ==== SSA block analysis pass on 176
2025-07-23 17:15:49,647 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,647 - DEBUG - on stmt: $178load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,647 - DEBUG - on stmt: $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,647 - DEBUG - on stmt: $208compare_op.3 = $178load_attr.1 == $198load_global.2
2025-07-23 17:15:49,647 - DEBUG - on stmt: bool212 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,647 - DEBUG - on stmt: $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,647 - DEBUG - on stmt: branch $212pred, 214, 262
2025-07-23 17:15:49,649 - DEBUG - ==== SSA block analysis pass on 214
2025-07-23 17:15:49,649 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,649 - DEBUG - on stmt: $214load_global.0 = global(set_uint32: <intrinsic set_uint32>)
2025-07-23 17:15:49,649 - DEBUG - on stmt: $226load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,649 - DEBUG - on stmt: $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,651 - DEBUG - on stmt: $const260.7 = const(NoneType, None)
2025-07-23 17:15:49,651 - DEBUG - on stmt: $260return_const.8 = cast(value=$const260.7)
2025-07-23 17:15:49,651 - DEBUG - on stmt: return $260return_const.8
2025-07-23 17:15:49,651 - DEBUG - ==== SSA block analysis pass on 262
2025-07-23 17:15:49,651 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6DA63E150>
2025-07-23 17:15:49,652 - DEBUG - on stmt: $262load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:49,652 - DEBUG - on stmt: $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point)
2025-07-23 17:15:49,653 - DEBUG - on stmt: $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,654 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _set_code_point')
2025-07-23 17:15:49,657 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E67C0350>,
                                    90)],
             '$122compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E67C04D0>,
                                   90)],
             '$126pred': [(<numba.core.ir.Assign object at 0x000001F6E67C0740>,
                           90)],
             '$128load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67C0920>,
                                    128)],
             '$140load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67C0B60>,
                                  128)],
             '$164call.6': [(<numba.core.ir.Assign object at 0x000001F6E67C0EF0>,
                             128)],
             '$174return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E67C1130>,
                                     128)],
             '$178load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E67C1310>,
                                  176)],
             '$198load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E67C1460>,
                                    176)],
             '$208compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E67C15E0>,
                                   176)],
             '$212pred': [(<numba.core.ir.Assign object at 0x000001F6E67C1850>,
                           176)],
             '$214load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67C1A30>,
                                    214)],
             '$226load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67C1C70>,
                                  214)],
             '$250call.6': [(<numba.core.ir.Assign object at 0x000001F6E67C2000>,
                             214)],
             '$260return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E67C2240>,
                                     214)],
             '$262load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67C2330>,
                                    262)],
             '$26load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E67B31D0>,
                                   0)],
             '$274call.3': [(<numba.core.ir.Assign object at 0x000001F6E67C2630>,
                             262)],
             '$36compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E67B3350>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E67B35F0>,
                          0)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67B37D0>,
                                   42)],
             '$54load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67B3A10>,
                                 42)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E67B3080>,
                                0)],
             '$78call.6': [(<numba.core.ir.Assign object at 0x000001F6E67B3DA0>,
                            42)],
             '$88return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E67B3FE0>,
                                    42)],
             '$92load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E67C0200>,
                                 90)],
             '$const174.7': [(<numba.core.ir.Assign object at 0x000001F6E67C1010>,
                              128)],
             '$const260.7': [(<numba.core.ir.Assign object at 0x000001F6E67C2120>,
                              214)],
             '$const272.2.1': [(<numba.core.ir.Assign object at 0x000001F6E67C2480>,
                                262)],
             '$const88.7': [(<numba.core.ir.Assign object at 0x000001F6E67B3EC0>,
                             42)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E67B2960>, 0)],
             'bool126': [(<numba.core.ir.Assign object at 0x000001F6E67C0620>,
                          90)],
             'bool212': [(<numba.core.ir.Assign object at 0x000001F6E67C1730>,
                          176)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E67B34A0>,
                         0)],
             'ch': [(<numba.core.ir.Assign object at 0x000001F6E67B2E40>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E67B2A80>, 0)]})
2025-07-23 17:15:49,658 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67B0710>
2025-07-23 17:15:49,775 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1767)
           2	RESUME(arg=0, lineno=1767)
           4	LOAD_FAST(arg=2, lineno=1769)
           6	LOAD_ATTR(arg=0, lineno=1769)
          26	LOAD_FAST(arg=0, lineno=1769)
          28	LOAD_ATTR(arg=0, lineno=1769)
          48	COMPARE_OP(arg=40, lineno=1769)
          52	POP_JUMP_IF_FALSE(arg=74, lineno=1769)
          54	LOAD_GLOBAL(arg=3, lineno=1770)
          64	LOAD_FAST(arg=2, lineno=1770)
          66	LOAD_ATTR(arg=0, lineno=1770)
          86	CALL(arg=1, lineno=1770)
          94	STORE_FAST(arg=5, lineno=1770)
          96	LOAD_FAST(arg=5, lineno=1771)
          98	LOAD_FAST(arg=3, lineno=1771)
         100	BINARY_OP(arg=5, lineno=1771)
         104	STORE_FAST(arg=6, lineno=1771)
         106	LOAD_FAST(arg=5, lineno=1772)
         108	LOAD_FAST(arg=1, lineno=1772)
         110	BINARY_OP(arg=5, lineno=1772)
         114	STORE_FAST(arg=7, lineno=1772)
         116	LOAD_FAST(arg=4, lineno=1773)
         118	LOAD_FAST(arg=5, lineno=1773)
         120	BINARY_OP(arg=5, lineno=1773)
         124	STORE_FAST(arg=8, lineno=1773)
         126	LOAD_GLOBAL(arg=5, lineno=1774)
         136	LOAD_FAST(arg=0, lineno=1774)
         138	LOAD_ATTR(arg=6, lineno=1774)
         158	LOAD_FAST(arg=7, lineno=1774)
         160	LOAD_FAST(arg=2, lineno=1774)
         162	LOAD_ATTR(arg=6, lineno=1774)
         182	LOAD_FAST(arg=6, lineno=1775)
         184	LOAD_FAST(arg=8, lineno=1775)
         186	LOAD_CONST(arg=1, lineno=1775)
         188	KW_NAMES(arg=2, lineno=1774)
         190	CALL(arg=6, lineno=1774)
         198	POP_TOP(arg=None, lineno=1774)
         200	RETURN_CONST(arg=0, lineno=1774)
>        202	LOAD_GLOBAL(arg=9, lineno=1777)
         212	LOAD_FAST(arg=4, lineno=1777)
         214	CALL(arg=1, lineno=1777)
         222	GET_ITER(arg=None, lineno=1777)
>        224	FOR_ITER(arg=31, lineno=1777)
         228	STORE_FAST(arg=9, lineno=1777)
         230	LOAD_GLOBAL(arg=11, lineno=1778)
         240	LOAD_FAST(arg=0, lineno=1778)
         242	LOAD_FAST(arg=1, lineno=1778)
         244	LOAD_FAST(arg=9, lineno=1778)
         246	BINARY_OP(arg=0, lineno=1778)
         250	LOAD_GLOBAL(arg=13, lineno=1779)
         260	LOAD_FAST(arg=2, lineno=1779)
         262	LOAD_FAST(arg=3, lineno=1779)
         264	LOAD_FAST(arg=9, lineno=1779)
         266	BINARY_OP(arg=0, lineno=1779)
         270	CALL(arg=2, lineno=1779)
         278	CALL(arg=3, lineno=1778)
         286	POP_TOP(arg=None, lineno=1778)
         288	JUMP_BACKWARD(arg=33, lineno=1778)
>        290	END_FOR(arg=None, lineno=1777)
         292	RETURN_CONST(arg=0, lineno=1777)
2025-07-23 17:15:49,776 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,776 - DEBUG - stack: []
2025-07-23 17:15:49,776 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,776 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1767)
2025-07-23 17:15:49,776 - DEBUG - stack []
2025-07-23 17:15:49,777 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1767)
2025-07-23 17:15:49,777 - DEBUG - stack []
2025-07-23 17:15:49,777 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=2, lineno=1769)
2025-07-23 17:15:49,777 - DEBUG - stack []
2025-07-23 17:15:49,778 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=1769)
2025-07-23 17:15:49,778 - DEBUG - stack ['$src4.0']
2025-07-23 17:15:49,778 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=1769)
2025-07-23 17:15:49,778 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:49,778 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=0, lineno=1769)
2025-07-23 17:15:49,779 - DEBUG - stack ['$6load_attr.1', '$dst26.2']
2025-07-23 17:15:49,779 - DEBUG - dispatch pc=48, inst=COMPARE_OP(arg=40, lineno=1769)
2025-07-23 17:15:49,779 - DEBUG - stack ['$6load_attr.1', '$28load_attr.3']
2025-07-23 17:15:49,779 - DEBUG - dispatch pc=52, inst=POP_JUMP_IF_FALSE(arg=74, lineno=1769)
2025-07-23 17:15:49,779 - DEBUG - stack ['$48compare_op.4']
2025-07-23 17:15:49,780 - DEBUG - end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=202, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,780 - DEBUG - pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=202 nstack_initial=0)])
2025-07-23 17:15:49,780 - DEBUG - stack: []
2025-07-23 17:15:49,780 - DEBUG - state.pc_initial: State(pc_initial=54 nstack_initial=0)
2025-07-23 17:15:49,781 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=3, lineno=1770)
2025-07-23 17:15:49,781 - DEBUG - stack []
2025-07-23 17:15:49,781 - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=1770)
2025-07-23 17:15:49,782 - DEBUG - stack ['$null$54.1', '$54load_global.0']
2025-07-23 17:15:49,782 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=0, lineno=1770)
2025-07-23 17:15:49,782 - DEBUG - stack ['$null$54.1', '$54load_global.0', '$src64.2']
2025-07-23 17:15:49,782 - DEBUG - dispatch pc=86, inst=CALL(arg=1, lineno=1770)
2025-07-23 17:15:49,782 - DEBUG - stack ['$null$54.1', '$54load_global.0', '$66load_attr.3']
2025-07-23 17:15:49,782 - DEBUG - dispatch pc=94, inst=STORE_FAST(arg=5, lineno=1770)
2025-07-23 17:15:49,782 - DEBUG - stack ['$86call.4']
2025-07-23 17:15:49,783 - DEBUG - dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=1771)
2025-07-23 17:15:49,783 - DEBUG - stack []
2025-07-23 17:15:49,783 - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=1771)
2025-07-23 17:15:49,783 - DEBUG - stack ['$byte_width96.5']
2025-07-23 17:15:49,783 - DEBUG - dispatch pc=100, inst=BINARY_OP(arg=5, lineno=1771)
2025-07-23 17:15:49,783 - DEBUG - stack ['$byte_width96.5', '$src_offset98.6']
2025-07-23 17:15:49,783 - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=6, lineno=1771)
2025-07-23 17:15:49,783 - DEBUG - stack ['$binop_mul100.7']
2025-07-23 17:15:49,784 - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=5, lineno=1772)
2025-07-23 17:15:49,784 - DEBUG - stack []
2025-07-23 17:15:49,784 - DEBUG - dispatch pc=108, inst=LOAD_FAST(arg=1, lineno=1772)
2025-07-23 17:15:49,784 - DEBUG - stack ['$byte_width106.8']
2025-07-23 17:15:49,784 - DEBUG - dispatch pc=110, inst=BINARY_OP(arg=5, lineno=1772)
2025-07-23 17:15:49,784 - DEBUG - stack ['$byte_width106.8', '$dst_offset108.9']
2025-07-23 17:15:49,784 - DEBUG - dispatch pc=114, inst=STORE_FAST(arg=7, lineno=1772)
2025-07-23 17:15:49,785 - DEBUG - stack ['$binop_mul110.10']
2025-07-23 17:15:49,785 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=4, lineno=1773)
2025-07-23 17:15:49,785 - DEBUG - stack []
2025-07-23 17:15:49,785 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=5, lineno=1773)
2025-07-23 17:15:49,785 - DEBUG - stack ['$n116.11']
2025-07-23 17:15:49,786 - DEBUG - dispatch pc=120, inst=BINARY_OP(arg=5, lineno=1773)
2025-07-23 17:15:49,786 - DEBUG - stack ['$n116.11', '$byte_width118.12']
2025-07-23 17:15:49,786 - DEBUG - dispatch pc=124, inst=STORE_FAST(arg=8, lineno=1773)
2025-07-23 17:15:49,786 - DEBUG - stack ['$binop_mul120.13']
2025-07-23 17:15:49,786 - DEBUG - dispatch pc=126, inst=LOAD_GLOBAL(arg=5, lineno=1774)
2025-07-23 17:15:49,787 - DEBUG - stack []
2025-07-23 17:15:49,787 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=0, lineno=1774)
2025-07-23 17:15:49,787 - DEBUG - stack ['$null$126.15', '$126load_global.14']
2025-07-23 17:15:49,787 - DEBUG - dispatch pc=138, inst=LOAD_ATTR(arg=6, lineno=1774)
2025-07-23 17:15:49,787 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$dst136.16']
2025-07-23 17:15:49,787 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=7, lineno=1774)
2025-07-23 17:15:49,788 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17']
2025-07-23 17:15:49,788 - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=2, lineno=1774)
2025-07-23 17:15:49,788 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18']
2025-07-23 17:15:49,788 - DEBUG - dispatch pc=162, inst=LOAD_ATTR(arg=6, lineno=1774)
2025-07-23 17:15:49,788 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$src160.19']
2025-07-23 17:15:49,788 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=6, lineno=1775)
2025-07-23 17:15:49,788 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20']
2025-07-23 17:15:49,788 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=8, lineno=1775)
2025-07-23 17:15:49,788 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20', '$src_byte_offset182.21']
2025-07-23 17:15:49,789 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=1, lineno=1775)
2025-07-23 17:15:49,789 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20', '$src_byte_offset182.21', '$nbytes184.22']
2025-07-23 17:15:49,789 - DEBUG - dispatch pc=188, inst=KW_NAMES(arg=2, lineno=1774)
2025-07-23 17:15:49,789 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20', '$src_byte_offset182.21', '$nbytes184.22', '$const186.23.1']
2025-07-23 17:15:49,790 - DEBUG - dispatch pc=190, inst=CALL(arg=6, lineno=1774)
2025-07-23 17:15:49,790 - DEBUG - stack ['$null$126.15', '$126load_global.14', '$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20', '$src_byte_offset182.21', '$nbytes184.22', '$const186.23.1']
2025-07-23 17:15:49,790 - DEBUG - dispatch pc=198, inst=POP_TOP(arg=None, lineno=1774)
2025-07-23 17:15:49,790 - DEBUG - stack ['$190call.24']
2025-07-23 17:15:49,790 - DEBUG - dispatch pc=200, inst=RETURN_CONST(arg=0, lineno=1774)
2025-07-23 17:15:49,790 - DEBUG - stack []
2025-07-23 17:15:49,790 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,790 - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0)])
2025-07-23 17:15:49,790 - DEBUG - stack: []
2025-07-23 17:15:49,791 - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
2025-07-23 17:15:49,791 - DEBUG - dispatch pc=202, inst=LOAD_GLOBAL(arg=9, lineno=1777)
2025-07-23 17:15:49,791 - DEBUG - stack []
2025-07-23 17:15:49,791 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=1777)
2025-07-23 17:15:49,791 - DEBUG - stack ['$null$202.1', '$202load_global.0']
2025-07-23 17:15:49,791 - DEBUG - dispatch pc=214, inst=CALL(arg=1, lineno=1777)
2025-07-23 17:15:49,791 - DEBUG - stack ['$null$202.1', '$202load_global.0', '$n212.2']
2025-07-23 17:15:49,792 - DEBUG - dispatch pc=222, inst=GET_ITER(arg=None, lineno=1777)
2025-07-23 17:15:49,792 - DEBUG - stack ['$214call.3']
2025-07-23 17:15:49,792 - DEBUG - end state. edges=[Edge(pc=224, stack=('$222get_iter.4',), blockstack=(), npush=0)]
2025-07-23 17:15:49,793 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=1)])
2025-07-23 17:15:49,793 - DEBUG - stack: ['$phi224.0']
2025-07-23 17:15:49,793 - DEBUG - state.pc_initial: State(pc_initial=224 nstack_initial=1)
2025-07-23 17:15:49,793 - DEBUG - dispatch pc=224, inst=FOR_ITER(arg=31, lineno=1777)
2025-07-23 17:15:49,793 - DEBUG - stack ['$phi224.0']
2025-07-23 17:15:49,793 - DEBUG - end state. edges=[Edge(pc=290, stack=('$phi224.0', '$224for_iter.2'), blockstack=(), npush=0), Edge(pc=228, stack=('$phi224.0', '$224for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:49,793 - DEBUG - pending: deque([State(pc_initial=290 nstack_initial=2), State(pc_initial=228 nstack_initial=2)])
2025-07-23 17:15:49,793 - DEBUG - stack: ['$phi290.0', '$phi290.1']
2025-07-23 17:15:49,793 - DEBUG - state.pc_initial: State(pc_initial=290 nstack_initial=2)
2025-07-23 17:15:49,793 - DEBUG - dispatch pc=290, inst=END_FOR(arg=None, lineno=1777)
2025-07-23 17:15:49,794 - DEBUG - stack ['$phi290.0', '$phi290.1']
2025-07-23 17:15:49,794 - DEBUG - dispatch pc=292, inst=RETURN_CONST(arg=0, lineno=1777)
2025-07-23 17:15:49,794 - DEBUG - stack []
2025-07-23 17:15:49,794 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,794 - DEBUG - pending: deque([State(pc_initial=228 nstack_initial=2)])
2025-07-23 17:15:49,794 - DEBUG - stack: ['$phi228.0', '$phi228.1']
2025-07-23 17:15:49,794 - DEBUG - state.pc_initial: State(pc_initial=228 nstack_initial=2)
2025-07-23 17:15:49,794 - DEBUG - dispatch pc=228, inst=STORE_FAST(arg=9, lineno=1777)
2025-07-23 17:15:49,795 - DEBUG - stack ['$phi228.0', '$phi228.1']
2025-07-23 17:15:49,795 - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=11, lineno=1778)
2025-07-23 17:15:49,795 - DEBUG - stack ['$phi228.0']
2025-07-23 17:15:49,795 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=0, lineno=1778)
2025-07-23 17:15:49,795 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2']
2025-07-23 17:15:49,795 - DEBUG - dispatch pc=242, inst=LOAD_FAST(arg=1, lineno=1778)
2025-07-23 17:15:49,795 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4']
2025-07-23 17:15:49,795 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=9, lineno=1778)
2025-07-23 17:15:49,795 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$dst_offset242.5']
2025-07-23 17:15:49,796 - DEBUG - dispatch pc=246, inst=BINARY_OP(arg=0, lineno=1778)
2025-07-23 17:15:49,796 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$dst_offset242.5', '$i244.6']
2025-07-23 17:15:49,796 - DEBUG - dispatch pc=250, inst=LOAD_GLOBAL(arg=13, lineno=1779)
2025-07-23 17:15:49,796 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7']
2025-07-23 17:15:49,796 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=2, lineno=1779)
2025-07-23 17:15:49,796 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$null$250.9', '$250load_global.8']
2025-07-23 17:15:49,796 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=3, lineno=1779)
2025-07-23 17:15:49,796 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$null$250.9', '$250load_global.8', '$src260.10']
2025-07-23 17:15:49,796 - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=9, lineno=1779)
2025-07-23 17:15:49,797 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$null$250.9', '$250load_global.8', '$src260.10', '$src_offset262.11']
2025-07-23 17:15:49,797 - DEBUG - dispatch pc=266, inst=BINARY_OP(arg=0, lineno=1779)
2025-07-23 17:15:49,797 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$null$250.9', '$250load_global.8', '$src260.10', '$src_offset262.11', '$i264.12']
2025-07-23 17:15:49,797 - DEBUG - dispatch pc=270, inst=CALL(arg=2, lineno=1779)
2025-07-23 17:15:49,797 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$null$250.9', '$250load_global.8', '$src260.10', '$binop_add266.13']
2025-07-23 17:15:49,797 - DEBUG - dispatch pc=278, inst=CALL(arg=3, lineno=1778)
2025-07-23 17:15:49,797 - DEBUG - stack ['$phi228.0', '$null$230.3', '$230load_global.2', '$dst240.4', '$binop_add246.7', '$270call.14']
2025-07-23 17:15:49,797 - DEBUG - dispatch pc=286, inst=POP_TOP(arg=None, lineno=1778)
2025-07-23 17:15:49,797 - DEBUG - stack ['$phi228.0', '$278call.15']
2025-07-23 17:15:49,798 - DEBUG - dispatch pc=288, inst=JUMP_BACKWARD(arg=33, lineno=1778)
2025-07-23 17:15:49,798 - DEBUG - stack ['$phi228.0']
2025-07-23 17:15:49,798 - DEBUG - end state. edges=[Edge(pc=224, stack=('$phi228.0',), blockstack=(), npush=0)]
2025-07-23 17:15:49,798 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=1)])
2025-07-23 17:15:49,798 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,798 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=1): {'$phi224.0'},
             State(pc_initial=228 nstack_initial=2): {'$phi228.1'},
             State(pc_initial=290 nstack_initial=2): set()})
2025-07-23 17:15:49,799 - DEBUG - defmap: {'$phi224.0': State(pc_initial=202 nstack_initial=0),
 '$phi228.1': State(pc_initial=224 nstack_initial=1),
 '$phi290.1': State(pc_initial=224 nstack_initial=1)}
2025-07-23 17:15:49,799 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi224.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi228.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi228.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi290.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi290.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))}})
2025-07-23 17:15:49,799 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi224.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0)),
                           ('$phi224.0',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi228.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi228.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi290.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi290.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))}})
2025-07-23 17:15:49,799 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi224.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi228.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi228.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi290.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi290.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))}})
2025-07-23 17:15:49,800 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi224.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi228.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi228.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi290.0': {('$222get_iter.4',
                            State(pc_initial=202 nstack_initial=0))},
             '$phi290.1': {('$224for_iter.2',
                            State(pc_initial=224 nstack_initial=1))}})
2025-07-23 17:15:49,803 - DEBUG - keep phismap: {'$phi224.0': {('$222get_iter.4', State(pc_initial=202 nstack_initial=0))},
 '$phi228.1': {('$224for_iter.2', State(pc_initial=224 nstack_initial=1))}}
2025-07-23 17:15:49,803 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=202 nstack_initial=0): {'$phi224.0': '$222get_iter.4'},
             State(pc_initial=224 nstack_initial=1): {'$phi228.1': '$224for_iter.2'}})
2025-07-23 17:15:49,803 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,803 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$src4.0'}), (6, {'item': '$src4.0', 'res': '$6load_attr.1'}), (26, {'res': '$dst26.2'}), (28, {'item': '$dst26.2', 'res': '$28load_attr.3'}), (48, {'lhs': '$6load_attr.1', 'rhs': '$28load_attr.3', 'res': '$48compare_op.4'}), (52, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 202: ()})
2025-07-23 17:15:49,803 - DEBUG - block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'idx': 1, 'res': '$54load_global.0'}), (64, {'res': '$src64.2'}), (66, {'item': '$src64.2', 'res': '$66load_attr.3'}), (86, {'func': '$54load_global.0', 'args': ['$66load_attr.3'], 'kw_names': None, 'res': '$86call.4'}), (94, {'value': '$86call.4'}), (96, {'res': '$byte_width96.5'}), (98, {'res': '$src_offset98.6'}), (100, {'op': '*', 'lhs': '$byte_width96.5', 'rhs': '$src_offset98.6', 'res': '$binop_mul100.7'}), (104, {'value': '$binop_mul100.7'}), (106, {'res': '$byte_width106.8'}), (108, {'res': '$dst_offset108.9'}), (110, {'op': '*', 'lhs': '$byte_width106.8', 'rhs': '$dst_offset108.9', 'res': '$binop_mul110.10'}), (114, {'value': '$binop_mul110.10'}), (116, {'res': '$n116.11'}), (118, {'res': '$byte_width118.12'}), (120, {'op': '*', 'lhs': '$n116.11', 'rhs': '$byte_width118.12', 'res': '$binop_mul120.13'}), (124, {'value': '$binop_mul120.13'}), (126, {'idx': 2, 'res': '$126load_global.14'}), (136, {'res': '$dst136.16'}), (138, {'item': '$dst136.16', 'res': '$138load_attr.17'}), (158, {'res': '$dst_byte_offset158.18'}), (160, {'res': '$src160.19'}), (162, {'item': '$src160.19', 'res': '$162load_attr.20'}), (182, {'res': '$src_byte_offset182.21'}), (184, {'res': '$nbytes184.22'}), (186, {'res': '$const186.23.1'}), (190, {'func': '$126load_global.14', 'args': ['$138load_attr.17', '$dst_byte_offset158.18', '$162load_attr.20', '$src_byte_offset182.21', '$nbytes184.22', '$const186.23.1'], 'kw_names': 2, 'res': '$190call.24'}), (200, {'retval': '$const200.25', 'castval': '$200return_const.26'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,804 - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 4, 'res': '$202load_global.0'}), (212, {'res': '$n212.2'}), (214, {'func': '$202load_global.0', 'args': ['$n212.2'], 'kw_names': None, 'res': '$214call.3'}), (222, {'value': '$214call.3', 'res': '$222get_iter.4'})), outgoing_phis={'$phi224.0': '$222get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$222get_iter.4',)})
2025-07-23 17:15:49,804 - DEBUG - block_infos State(pc_initial=224 nstack_initial=1):
AdaptBlockInfo(insts=((224, {'iterator': '$phi224.0', 'pair': '$224for_iter.1', 'indval': '$224for_iter.2', 'pred': '$224for_iter.3'}),), outgoing_phis={'$phi228.1': '$224for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={290: ('$phi224.0', '$224for_iter.2'), 228: ('$phi224.0', '$224for_iter.2')})
2025-07-23 17:15:49,804 - DEBUG - block_infos State(pc_initial=228 nstack_initial=2):
AdaptBlockInfo(insts=((228, {'value': '$phi228.1'}), (230, {'idx': 5, 'res': '$230load_global.2'}), (240, {'res': '$dst240.4'}), (242, {'res': '$dst_offset242.5'}), (244, {'res': '$i244.6'}), (246, {'op': '+', 'lhs': '$dst_offset242.5', 'rhs': '$i244.6', 'res': '$binop_add246.7'}), (250, {'idx': 6, 'res': '$250load_global.8'}), (260, {'res': '$src260.10'}), (262, {'res': '$src_offset262.11'}), (264, {'res': '$i264.12'}), (266, {'op': '+', 'lhs': '$src_offset262.11', 'rhs': '$i264.12', 'res': '$binop_add266.13'}), (270, {'func': '$250load_global.8', 'args': ['$src260.10', '$binop_add266.13'], 'kw_names': None, 'res': '$270call.14'}), (278, {'func': '$230load_global.2', 'args': ['$dst240.4', '$binop_add246.7', '$270call.14'], 'kw_names': None, 'res': '$278call.15'}), (288, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$phi228.0',)})
2025-07-23 17:15:49,805 - DEBUG - block_infos State(pc_initial=290 nstack_initial=2):
AdaptBlockInfo(insts=((292, {'retval': '$const292.2', 'castval': '$292return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,806 - DEBUG - label 0:
    dst = arg(0, name=dst)                   ['dst']
    dst_offset = arg(1, name=dst_offset)     ['dst_offset']
    src = arg(2, name=src)                   ['src']
    src_offset = arg(3, name=src_offset)     ['src_offset']
    n = arg(4, name=n)                       ['n']
    $6load_attr.1 = getattr(value=src, attr=_kind) ['$6load_attr.1', 'src']
    $28load_attr.3 = getattr(value=dst, attr=_kind) ['$28load_attr.3', 'dst']
    $48compare_op.4 = $6load_attr.1 == $28load_attr.3 ['$28load_attr.3', '$48compare_op.4', '$6load_attr.1']
    bool52 = global(bool: <class 'bool'>)    ['bool52']
    $52pred = call bool52($48compare_op.4, func=bool52, args=(Var($48compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$52pred', 'bool52']
    branch $52pred, 54, 202                  ['$52pred']
label 54:
    $54load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>) ['$54load_global.0']
    $66load_attr.3 = getattr(value=src, attr=_kind) ['$66load_attr.3', 'src']
    byte_width = call $54load_global.0($66load_attr.3, func=$54load_global.0, args=[Var($66load_attr.3, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.0', '$66load_attr.3', 'byte_width']
    src_byte_offset = byte_width * src_offset ['byte_width', 'src_byte_offset', 'src_offset']
    dst_byte_offset = byte_width * dst_offset ['byte_width', 'dst_byte_offset', 'dst_offset']
    nbytes = n * byte_width                  ['byte_width', 'n', 'nbytes']
    $126load_global.14 = global(memcpy_region: <intrinsic memcpy_region>) ['$126load_global.14']
    $138load_attr.17 = getattr(value=dst, attr=_data) ['$138load_attr.17', 'dst']
    $162load_attr.20 = getattr(value=src, attr=_data) ['$162load_attr.20', 'src']
    $const186.23.1 = const(int, 1)           ['$const186.23.1']
    $190call.24 = call $126load_global.14($138load_attr.17, dst_byte_offset, $162load_attr.20, src_byte_offset, nbytes, func=$126load_global.14, args=[Var($138load_attr.17, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($162load_attr.20, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const186.23.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None) ['$126load_global.14', '$138load_attr.17', '$162load_attr.20', '$190call.24', '$const186.23.1', 'dst_byte_offset', 'nbytes', 'src_byte_offset']
    $const200.25 = const(NoneType, None)     ['$const200.25']
    $200return_const.26 = cast(value=$const200.25) ['$200return_const.26', '$const200.25']
    return $200return_const.26               ['$200return_const.26']
label 202:
    $202load_global.0 = global(range: <class 'range'>) ['$202load_global.0']
    $214call.3 = call $202load_global.0(n, func=$202load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_global.0', '$214call.3', 'n']
    $222get_iter.4 = getiter(value=$214call.3) ['$214call.3', '$222get_iter.4']
    $phi224.0 = $222get_iter.4               ['$222get_iter.4', '$phi224.0']
    jump 224                                 []
label 224:
    $224for_iter.1 = iternext(value=$phi224.0) ['$224for_iter.1', '$phi224.0']
    $224for_iter.2 = pair_first(value=$224for_iter.1) ['$224for_iter.1', '$224for_iter.2']
    $224for_iter.3 = pair_second(value=$224for_iter.1) ['$224for_iter.1', '$224for_iter.3']
    $phi228.1 = $224for_iter.2               ['$224for_iter.2', '$phi228.1']
    branch $224for_iter.3, 228, 290          ['$224for_iter.3']
label 228:
    i = $phi228.1                            ['$phi228.1', 'i']
    $230load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$230load_global.2']
    $binop_add246.7 = dst_offset + i         ['$binop_add246.7', 'dst_offset', 'i']
    $250load_global.8 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>) ['$250load_global.8']
    $binop_add266.13 = src_offset + i        ['$binop_add266.13', 'i', 'src_offset']
    $270call.14 = call $250load_global.8(src, $binop_add266.13, func=$250load_global.8, args=[Var(src, unicode.py:1767), Var($binop_add266.13, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_global.8', '$270call.14', '$binop_add266.13', 'src']
    $278call.15 = call $230load_global.2(dst, $binop_add246.7, $270call.14, func=$230load_global.2, args=[Var(dst, unicode.py:1767), Var($binop_add246.7, unicode.py:1778), Var($270call.14, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.2', '$270call.14', '$278call.15', '$binop_add246.7', 'dst']
    jump 224                                 []
label 290:
    $const292.2 = const(NoneType, None)      ['$const292.2']
    $292return_const.3 = cast(value=$const292.2) ['$292return_const.3', '$const292.2']
    return $292return_const.3                ['$292return_const.3']

2025-07-23 17:15:49,810 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,810 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,810 - DEBUG - on stmt: dst = arg(0, name=dst)
2025-07-23 17:15:49,810 - DEBUG - on stmt: dst_offset = arg(1, name=dst_offset)
2025-07-23 17:15:49,811 - DEBUG - on stmt: src = arg(2, name=src)
2025-07-23 17:15:49,811 - DEBUG - on stmt: src_offset = arg(3, name=src_offset)
2025-07-23 17:15:49,811 - DEBUG - on stmt: n = arg(4, name=n)
2025-07-23 17:15:49,811 - DEBUG - on stmt: $6load_attr.1 = getattr(value=src, attr=_kind)
2025-07-23 17:15:49,812 - DEBUG - on stmt: $28load_attr.3 = getattr(value=dst, attr=_kind)
2025-07-23 17:15:49,812 - DEBUG - on stmt: $48compare_op.4 = $6load_attr.1 == $28load_attr.3
2025-07-23 17:15:49,812 - DEBUG - on stmt: bool52 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,812 - DEBUG - on stmt: $52pred = call bool52($48compare_op.4, func=bool52, args=(Var($48compare_op.4, unicode.py:1769),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,812 - DEBUG - on stmt: branch $52pred, 54, 202
2025-07-23 17:15:49,812 - DEBUG - ==== SSA block analysis pass on 54
2025-07-23 17:15:49,813 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,813 - DEBUG - on stmt: $54load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x000001F6D19198A0>)
2025-07-23 17:15:49,813 - DEBUG - on stmt: $66load_attr.3 = getattr(value=src, attr=_kind)
2025-07-23 17:15:49,813 - DEBUG - on stmt: byte_width = call $54load_global.0($66load_attr.3, func=$54load_global.0, args=[Var($66load_attr.3, unicode.py:1770)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,814 - DEBUG - on stmt: src_byte_offset = byte_width * src_offset
2025-07-23 17:15:49,814 - DEBUG - on stmt: dst_byte_offset = byte_width * dst_offset
2025-07-23 17:15:49,814 - DEBUG - on stmt: nbytes = n * byte_width
2025-07-23 17:15:49,814 - DEBUG - on stmt: $126load_global.14 = global(memcpy_region: <intrinsic memcpy_region>)
2025-07-23 17:15:49,814 - DEBUG - on stmt: $138load_attr.17 = getattr(value=dst, attr=_data)
2025-07-23 17:15:49,814 - DEBUG - on stmt: $162load_attr.20 = getattr(value=src, attr=_data)
2025-07-23 17:15:49,815 - DEBUG - on stmt: $const186.23.1 = const(int, 1)
2025-07-23 17:15:49,815 - DEBUG - on stmt: $190call.24 = call $126load_global.14($138load_attr.17, dst_byte_offset, $162load_attr.20, src_byte_offset, nbytes, func=$126load_global.14, args=[Var($138load_attr.17, unicode.py:1774), Var(dst_byte_offset, unicode.py:1772), Var($162load_attr.20, unicode.py:1774), Var(src_byte_offset, unicode.py:1771), Var(nbytes, unicode.py:1773)], kws=[('align', Var($const186.23.1, unicode.py:1775))], vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,815 - DEBUG - on stmt: $const200.25 = const(NoneType, None)
2025-07-23 17:15:49,815 - DEBUG - on stmt: $200return_const.26 = cast(value=$const200.25)
2025-07-23 17:15:49,815 - DEBUG - on stmt: return $200return_const.26
2025-07-23 17:15:49,815 - DEBUG - ==== SSA block analysis pass on 202
2025-07-23 17:15:49,816 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,816 - DEBUG - on stmt: $202load_global.0 = global(range: <class 'range'>)
2025-07-23 17:15:49,816 - DEBUG - on stmt: $214call.3 = call $202load_global.0(n, func=$202load_global.0, args=[Var(n, unicode.py:1767)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,816 - DEBUG - on stmt: $222get_iter.4 = getiter(value=$214call.3)
2025-07-23 17:15:49,816 - DEBUG - on stmt: $phi224.0 = $222get_iter.4
2025-07-23 17:15:49,816 - DEBUG - on stmt: jump 224
2025-07-23 17:15:49,816 - DEBUG - ==== SSA block analysis pass on 224
2025-07-23 17:15:49,817 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,817 - DEBUG - on stmt: $224for_iter.1 = iternext(value=$phi224.0)
2025-07-23 17:15:49,817 - DEBUG - on stmt: $224for_iter.2 = pair_first(value=$224for_iter.1)
2025-07-23 17:15:49,817 - DEBUG - on stmt: $224for_iter.3 = pair_second(value=$224for_iter.1)
2025-07-23 17:15:49,817 - DEBUG - on stmt: $phi228.1 = $224for_iter.2
2025-07-23 17:15:49,817 - DEBUG - on stmt: branch $224for_iter.3, 228, 290
2025-07-23 17:15:49,817 - DEBUG - ==== SSA block analysis pass on 228
2025-07-23 17:15:49,817 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,817 - DEBUG - on stmt: i = $phi228.1
2025-07-23 17:15:49,817 - DEBUG - on stmt: $230load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:49,817 - DEBUG - on stmt: $binop_add246.7 = dst_offset + i
2025-07-23 17:15:49,819 - DEBUG - on stmt: $250load_global.8 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>)
2025-07-23 17:15:49,819 - DEBUG - on stmt: $binop_add266.13 = src_offset + i
2025-07-23 17:15:49,819 - DEBUG - on stmt: $270call.14 = call $250load_global.8(src, $binop_add266.13, func=$250load_global.8, args=[Var(src, unicode.py:1767), Var($binop_add266.13, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,819 - DEBUG - on stmt: $278call.15 = call $230load_global.2(dst, $binop_add246.7, $270call.14, func=$230load_global.2, args=[Var(dst, unicode.py:1767), Var($binop_add246.7, unicode.py:1778), Var($270call.14, unicode.py:1779)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,820 - DEBUG - on stmt: jump 224
2025-07-23 17:15:49,820 - DEBUG - ==== SSA block analysis pass on 290
2025-07-23 17:15:49,820 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67E4500>
2025-07-23 17:15:49,820 - DEBUG - on stmt: $const292.2 = const(NoneType, None)
2025-07-23 17:15:49,820 - DEBUG - on stmt: $292return_const.3 = cast(value=$const292.2)
2025-07-23 17:15:49,820 - DEBUG - on stmt: return $292return_const.3
2025-07-23 17:15:49,821 - DEBUG - defs defaultdict(<class 'list'>,
            {'$126load_global.14': [(<numba.core.ir.Assign object at 0x000001F6E67C36E0>,
                                     54)],
             '$138load_attr.17': [(<numba.core.ir.Assign object at 0x000001F6E67D8AD0>,
                                   54)],
             '$162load_attr.20': [(<numba.core.ir.Assign object at 0x000001F6E67D8C20>,
                                   54)],
             '$190call.24': [(<numba.core.ir.Assign object at 0x000001F6E67D9E80>,
                              54)],
             '$200return_const.26': [(<numba.core.ir.Assign object at 0x000001F6E67DA9C0>,
                                      54)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67C2F90>,
                                    202)],
             '$214call.3': [(<numba.core.ir.Assign object at 0x000001F6E67D9820>,
                             202)],
             '$222get_iter.4': [(<numba.core.ir.Assign object at 0x000001F6E67DBE90>,
                                 202)],
             '$224for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E67DA600>,
                                 224)],
             '$224for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E67DA6F0>,
                                 224)],
             '$224for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E67DA870>,
                                 224)],
             '$230load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E67DAD50>,
                                    228)],
             '$250load_global.8': [(<numba.core.ir.Assign object at 0x000001F6E67D92B0>,
                                    228)],
             '$270call.14': [(<numba.core.ir.Assign object at 0x000001F6E67D94F0>,
                              228)],
             '$278call.15': [(<numba.core.ir.Assign object at 0x000001F6E67D99A0>,
                              228)],
             '$28load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67E4140>,
                                 0)],
             '$292return_const.3': [(<numba.core.ir.Assign object at 0x000001F6E67D9A90>,
                                     290)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x000001F6E668E960>,
                                  0)],
             '$52pred': [(<numba.core.ir.Assign object at 0x000001F6E67C31D0>,
                          0)],
             '$54load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67C3170>,
                                   54)],
             '$66load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67C3050>,
                                 54)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E67E4CB0>,
                                0)],
             '$binop_add246.7': [(<numba.core.ir.Assign object at 0x000001F6E67D9160>,
                                  228)],
             '$binop_add266.13': [(<numba.core.ir.Assign object at 0x000001F6E67D9700>,
                                   228)],
             '$const186.23.1': [(<numba.core.ir.Assign object at 0x000001F6E67D9CD0>,
                                 54)],
             '$const200.25': [(<numba.core.ir.Assign object at 0x000001F6E67D9FA0>,
                               54)],
             '$const292.2': [(<numba.core.ir.Assign object at 0x000001F6E67D93A0>,
                              290)],
             '$phi224.0': [(<numba.core.ir.Assign object at 0x000001F6E67C3980>,
                            202)],
             '$phi228.1': [(<numba.core.ir.Assign object at 0x000001F6E67DA270>,
                            224)],
             'bool52': [(<numba.core.ir.Assign object at 0x000001F6E67C3110>,
                         0)],
             'byte_width': [(<numba.core.ir.Assign object at 0x000001F6E67C35F0>,
                             54)],
             'dst': [(<numba.core.ir.Assign object at 0x000001F6E67E48F0>, 0)],
             'dst_byte_offset': [(<numba.core.ir.Assign object at 0x000001F6E67C3AD0>,
                                  54)],
             'dst_offset': [(<numba.core.ir.Assign object at 0x000001F6E67E4830>,
                             0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E67DAC00>, 228)],
             'n': [(<numba.core.ir.Assign object at 0x000001F6E67E52E0>, 0)],
             'nbytes': [(<numba.core.ir.Assign object at 0x000001F6E67C3410>,
                         54)],
             'src': [(<numba.core.ir.Assign object at 0x000001F6E67E4710>, 0)],
             'src_byte_offset': [(<numba.core.ir.Assign object at 0x000001F6E67C2BD0>,
                                  54)],
             'src_offset': [(<numba.core.ir.Assign object at 0x000001F6E67E5250>,
                             0)]})
2025-07-23 17:15:49,823 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67E4500>
2025-07-23 17:15:49,832 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=400)
           2	RESUME(arg=0, lineno=400)
           4	LOAD_FAST(arg=0, lineno=402)
           6	LOAD_GLOBAL(arg=0, lineno=402)
          16	COMPARE_OP(arg=40, lineno=402)
          20	POP_JUMP_IF_FALSE(arg=1, lineno=402)
          22	RETURN_CONST(arg=1, lineno=403)
>         24	LOAD_FAST(arg=0, lineno=404)
          26	LOAD_GLOBAL(arg=2, lineno=404)
          36	COMPARE_OP(arg=40, lineno=404)
          40	POP_JUMP_IF_FALSE(arg=1, lineno=404)
          42	RETURN_CONST(arg=2, lineno=405)
>         44	LOAD_FAST(arg=0, lineno=406)
          46	LOAD_GLOBAL(arg=4, lineno=406)
          56	COMPARE_OP(arg=40, lineno=406)
          60	POP_JUMP_IF_FALSE(arg=1, lineno=406)
          62	RETURN_CONST(arg=3, lineno=407)
>         64	LOAD_GLOBAL(arg=7, lineno=409)
          74	LOAD_CONST(arg=4, lineno=409)
          76	CALL(arg=1, lineno=409)
          84	RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:49,832 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,832 - DEBUG - stack: []
2025-07-23 17:15:49,832 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,833 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=400)
2025-07-23 17:15:49,833 - DEBUG - stack []
2025-07-23 17:15:49,833 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=400)
2025-07-23 17:15:49,833 - DEBUG - stack []
2025-07-23 17:15:49,833 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=402)
2025-07-23 17:15:49,833 - DEBUG - stack []
2025-07-23 17:15:49,833 - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=402)
2025-07-23 17:15:49,834 - DEBUG - stack ['$kind4.0']
2025-07-23 17:15:49,834 - DEBUG - dispatch pc=16, inst=COMPARE_OP(arg=40, lineno=402)
2025-07-23 17:15:49,834 - DEBUG - stack ['$kind4.0', '$6load_global.1']
2025-07-23 17:15:49,834 - DEBUG - dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=1, lineno=402)
2025-07-23 17:15:49,834 - DEBUG - stack ['$16compare_op.2']
2025-07-23 17:15:49,834 - DEBUG - end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=24, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,835 - DEBUG - pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:49,835 - DEBUG - stack: []
2025-07-23 17:15:49,835 - DEBUG - state.pc_initial: State(pc_initial=22 nstack_initial=0)
2025-07-23 17:15:49,835 - DEBUG - dispatch pc=22, inst=RETURN_CONST(arg=1, lineno=403)
2025-07-23 17:15:49,835 - DEBUG - stack []
2025-07-23 17:15:49,835 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,835 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=0)])
2025-07-23 17:15:49,836 - DEBUG - stack: []
2025-07-23 17:15:49,836 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=0)
2025-07-23 17:15:49,836 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=404)
2025-07-23 17:15:49,836 - DEBUG - stack []
2025-07-23 17:15:49,836 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=404)
2025-07-23 17:15:49,836 - DEBUG - stack ['$kind24.0']
2025-07-23 17:15:49,836 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=404)
2025-07-23 17:15:49,836 - DEBUG - stack ['$kind24.0', '$26load_global.1']
2025-07-23 17:15:49,837 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=1, lineno=404)
2025-07-23 17:15:49,837 - DEBUG - stack ['$36compare_op.2']
2025-07-23 17:15:49,837 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,837 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:49,837 - DEBUG - stack: []
2025-07-23 17:15:49,837 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:49,837 - DEBUG - dispatch pc=42, inst=RETURN_CONST(arg=2, lineno=405)
2025-07-23 17:15:49,838 - DEBUG - stack []
2025-07-23 17:15:49,838 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,838 - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0)])
2025-07-23 17:15:49,838 - DEBUG - stack: []
2025-07-23 17:15:49,838 - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-07-23 17:15:49,838 - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=406)
2025-07-23 17:15:49,838 - DEBUG - stack []
2025-07-23 17:15:49,838 - DEBUG - dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=406)
2025-07-23 17:15:49,838 - DEBUG - stack ['$kind44.0']
2025-07-23 17:15:49,839 - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=40, lineno=406)
2025-07-23 17:15:49,839 - DEBUG - stack ['$kind44.0', '$46load_global.1']
2025-07-23 17:15:49,839 - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=1, lineno=406)
2025-07-23 17:15:49,839 - DEBUG - stack ['$56compare_op.2']
2025-07-23 17:15:49,839 - DEBUG - end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=64, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,839 - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:49,839 - DEBUG - stack: []
2025-07-23 17:15:49,839 - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=0)
2025-07-23 17:15:49,839 - DEBUG - dispatch pc=62, inst=RETURN_CONST(arg=3, lineno=407)
2025-07-23 17:15:49,839 - DEBUG - stack []
2025-07-23 17:15:49,839 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,839 - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0)])
2025-07-23 17:15:49,840 - DEBUG - stack: []
2025-07-23 17:15:49,840 - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-07-23 17:15:49,840 - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=7, lineno=409)
2025-07-23 17:15:49,840 - DEBUG - stack []
2025-07-23 17:15:49,840 - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=409)
2025-07-23 17:15:49,841 - DEBUG - stack ['$null$64.1', '$64load_global.0']
2025-07-23 17:15:49,841 - DEBUG - dispatch pc=76, inst=CALL(arg=1, lineno=409)
2025-07-23 17:15:49,842 - DEBUG - stack ['$null$64.1', '$64load_global.0', '$const74.2.4']
2025-07-23 17:15:49,842 - DEBUG - dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=409)
2025-07-23 17:15:49,842 - DEBUG - stack ['$76call.3']
2025-07-23 17:15:49,842 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,842 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,843 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set()})
2025-07-23 17:15:49,843 - DEBUG - defmap: {}
2025-07-23 17:15:49,843 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,843 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,843 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,843 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,844 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind4.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (16, {'lhs': '$kind4.0', 'rhs': '$6load_global.1', 'res': '$16compare_op.2'}), (20, {'pred': '$16compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 24: ()})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'retval': '$const22.0', 'castval': '$22return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=24 nstack_initial=0):
AdaptBlockInfo(insts=((24, {'res': '$kind24.0'}), (26, {'idx': 1, 'res': '$26load_global.1'}), (36, {'lhs': '$kind24.0', 'rhs': '$26load_global.1', 'res': '$36compare_op.2'}), (40, {'pred': '$36compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 44: ()})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'retval': '$const42.0', 'castval': '$42return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$kind44.0'}), (46, {'idx': 2, 'res': '$46load_global.1'}), (56, {'lhs': '$kind44.0', 'rhs': '$46load_global.1', 'res': '$56compare_op.2'}), (60, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 64: ()})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'retval': '$const62.0', 'castval': '$62return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,844 - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'idx': 3, 'res': '$64load_global.0'}), (74, {'res': '$const74.2.4'}), (76, {'func': '$64load_global.0', 'args': ['$const74.2.4'], 'kw_names': None, 'res': '$76call.3'}), (84, {'exc': '$76call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,845 - DEBUG - label 0:
    kind = arg(0, name=kind)                 ['kind']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $16compare_op.2 = kind == $6load_global.1 ['$16compare_op.2', '$6load_global.1', 'kind']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None) ['$16compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 24                   ['$20pred']
label 22:
    $const22.0 = const(int, 1)               ['$const22.0']
    $22return_const.1 = cast(value=$const22.0) ['$22return_const.1', '$const22.0']
    return $22return_const.1                 ['$22return_const.1']
label 24:
    $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$26load_global.1']
    $36compare_op.2 = kind == $26load_global.1 ['$26load_global.1', '$36compare_op.2', 'kind']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.2', '$40pred', 'bool40']
    branch $40pred, 42, 44                   ['$40pred']
label 42:
    $const42.0 = const(int, 2)               ['$const42.0']
    $42return_const.1 = cast(value=$const42.0) ['$42return_const.1', '$const42.0']
    return $42return_const.1                 ['$42return_const.1']
label 44:
    $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$46load_global.1']
    $56compare_op.2 = kind == $46load_global.1 ['$46load_global.1', '$56compare_op.2', 'kind']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$60pred', 'bool60']
    branch $60pred, 62, 64                   ['$60pred']
label 62:
    $const62.0 = const(int, 4)               ['$const62.0']
    $62return_const.1 = cast(value=$const62.0) ['$62return_const.1', '$const62.0']
    return $62return_const.1                 ['$62return_const.1']
label 64:
    $64load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$64load_global.0']
    $const74.2.4 = const(str, Unexpected unicode encoding encountered) ['$const74.2.4']
    $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.0', '$76call.3', '$const74.2.4']
    raise $76call.3                          ['$76call.3']

2025-07-23 17:15:49,852 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,852 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,852 - DEBUG - on stmt: kind = arg(0, name=kind)
2025-07-23 17:15:49,852 - DEBUG - on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:49,852 - DEBUG - on stmt: $16compare_op.2 = kind == $6load_global.1
2025-07-23 17:15:49,852 - DEBUG - on stmt: bool20 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,853 - DEBUG - on stmt: $20pred = call bool20($16compare_op.2, func=bool20, args=(Var($16compare_op.2, unicode.py:402),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,853 - DEBUG - on stmt: branch $20pred, 22, 24
2025-07-23 17:15:49,853 - DEBUG - ==== SSA block analysis pass on 22
2025-07-23 17:15:49,853 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,853 - DEBUG - on stmt: $const22.0 = const(int, 1)
2025-07-23 17:15:49,854 - DEBUG - on stmt: $22return_const.1 = cast(value=$const22.0)
2025-07-23 17:15:49,854 - DEBUG - on stmt: return $22return_const.1
2025-07-23 17:15:49,854 - DEBUG - ==== SSA block analysis pass on 24
2025-07-23 17:15:49,854 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,854 - DEBUG - on stmt: $26load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:49,855 - DEBUG - on stmt: $36compare_op.2 = kind == $26load_global.1
2025-07-23 17:15:49,855 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,855 - DEBUG - on stmt: $40pred = call bool40($36compare_op.2, func=bool40, args=(Var($36compare_op.2, unicode.py:404),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,856 - DEBUG - on stmt: branch $40pred, 42, 44
2025-07-23 17:15:49,856 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:49,856 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,856 - DEBUG - on stmt: $const42.0 = const(int, 2)
2025-07-23 17:15:49,856 - DEBUG - on stmt: $42return_const.1 = cast(value=$const42.0)
2025-07-23 17:15:49,856 - DEBUG - on stmt: return $42return_const.1
2025-07-23 17:15:49,857 - DEBUG - ==== SSA block analysis pass on 44
2025-07-23 17:15:49,857 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,857 - DEBUG - on stmt: $46load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,857 - DEBUG - on stmt: $56compare_op.2 = kind == $46load_global.1
2025-07-23 17:15:49,857 - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,857 - DEBUG - on stmt: $60pred = call bool60($56compare_op.2, func=bool60, args=(Var($56compare_op.2, unicode.py:406),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,857 - DEBUG - on stmt: branch $60pred, 62, 64
2025-07-23 17:15:49,857 - DEBUG - ==== SSA block analysis pass on 62
2025-07-23 17:15:49,857 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,858 - DEBUG - on stmt: $const62.0 = const(int, 4)
2025-07-23 17:15:49,858 - DEBUG - on stmt: $62return_const.1 = cast(value=$const62.0)
2025-07-23 17:15:49,858 - DEBUG - on stmt: return $62return_const.1
2025-07-23 17:15:49,858 - DEBUG - ==== SSA block analysis pass on 64
2025-07-23 17:15:49,858 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67D3980>
2025-07-23 17:15:49,858 - DEBUG - on stmt: $64load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:49,858 - DEBUG - on stmt: $const74.2.4 = const(str, Unexpected unicode encoding encountered)
2025-07-23 17:15:49,858 - DEBUG - on stmt: $76call.3 = call $64load_global.0($const74.2.4, func=$64load_global.0, args=[Var($const74.2.4, unicode.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,858 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode encoding encountered')
2025-07-23 17:15:49,858 - DEBUG - defs defaultdict(<class 'list'>,
            {'$16compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E67D2840>,
                                  0)],
             '$20pred': [(<numba.core.ir.Assign object at 0x000001F6E67D0620>,
                          0)],
             '$22return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E67D1C70>,
                                    22)],
             '$26load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E67D2120>,
                                   24)],
             '$36compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E67D2990>,
                                  24)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E67DAFC0>,
                          24)],
             '$42return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E67D85C0>,
                                    42)],
             '$46load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E67D85F0>,
                                   44)],
             '$56compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E67D8710>,
                                  44)],
             '$60pred': [(<numba.core.ir.Assign object at 0x000001F6E67D04D0>,
                          44)],
             '$62return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E67D3B30>,
                                    62)],
             '$64load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E67D3770>,
                                   64)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E67D2510>,
                                  0)],
             '$76call.3': [(<numba.core.ir.Assign object at 0x000001F6E67D3470>,
                            64)],
             '$const22.0': [(<numba.core.ir.Assign object at 0x000001F6E67D1CD0>,
                             22)],
             '$const42.0': [(<numba.core.ir.Assign object at 0x000001F6E67DB380>,
                             42)],
             '$const62.0': [(<numba.core.ir.Assign object at 0x000001F6E67D3F20>,
                             62)],
             '$const74.2.4': [(<numba.core.ir.Assign object at 0x000001F6E67D2720>,
                               64)],
             'bool20': [(<numba.core.ir.Assign object at 0x000001F6E67D1EB0>,
                         0)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E67D2A80>,
                         24)],
             'bool60': [(<numba.core.ir.Assign object at 0x000001F6E67D8230>,
                         44)],
             'kind': [(<numba.core.ir.Assign object at 0x000001F6E67D0200>,
                       0)]})
2025-07-23 17:15:49,859 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67D3980>
2025-07-23 17:15:49,918 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=290)
           2	RESUME(arg=0, lineno=290)
           4	LOAD_FAST(arg=0, lineno=292)
           6	LOAD_ATTR(arg=0, lineno=292)
          26	LOAD_GLOBAL(arg=2, lineno=292)
          36	COMPARE_OP(arg=40, lineno=292)
          40	POP_JUMP_IF_FALSE(arg=22, lineno=292)
          42	LOAD_GLOBAL(arg=5, lineno=293)
          52	LOAD_FAST(arg=0, lineno=293)
          54	LOAD_ATTR(arg=6, lineno=293)
          74	LOAD_FAST(arg=1, lineno=293)
          76	CALL(arg=2, lineno=293)
          84	RETURN_VALUE(arg=None, lineno=293)
>         86	LOAD_FAST(arg=0, lineno=294)
          88	LOAD_ATTR(arg=0, lineno=294)
         108	LOAD_GLOBAL(arg=8, lineno=294)
         118	COMPARE_OP(arg=40, lineno=294)
         122	POP_JUMP_IF_FALSE(arg=22, lineno=294)
         124	LOAD_GLOBAL(arg=11, lineno=295)
         134	LOAD_FAST(arg=0, lineno=295)
         136	LOAD_ATTR(arg=6, lineno=295)
         156	LOAD_FAST(arg=1, lineno=295)
         158	CALL(arg=2, lineno=295)
         166	RETURN_VALUE(arg=None, lineno=295)
>        168	LOAD_FAST(arg=0, lineno=296)
         170	LOAD_ATTR(arg=0, lineno=296)
         190	LOAD_GLOBAL(arg=12, lineno=296)
         200	COMPARE_OP(arg=40, lineno=296)
         204	POP_JUMP_IF_FALSE(arg=22, lineno=296)
         206	LOAD_GLOBAL(arg=15, lineno=297)
         216	LOAD_FAST(arg=0, lineno=297)
         218	LOAD_ATTR(arg=6, lineno=297)
         238	LOAD_FAST(arg=1, lineno=297)
         240	CALL(arg=2, lineno=297)
         248	RETURN_VALUE(arg=None, lineno=297)
>        250	RETURN_CONST(arg=1, lineno=301)
2025-07-23 17:15:49,918 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,919 - DEBUG - stack: []
2025-07-23 17:15:49,919 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:49,919 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=290)
2025-07-23 17:15:49,919 - DEBUG - stack []
2025-07-23 17:15:49,919 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=290)
2025-07-23 17:15:49,919 - DEBUG - stack []
2025-07-23 17:15:49,919 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=292)
2025-07-23 17:15:49,920 - DEBUG - stack []
2025-07-23 17:15:49,920 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=292)
2025-07-23 17:15:49,920 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:49,920 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=292)
2025-07-23 17:15:49,921 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:49,921 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=292)
2025-07-23 17:15:49,921 - DEBUG - stack ['$6load_attr.1', '$26load_global.2']
2025-07-23 17:15:49,921 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=22, lineno=292)
2025-07-23 17:15:49,921 - DEBUG - stack ['$36compare_op.3']
2025-07-23 17:15:49,922 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,922 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
2025-07-23 17:15:49,922 - DEBUG - stack: []
2025-07-23 17:15:49,922 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:49,922 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=293)
2025-07-23 17:15:49,923 - DEBUG - stack []
2025-07-23 17:15:49,923 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=293)
2025-07-23 17:15:49,923 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:15:49,923 - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=293)
2025-07-23 17:15:49,923 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$a52.2']
2025-07-23 17:15:49,923 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=293)
2025-07-23 17:15:49,923 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3']
2025-07-23 17:15:49,923 - DEBUG - dispatch pc=76, inst=CALL(arg=2, lineno=293)
2025-07-23 17:15:49,924 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4']
2025-07-23 17:15:49,924 - DEBUG - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=293)
2025-07-23 17:15:49,924 - DEBUG - stack ['$76call.5']
2025-07-23 17:15:49,924 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,924 - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0)])
2025-07-23 17:15:49,924 - DEBUG - stack: []
2025-07-23 17:15:49,924 - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
2025-07-23 17:15:49,924 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=294)
2025-07-23 17:15:49,924 - DEBUG - stack []
2025-07-23 17:15:49,925 - DEBUG - dispatch pc=88, inst=LOAD_ATTR(arg=0, lineno=294)
2025-07-23 17:15:49,925 - DEBUG - stack ['$a86.0']
2025-07-23 17:15:49,925 - DEBUG - dispatch pc=108, inst=LOAD_GLOBAL(arg=8, lineno=294)
2025-07-23 17:15:49,925 - DEBUG - stack ['$88load_attr.1']
2025-07-23 17:15:49,925 - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=40, lineno=294)
2025-07-23 17:15:49,925 - DEBUG - stack ['$88load_attr.1', '$108load_global.2']
2025-07-23 17:15:49,925 - DEBUG - dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=22, lineno=294)
2025-07-23 17:15:49,925 - DEBUG - stack ['$118compare_op.3']
2025-07-23 17:15:49,925 - DEBUG - end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=168, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,926 - DEBUG - pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=168 nstack_initial=0)])
2025-07-23 17:15:49,926 - DEBUG - stack: []
2025-07-23 17:15:49,926 - DEBUG - state.pc_initial: State(pc_initial=124 nstack_initial=0)
2025-07-23 17:15:49,926 - DEBUG - dispatch pc=124, inst=LOAD_GLOBAL(arg=11, lineno=295)
2025-07-23 17:15:49,926 - DEBUG - stack []
2025-07-23 17:15:49,926 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=0, lineno=295)
2025-07-23 17:15:49,926 - DEBUG - stack ['$null$124.1', '$124load_global.0']
2025-07-23 17:15:49,926 - DEBUG - dispatch pc=136, inst=LOAD_ATTR(arg=6, lineno=295)
2025-07-23 17:15:49,926 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$a134.2']
2025-07-23 17:15:49,927 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=295)
2025-07-23 17:15:49,927 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$136load_attr.3']
2025-07-23 17:15:49,927 - DEBUG - dispatch pc=158, inst=CALL(arg=2, lineno=295)
2025-07-23 17:15:49,927 - DEBUG - stack ['$null$124.1', '$124load_global.0', '$136load_attr.3', '$i156.4']
2025-07-23 17:15:49,927 - DEBUG - dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=295)
2025-07-23 17:15:49,927 - DEBUG - stack ['$158call.5']
2025-07-23 17:15:49,927 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,927 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0)])
2025-07-23 17:15:49,927 - DEBUG - stack: []
2025-07-23 17:15:49,927 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2025-07-23 17:15:49,927 - DEBUG - dispatch pc=168, inst=LOAD_FAST(arg=0, lineno=296)
2025-07-23 17:15:49,927 - DEBUG - stack []
2025-07-23 17:15:49,927 - DEBUG - dispatch pc=170, inst=LOAD_ATTR(arg=0, lineno=296)
2025-07-23 17:15:49,929 - DEBUG - stack ['$a168.0']
2025-07-23 17:15:49,929 - DEBUG - dispatch pc=190, inst=LOAD_GLOBAL(arg=12, lineno=296)
2025-07-23 17:15:49,929 - DEBUG - stack ['$170load_attr.1']
2025-07-23 17:15:49,929 - DEBUG - dispatch pc=200, inst=COMPARE_OP(arg=40, lineno=296)
2025-07-23 17:15:49,929 - DEBUG - stack ['$170load_attr.1', '$190load_global.2']
2025-07-23 17:15:49,929 - DEBUG - dispatch pc=204, inst=POP_JUMP_IF_FALSE(arg=22, lineno=296)
2025-07-23 17:15:49,930 - DEBUG - stack ['$200compare_op.3']
2025-07-23 17:15:49,931 - DEBUG - end state. edges=[Edge(pc=206, stack=(), blockstack=(), npush=0), Edge(pc=250, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:49,932 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=250 nstack_initial=0)])
2025-07-23 17:15:49,932 - DEBUG - stack: []
2025-07-23 17:15:49,932 - DEBUG - state.pc_initial: State(pc_initial=206 nstack_initial=0)
2025-07-23 17:15:49,932 - DEBUG - dispatch pc=206, inst=LOAD_GLOBAL(arg=15, lineno=297)
2025-07-23 17:15:49,932 - DEBUG - stack []
2025-07-23 17:15:49,932 - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=297)
2025-07-23 17:15:49,932 - DEBUG - stack ['$null$206.1', '$206load_global.0']
2025-07-23 17:15:49,932 - DEBUG - dispatch pc=218, inst=LOAD_ATTR(arg=6, lineno=297)
2025-07-23 17:15:49,933 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$a216.2']
2025-07-23 17:15:49,933 - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=297)
2025-07-23 17:15:49,933 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$218load_attr.3']
2025-07-23 17:15:49,933 - DEBUG - dispatch pc=240, inst=CALL(arg=2, lineno=297)
2025-07-23 17:15:49,933 - DEBUG - stack ['$null$206.1', '$206load_global.0', '$218load_attr.3', '$i238.4']
2025-07-23 17:15:49,933 - DEBUG - dispatch pc=248, inst=RETURN_VALUE(arg=None, lineno=297)
2025-07-23 17:15:49,933 - DEBUG - stack ['$240call.5']
2025-07-23 17:15:49,933 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,933 - DEBUG - pending: deque([State(pc_initial=250 nstack_initial=0)])
2025-07-23 17:15:49,934 - DEBUG - stack: []
2025-07-23 17:15:49,934 - DEBUG - state.pc_initial: State(pc_initial=250 nstack_initial=0)
2025-07-23 17:15:49,934 - DEBUG - dispatch pc=250, inst=RETURN_CONST(arg=1, lineno=301)
2025-07-23 17:15:49,934 - DEBUG - stack []
2025-07-23 17:15:49,934 - DEBUG - end state. edges=[]
2025-07-23 17:15:49,934 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:49,934 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=250 nstack_initial=0): set()})
2025-07-23 17:15:49,935 - DEBUG - defmap: {}
2025-07-23 17:15:49,935 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,935 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:49,935 - DEBUG - keep phismap: {}
2025-07-23 17:15:49,935 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:49,936 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:49,936 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'idx': 1, 'res': '$26load_global.2'}), (36, {'lhs': '$6load_attr.1', 'rhs': '$26load_global.2', 'res': '$36compare_op.3'}), (40, {'pred': '$36compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 86: ()})
2025-07-23 17:15:49,936 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 2, 'res': '$42load_global.0'}), (52, {'res': '$a52.2'}), (54, {'item': '$a52.2', 'res': '$54load_attr.3'}), (74, {'res': '$i74.4'}), (76, {'func': '$42load_global.0', 'args': ['$54load_attr.3', '$i74.4'], 'kw_names': None, 'res': '$76call.5'}), (84, {'retval': '$76call.5', 'castval': '$84return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,936 - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_attr.1'}), (108, {'idx': 4, 'res': '$108load_global.2'}), (118, {'lhs': '$88load_attr.1', 'rhs': '$108load_global.2', 'res': '$118compare_op.3'}), (122, {'pred': '$118compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 168: ()})
2025-07-23 17:15:49,937 - DEBUG - block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'idx': 5, 'res': '$124load_global.0'}), (134, {'res': '$a134.2'}), (136, {'item': '$a134.2', 'res': '$136load_attr.3'}), (156, {'res': '$i156.4'}), (158, {'func': '$124load_global.0', 'args': ['$136load_attr.3', '$i156.4'], 'kw_names': None, 'res': '$158call.5'}), (166, {'retval': '$158call.5', 'castval': '$166return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,937 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$a168.0'}), (170, {'item': '$a168.0', 'res': '$170load_attr.1'}), (190, {'idx': 6, 'res': '$190load_global.2'}), (200, {'lhs': '$170load_attr.1', 'rhs': '$190load_global.2', 'res': '$200compare_op.3'}), (204, {'pred': '$200compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: (), 250: ()})
2025-07-23 17:15:49,937 - DEBUG - block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'idx': 7, 'res': '$206load_global.0'}), (216, {'res': '$a216.2'}), (218, {'item': '$a216.2', 'res': '$218load_attr.3'}), (238, {'res': '$i238.4'}), (240, {'func': '$206load_global.0', 'args': ['$218load_attr.3', '$i238.4'], 'kw_names': None, 'res': '$240call.5'}), (248, {'retval': '$240call.5', 'castval': '$248return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,937 - DEBUG - block_infos State(pc_initial=250 nstack_initial=0):
AdaptBlockInfo(insts=((250, {'retval': '$const250.0', 'castval': '$250return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:49,939 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$26load_global.2']
    $36compare_op.3 = $6load_attr.1 == $26load_global.2 ['$26load_global.2', '$36compare_op.3', '$6load_attr.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 86                   ['$40pred']
label 42:
    $42load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$42load_global.0']
    $54load_attr.3 = getattr(value=a, attr=_data) ['$54load_attr.3', 'a']
    $76call.5 = call $42load_global.0($54load_attr.3, i, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$54load_attr.3', '$76call.5', 'i']
    $84return_value.6 = cast(value=$76call.5) ['$76call.5', '$84return_value.6']
    return $84return_value.6                 ['$84return_value.6']
label 86:
    $88load_attr.1 = getattr(value=a, attr=_kind) ['$88load_attr.1', 'a']
    $108load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$108load_global.2']
    $118compare_op.3 = $88load_attr.1 == $108load_global.2 ['$108load_global.2', '$118compare_op.3', '$88load_attr.1']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($118compare_op.3, func=bool122, args=(Var($118compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.3', '$122pred', 'bool122']
    branch $122pred, 124, 168                ['$122pred']
label 124:
    $124load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$124load_global.0']
    $136load_attr.3 = getattr(value=a, attr=_data) ['$136load_attr.3', 'a']
    $158call.5 = call $124load_global.0($136load_attr.3, i, func=$124load_global.0, args=[Var($136load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_global.0', '$136load_attr.3', '$158call.5', 'i']
    $166return_value.6 = cast(value=$158call.5) ['$158call.5', '$166return_value.6']
    return $166return_value.6                ['$166return_value.6']
label 168:
    $170load_attr.1 = getattr(value=a, attr=_kind) ['$170load_attr.1', 'a']
    $190load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$190load_global.2']
    $200compare_op.3 = $170load_attr.1 == $190load_global.2 ['$170load_attr.1', '$190load_global.2', '$200compare_op.3']
    bool204 = global(bool: <class 'bool'>)   ['bool204']
    $204pred = call bool204($200compare_op.3, func=bool204, args=(Var($200compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$200compare_op.3', '$204pred', 'bool204']
    branch $204pred, 206, 250                ['$204pred']
label 206:
    $206load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$206load_global.0']
    $218load_attr.3 = getattr(value=a, attr=_data) ['$218load_attr.3', 'a']
    $240call.5 = call $206load_global.0($218load_attr.3, i, func=$206load_global.0, args=[Var($218load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_global.0', '$218load_attr.3', '$240call.5', 'i']
    $248return_value.6 = cast(value=$240call.5) ['$240call.5', '$248return_value.6']
    return $248return_value.6                ['$248return_value.6']
label 250:
    $const250.0 = const(int, 0)              ['$const250.0']
    $250return_const.1 = cast(value=$const250.0) ['$250return_const.1', '$const250.0']
    return $250return_const.1                ['$250return_const.1']

2025-07-23 17:15:49,942 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:49,942 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,943 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:49,943 - DEBUG - on stmt: i = arg(1, name=i)
2025-07-23 17:15:49,943 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,943 - DEBUG - on stmt: $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:49,943 - DEBUG - on stmt: $36compare_op.3 = $6load_attr.1 == $26load_global.2
2025-07-23 17:15:49,943 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,943 - DEBUG - on stmt: $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,944 - DEBUG - on stmt: branch $40pred, 42, 86
2025-07-23 17:15:49,944 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:49,944 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,944 - DEBUG - on stmt: $42load_global.0 = global(deref_uint8: <intrinsic deref_uint8>)
2025-07-23 17:15:49,944 - DEBUG - on stmt: $54load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,944 - DEBUG - on stmt: $76call.5 = call $42load_global.0($54load_attr.3, i, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,944 - DEBUG - on stmt: $84return_value.6 = cast(value=$76call.5)
2025-07-23 17:15:49,944 - DEBUG - on stmt: return $84return_value.6
2025-07-23 17:15:49,945 - DEBUG - ==== SSA block analysis pass on 86
2025-07-23 17:15:49,945 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,945 - DEBUG - on stmt: $88load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,945 - DEBUG - on stmt: $108load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:49,945 - DEBUG - on stmt: $118compare_op.3 = $88load_attr.1 == $108load_global.2
2025-07-23 17:15:49,945 - DEBUG - on stmt: bool122 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,945 - DEBUG - on stmt: $122pred = call bool122($118compare_op.3, func=bool122, args=(Var($118compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,945 - DEBUG - on stmt: branch $122pred, 124, 168
2025-07-23 17:15:49,945 - DEBUG - ==== SSA block analysis pass on 124
2025-07-23 17:15:49,946 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,946 - DEBUG - on stmt: $124load_global.0 = global(deref_uint16: <intrinsic deref_uint16>)
2025-07-23 17:15:49,946 - DEBUG - on stmt: $136load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,946 - DEBUG - on stmt: $158call.5 = call $124load_global.0($136load_attr.3, i, func=$124load_global.0, args=[Var($136load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,946 - DEBUG - on stmt: $166return_value.6 = cast(value=$158call.5)
2025-07-23 17:15:49,946 - DEBUG - on stmt: return $166return_value.6
2025-07-23 17:15:49,946 - DEBUG - ==== SSA block analysis pass on 168
2025-07-23 17:15:49,946 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,947 - DEBUG - on stmt: $170load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $190load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $200compare_op.3 = $170load_attr.1 == $190load_global.2
2025-07-23 17:15:49,947 - DEBUG - on stmt: bool204 = global(bool: <class 'bool'>)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $204pred = call bool204($200compare_op.3, func=bool204, args=(Var($200compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,947 - DEBUG - on stmt: branch $204pred, 206, 250
2025-07-23 17:15:49,947 - DEBUG - ==== SSA block analysis pass on 206
2025-07-23 17:15:49,947 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,947 - DEBUG - on stmt: $206load_global.0 = global(deref_uint32: <intrinsic deref_uint32>)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $218load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $240call.5 = call $206load_global.0($218load_attr.3, i, func=$206load_global.0, args=[Var($218load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:49,947 - DEBUG - on stmt: $248return_value.6 = cast(value=$240call.5)
2025-07-23 17:15:49,947 - DEBUG - on stmt: return $248return_value.6
2025-07-23 17:15:49,949 - DEBUG - ==== SSA block analysis pass on 250
2025-07-23 17:15:49,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67639E0>
2025-07-23 17:15:49,949 - DEBUG - on stmt: $const250.0 = const(int, 0)
2025-07-23 17:15:49,949 - DEBUG - on stmt: $250return_const.1 = cast(value=$const250.0)
2025-07-23 17:15:49,949 - DEBUG - on stmt: return $250return_const.1
2025-07-23 17:15:49,949 - DEBUG - defs defaultdict(<class 'list'>,
            {'$108load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66EB500>,
                                    86)],
             '$118compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E66E8710>,
                                   86)],
             '$122pred': [(<numba.core.ir.Assign object at 0x000001F6E66E8A10>,
                           86)],
             '$124load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66E9E50>,
                                    124)],
             '$136load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E66EA8D0>,
                                  124)],
             '$158call.5': [(<numba.core.ir.Assign object at 0x000001F6E66EA870>,
                             124)],
             '$166return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E66EAC30>,
                                     124)],
             '$170load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66E9670>,
                                  168)],
             '$190load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66E9F70>,
                                    168)],
             '$200compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E6761220>,
                                   168)],
             '$204pred': [(<numba.core.ir.Assign object at 0x000001F6E67616A0>,
                           168)],
             '$206load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6738140>,
                                    206)],
             '$218load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E67DA480>,
                                  206)],
             '$240call.5': [(<numba.core.ir.Assign object at 0x000001F6E67D3230>,
                             206)],
             '$248return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E67D3980>,
                                     206)],
             '$250return_const.1': [(<numba.core.ir.Assign object at 0x000001F6E66E9DF0>,
                                     250)],
             '$26load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E66E8140>,
                                   0)],
             '$36compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E66E8B90>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E66EAA20>,
                          0)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E66E8C50>,
                                   42)],
             '$54load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E66EA540>,
                                 42)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66EA060>,
                                0)],
             '$76call.5': [(<numba.core.ir.Assign object at 0x000001F6E66E8890>,
                            42)],
             '$84return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E66E8C80>,
                                    42)],
             '$88load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E66E91C0>,
                                 86)],
             '$const250.0': [(<numba.core.ir.Assign object at 0x000001F6E66EA0F0>,
                              250)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E66E8D40>, 0)],
             'bool122': [(<numba.core.ir.Assign object at 0x000001F6E66EA810>,
                          86)],
             'bool204': [(<numba.core.ir.Assign object at 0x000001F6E6760C50>,
                          168)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E66EAED0>,
                         0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E66E9730>, 0)]})
2025-07-23 17:15:49,951 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67639E0>
2025-07-23 17:15:49,999 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=336)
           2	RESUME(arg=0, lineno=336)
           4	LOAD_FAST(arg=0, lineno=344)
           6	LOAD_ATTR(arg=0, lineno=344)
          26	LOAD_GLOBAL(arg=2, lineno=344)
          36	COMPARE_OP(arg=40, lineno=344)
          40	POP_JUMP_IF_FALSE(arg=24, lineno=344)
          42	LOAD_GLOBAL(arg=5, lineno=345)
          52	LOAD_FAST(arg=0, lineno=345)
          54	LOAD_ATTR(arg=6, lineno=345)
          74	LOAD_FAST(arg=1, lineno=345)
          76	LOAD_FAST(arg=2, lineno=345)
          78	CALL(arg=3, lineno=345)
          86	POP_TOP(arg=None, lineno=345)
          88	RETURN_CONST(arg=0, lineno=345)
>         90	LOAD_FAST(arg=0, lineno=346)
          92	LOAD_ATTR(arg=0, lineno=346)
         112	LOAD_GLOBAL(arg=8, lineno=346)
         122	COMPARE_OP(arg=40, lineno=346)
         126	POP_JUMP_IF_FALSE(arg=24, lineno=346)
         128	LOAD_GLOBAL(arg=11, lineno=347)
         138	LOAD_FAST(arg=0, lineno=347)
         140	LOAD_ATTR(arg=6, lineno=347)
         160	LOAD_FAST(arg=1, lineno=347)
         162	LOAD_FAST(arg=2, lineno=347)
         164	CALL(arg=3, lineno=347)
         172	POP_TOP(arg=None, lineno=347)
         174	RETURN_CONST(arg=0, lineno=347)
>        176	LOAD_FAST(arg=0, lineno=348)
         178	LOAD_ATTR(arg=0, lineno=348)
         198	LOAD_GLOBAL(arg=12, lineno=348)
         208	COMPARE_OP(arg=40, lineno=348)
         212	POP_JUMP_IF_FALSE(arg=24, lineno=348)
         214	LOAD_GLOBAL(arg=15, lineno=349)
         224	LOAD_FAST(arg=0, lineno=349)
         226	LOAD_ATTR(arg=6, lineno=349)
         246	LOAD_FAST(arg=1, lineno=349)
         248	LOAD_FAST(arg=2, lineno=349)
         250	CALL(arg=3, lineno=349)
         258	POP_TOP(arg=None, lineno=349)
         260	RETURN_CONST(arg=0, lineno=349)
>        262	LOAD_GLOBAL(arg=17, lineno=351)
         272	LOAD_CONST(arg=1, lineno=352)
         274	CALL(arg=1, lineno=351)
         282	RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:49,999 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:49,999 - DEBUG - stack: []
2025-07-23 17:15:50,001 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:50,002 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=336)
2025-07-23 17:15:50,003 - DEBUG - stack []
2025-07-23 17:15:50,003 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=336)
2025-07-23 17:15:50,003 - DEBUG - stack []
2025-07-23 17:15:50,003 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=344)
2025-07-23 17:15:50,003 - DEBUG - stack []
2025-07-23 17:15:50,004 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=344)
2025-07-23 17:15:50,004 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:50,004 - DEBUG - dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=344)
2025-07-23 17:15:50,004 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:50,004 - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=40, lineno=344)
2025-07-23 17:15:50,004 - DEBUG - stack ['$6load_attr.1', '$26load_global.2']
2025-07-23 17:15:50,004 - DEBUG - dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=24, lineno=344)
2025-07-23 17:15:50,005 - DEBUG - stack ['$36compare_op.3']
2025-07-23 17:15:50,005 - DEBUG - end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=90, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:50,005 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:50,005 - DEBUG - stack: []
2025-07-23 17:15:50,005 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:15:50,005 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=345)
2025-07-23 17:15:50,005 - DEBUG - stack []
2025-07-23 17:15:50,005 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=345)
2025-07-23 17:15:50,005 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:15:50,005 - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=345)
2025-07-23 17:15:50,005 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$a52.2']
2025-07-23 17:15:50,005 - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=345)
2025-07-23 17:15:50,006 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3']
2025-07-23 17:15:50,006 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=345)
2025-07-23 17:15:50,006 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4']
2025-07-23 17:15:50,006 - DEBUG - dispatch pc=78, inst=CALL(arg=3, lineno=345)
2025-07-23 17:15:50,006 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$54load_attr.3', '$i74.4', '$ch76.5']
2025-07-23 17:15:50,006 - DEBUG - dispatch pc=86, inst=POP_TOP(arg=None, lineno=345)
2025-07-23 17:15:50,006 - DEBUG - stack ['$78call.6']
2025-07-23 17:15:50,006 - DEBUG - dispatch pc=88, inst=RETURN_CONST(arg=0, lineno=345)
2025-07-23 17:15:50,006 - DEBUG - stack []
2025-07-23 17:15:50,007 - DEBUG - end state. edges=[]
2025-07-23 17:15:50,007 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0)])
2025-07-23 17:15:50,007 - DEBUG - stack: []
2025-07-23 17:15:50,007 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-23 17:15:50,007 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=346)
2025-07-23 17:15:50,007 - DEBUG - stack []
2025-07-23 17:15:50,007 - DEBUG - dispatch pc=92, inst=LOAD_ATTR(arg=0, lineno=346)
2025-07-23 17:15:50,007 - DEBUG - stack ['$a90.0']
2025-07-23 17:15:50,007 - DEBUG - dispatch pc=112, inst=LOAD_GLOBAL(arg=8, lineno=346)
2025-07-23 17:15:50,008 - DEBUG - stack ['$92load_attr.1']
2025-07-23 17:15:50,008 - DEBUG - dispatch pc=122, inst=COMPARE_OP(arg=40, lineno=346)
2025-07-23 17:15:50,008 - DEBUG - stack ['$92load_attr.1', '$112load_global.2']
2025-07-23 17:15:50,008 - DEBUG - dispatch pc=126, inst=POP_JUMP_IF_FALSE(arg=24, lineno=346)
2025-07-23 17:15:50,008 - DEBUG - stack ['$122compare_op.3']
2025-07-23 17:15:50,008 - DEBUG - end state. edges=[Edge(pc=128, stack=(), blockstack=(), npush=0), Edge(pc=176, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:50,008 - DEBUG - pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:50,008 - DEBUG - stack: []
2025-07-23 17:15:50,008 - DEBUG - state.pc_initial: State(pc_initial=128 nstack_initial=0)
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=128, inst=LOAD_GLOBAL(arg=11, lineno=347)
2025-07-23 17:15:50,009 - DEBUG - stack []
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=347)
2025-07-23 17:15:50,009 - DEBUG - stack ['$null$128.1', '$128load_global.0']
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=140, inst=LOAD_ATTR(arg=6, lineno=347)
2025-07-23 17:15:50,009 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$a138.2']
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=1, lineno=347)
2025-07-23 17:15:50,009 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3']
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=2, lineno=347)
2025-07-23 17:15:50,009 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4']
2025-07-23 17:15:50,009 - DEBUG - dispatch pc=164, inst=CALL(arg=3, lineno=347)
2025-07-23 17:15:50,010 - DEBUG - stack ['$null$128.1', '$128load_global.0', '$140load_attr.3', '$i160.4', '$ch162.5']
2025-07-23 17:15:50,010 - DEBUG - dispatch pc=172, inst=POP_TOP(arg=None, lineno=347)
2025-07-23 17:15:50,010 - DEBUG - stack ['$164call.6']
2025-07-23 17:15:50,010 - DEBUG - dispatch pc=174, inst=RETURN_CONST(arg=0, lineno=347)
2025-07-23 17:15:50,010 - DEBUG - stack []
2025-07-23 17:15:50,010 - DEBUG - end state. edges=[]
2025-07-23 17:15:50,010 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=0)])
2025-07-23 17:15:50,010 - DEBUG - stack: []
2025-07-23 17:15:50,010 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=0)
2025-07-23 17:15:50,011 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=0, lineno=348)
2025-07-23 17:15:50,011 - DEBUG - stack []
2025-07-23 17:15:50,011 - DEBUG - dispatch pc=178, inst=LOAD_ATTR(arg=0, lineno=348)
2025-07-23 17:15:50,011 - DEBUG - stack ['$a176.0']
2025-07-23 17:15:50,011 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=12, lineno=348)
2025-07-23 17:15:50,011 - DEBUG - stack ['$178load_attr.1']
2025-07-23 17:15:50,011 - DEBUG - dispatch pc=208, inst=COMPARE_OP(arg=40, lineno=348)
2025-07-23 17:15:50,011 - DEBUG - stack ['$178load_attr.1', '$198load_global.2']
2025-07-23 17:15:50,012 - DEBUG - dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=24, lineno=348)
2025-07-23 17:15:50,012 - DEBUG - stack ['$208compare_op.3']
2025-07-23 17:15:50,012 - DEBUG - end state. edges=[Edge(pc=214, stack=(), blockstack=(), npush=0), Edge(pc=262, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:50,012 - DEBUG - pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:50,012 - DEBUG - stack: []
2025-07-23 17:15:50,012 - DEBUG - state.pc_initial: State(pc_initial=214 nstack_initial=0)
2025-07-23 17:15:50,012 - DEBUG - dispatch pc=214, inst=LOAD_GLOBAL(arg=15, lineno=349)
2025-07-23 17:15:50,012 - DEBUG - stack []
2025-07-23 17:15:50,012 - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=349)
2025-07-23 17:15:50,013 - DEBUG - stack ['$null$214.1', '$214load_global.0']
2025-07-23 17:15:50,013 - DEBUG - dispatch pc=226, inst=LOAD_ATTR(arg=6, lineno=349)
2025-07-23 17:15:50,013 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$a224.2']
2025-07-23 17:15:50,013 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=1, lineno=349)
2025-07-23 17:15:50,013 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3']
2025-07-23 17:15:50,013 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=2, lineno=349)
2025-07-23 17:15:50,014 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4']
2025-07-23 17:15:50,014 - DEBUG - dispatch pc=250, inst=CALL(arg=3, lineno=349)
2025-07-23 17:15:50,014 - DEBUG - stack ['$null$214.1', '$214load_global.0', '$226load_attr.3', '$i246.4', '$ch248.5']
2025-07-23 17:15:50,014 - DEBUG - dispatch pc=258, inst=POP_TOP(arg=None, lineno=349)
2025-07-23 17:15:50,014 - DEBUG - stack ['$250call.6']
2025-07-23 17:15:50,014 - DEBUG - dispatch pc=260, inst=RETURN_CONST(arg=0, lineno=349)
2025-07-23 17:15:50,014 - DEBUG - stack []
2025-07-23 17:15:50,014 - DEBUG - end state. edges=[]
2025-07-23 17:15:50,014 - DEBUG - pending: deque([State(pc_initial=262 nstack_initial=0)])
2025-07-23 17:15:50,015 - DEBUG - stack: []
2025-07-23 17:15:50,015 - DEBUG - state.pc_initial: State(pc_initial=262 nstack_initial=0)
2025-07-23 17:15:50,015 - DEBUG - dispatch pc=262, inst=LOAD_GLOBAL(arg=17, lineno=351)
2025-07-23 17:15:50,015 - DEBUG - stack []
2025-07-23 17:15:50,015 - DEBUG - dispatch pc=272, inst=LOAD_CONST(arg=1, lineno=352)
2025-07-23 17:15:50,015 - DEBUG - stack ['$null$262.1', '$262load_global.0']
2025-07-23 17:15:50,015 - DEBUG - dispatch pc=274, inst=CALL(arg=1, lineno=351)
2025-07-23 17:15:50,015 - DEBUG - stack ['$null$262.1', '$262load_global.0', '$const272.2.1']
2025-07-23 17:15:50,015 - DEBUG - dispatch pc=282, inst=RAISE_VARARGS(arg=1, lineno=351)
2025-07-23 17:15:50,016 - DEBUG - stack ['$274call.3']
2025-07-23 17:15:50,016 - DEBUG - end state. edges=[]
2025-07-23 17:15:50,016 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:50,016 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=262 nstack_initial=0): set()})
2025-07-23 17:15:50,016 - DEBUG - defmap: {}
2025-07-23 17:15:50,016 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:50,016 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:50,017 - DEBUG - keep phismap: {}
2025-07-23 17:15:50,017 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:50,017 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'idx': 1, 'res': '$26load_global.2'}), (36, {'lhs': '$6load_attr.1', 'rhs': '$26load_global.2', 'res': '$36compare_op.3'}), (40, {'pred': '$36compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 90: ()})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 2, 'res': '$42load_global.0'}), (52, {'res': '$a52.2'}), (54, {'item': '$a52.2', 'res': '$54load_attr.3'}), (74, {'res': '$i74.4'}), (76, {'res': '$ch76.5'}), (78, {'func': '$42load_global.0', 'args': ['$54load_attr.3', '$i74.4', '$ch76.5'], 'kw_names': None, 'res': '$78call.6'}), (88, {'retval': '$const88.7', 'castval': '$88return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$a90.0'}), (92, {'item': '$a90.0', 'res': '$92load_attr.1'}), (112, {'idx': 4, 'res': '$112load_global.2'}), (122, {'lhs': '$92load_attr.1', 'rhs': '$112load_global.2', 'res': '$122compare_op.3'}), (126, {'pred': '$122compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: (), 176: ()})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'idx': 5, 'res': '$128load_global.0'}), (138, {'res': '$a138.2'}), (140, {'item': '$a138.2', 'res': '$140load_attr.3'}), (160, {'res': '$i160.4'}), (162, {'res': '$ch162.5'}), (164, {'func': '$128load_global.0', 'args': ['$140load_attr.3', '$i160.4', '$ch162.5'], 'kw_names': None, 'res': '$164call.6'}), (174, {'retval': '$const174.7', 'castval': '$174return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$a176.0'}), (178, {'item': '$a176.0', 'res': '$178load_attr.1'}), (198, {'idx': 6, 'res': '$198load_global.2'}), (208, {'lhs': '$178load_attr.1', 'rhs': '$198load_global.2', 'res': '$208compare_op.3'}), (212, {'pred': '$208compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: (), 262: ()})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'idx': 7, 'res': '$214load_global.0'}), (224, {'res': '$a224.2'}), (226, {'item': '$a224.2', 'res': '$226load_attr.3'}), (246, {'res': '$i246.4'}), (248, {'res': '$ch248.5'}), (250, {'func': '$214load_global.0', 'args': ['$226load_attr.3', '$i246.4', '$ch248.5'], 'kw_names': None, 'res': '$250call.6'}), (260, {'retval': '$const260.7', 'castval': '$260return_const.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:50,017 - DEBUG - block_infos State(pc_initial=262 nstack_initial=0):
AdaptBlockInfo(insts=((262, {'idx': 8, 'res': '$262load_global.0'}), (272, {'res': '$const272.2.1'}), (274, {'func': '$262load_global.0', 'args': ['$const272.2.1'], 'kw_names': None, 'res': '$274call.3'}), (282, {'exc': '$274call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:50,020 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$26load_global.2']
    $36compare_op.3 = $6load_attr.1 == $26load_global.2 ['$26load_global.2', '$36compare_op.3', '$6load_attr.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 90                   ['$40pred']
label 42:
    $42load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$42load_global.0']
    $54load_attr.3 = getattr(value=a, attr=_data) ['$54load_attr.3', 'a']
    $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$54load_attr.3', '$78call.6', 'ch', 'i']
    $const88.7 = const(NoneType, None)       ['$const88.7']
    $88return_const.8 = cast(value=$const88.7) ['$88return_const.8', '$const88.7']
    return $88return_const.8                 ['$88return_const.8']
label 90:
    $92load_attr.1 = getattr(value=a, attr=_kind) ['$92load_attr.1', 'a']
    $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$112load_global.2']
    $122compare_op.3 = $92load_attr.1 == $112load_global.2 ['$112load_global.2', '$122compare_op.3', '$92load_attr.1']
    bool126 = global(bool: <class 'bool'>)   ['bool126']
    $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$122compare_op.3', '$126pred', 'bool126']
    branch $126pred, 128, 176                ['$126pred']
label 128:
    $128load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$128load_global.0']
    $140load_attr.3 = getattr(value=a, attr=_data) ['$140load_attr.3', 'a']
    $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_global.0', '$140load_attr.3', '$164call.6', 'ch', 'i']
    $const174.7 = const(NoneType, None)      ['$const174.7']
    $174return_const.8 = cast(value=$const174.7) ['$174return_const.8', '$const174.7']
    return $174return_const.8                ['$174return_const.8']
label 176:
    $178load_attr.1 = getattr(value=a, attr=_kind) ['$178load_attr.1', 'a']
    $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$198load_global.2']
    $208compare_op.3 = $178load_attr.1 == $198load_global.2 ['$178load_attr.1', '$198load_global.2', '$208compare_op.3']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$208compare_op.3', '$212pred', 'bool212']
    branch $212pred, 214, 262                ['$212pred']
label 214:
    $214load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$214load_global.0']
    $226load_attr.3 = getattr(value=a, attr=_data) ['$226load_attr.3', 'a']
    $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_global.0', '$226load_attr.3', '$250call.6', 'ch', 'i']
    $const260.7 = const(NoneType, None)      ['$const260.7']
    $260return_const.8 = cast(value=$const260.7) ['$260return_const.8', '$const260.7']
    return $260return_const.8                ['$260return_const.8']
label 262:
    $262load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$262load_global.0']
    $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const272.2.1']
    $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$262load_global.0', '$274call.3', '$const272.2.1']
    raise $274call.3                         ['$274call.3']

2025-07-23 17:15:50,026 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:50,026 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,026 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:50,026 - DEBUG - on stmt: i = arg(1, name=i)
2025-07-23 17:15:50,026 - DEBUG - on stmt: ch = arg(2, name=ch)
2025-07-23 17:15:50,026 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:50,027 - DEBUG - on stmt: $26load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
2025-07-23 17:15:50,027 - DEBUG - on stmt: $36compare_op.3 = $6load_attr.1 == $26load_global.2
2025-07-23 17:15:50,027 - DEBUG - on stmt: bool40 = global(bool: <class 'bool'>)
2025-07-23 17:15:50,027 - DEBUG - on stmt: $40pred = call bool40($36compare_op.3, func=bool40, args=(Var($36compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,027 - DEBUG - on stmt: branch $40pred, 42, 90
2025-07-23 17:15:50,027 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:15:50,027 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,028 - DEBUG - on stmt: $42load_global.0 = global(set_uint8: <intrinsic set_uint8>)
2025-07-23 17:15:50,028 - DEBUG - on stmt: $54load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:50,028 - DEBUG - on stmt: $78call.6 = call $42load_global.0($54load_attr.3, i, ch, func=$42load_global.0, args=[Var($54load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,028 - DEBUG - on stmt: $const88.7 = const(NoneType, None)
2025-07-23 17:15:50,028 - DEBUG - on stmt: $88return_const.8 = cast(value=$const88.7)
2025-07-23 17:15:50,028 - DEBUG - on stmt: return $88return_const.8
2025-07-23 17:15:50,028 - DEBUG - ==== SSA block analysis pass on 90
2025-07-23 17:15:50,028 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,029 - DEBUG - on stmt: $92load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:50,029 - DEBUG - on stmt: $112load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
2025-07-23 17:15:50,029 - DEBUG - on stmt: $122compare_op.3 = $92load_attr.1 == $112load_global.2
2025-07-23 17:15:50,029 - DEBUG - on stmt: bool126 = global(bool: <class 'bool'>)
2025-07-23 17:15:50,030 - DEBUG - on stmt: $126pred = call bool126($122compare_op.3, func=bool126, args=(Var($122compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,030 - DEBUG - on stmt: branch $126pred, 128, 176
2025-07-23 17:15:50,030 - DEBUG - ==== SSA block analysis pass on 128
2025-07-23 17:15:50,030 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,030 - DEBUG - on stmt: $128load_global.0 = global(set_uint16: <intrinsic set_uint16>)
2025-07-23 17:15:50,030 - DEBUG - on stmt: $140load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:50,030 - DEBUG - on stmt: $164call.6 = call $128load_global.0($140load_attr.3, i, ch, func=$128load_global.0, args=[Var($140load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,030 - DEBUG - on stmt: $const174.7 = const(NoneType, None)
2025-07-23 17:15:50,031 - DEBUG - on stmt: $174return_const.8 = cast(value=$const174.7)
2025-07-23 17:15:50,031 - DEBUG - on stmt: return $174return_const.8
2025-07-23 17:15:50,031 - DEBUG - ==== SSA block analysis pass on 176
2025-07-23 17:15:50,031 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,031 - DEBUG - on stmt: $178load_attr.1 = getattr(value=a, attr=_kind)
2025-07-23 17:15:50,031 - DEBUG - on stmt: $198load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
2025-07-23 17:15:50,031 - DEBUG - on stmt: $208compare_op.3 = $178load_attr.1 == $198load_global.2
2025-07-23 17:15:50,031 - DEBUG - on stmt: bool212 = global(bool: <class 'bool'>)
2025-07-23 17:15:50,031 - DEBUG - on stmt: $212pred = call bool212($208compare_op.3, func=bool212, args=(Var($208compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,032 - DEBUG - on stmt: branch $212pred, 214, 262
2025-07-23 17:15:50,032 - DEBUG - ==== SSA block analysis pass on 214
2025-07-23 17:15:50,032 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,032 - DEBUG - on stmt: $214load_global.0 = global(set_uint32: <intrinsic set_uint32>)
2025-07-23 17:15:50,032 - DEBUG - on stmt: $226load_attr.3 = getattr(value=a, attr=_data)
2025-07-23 17:15:50,032 - DEBUG - on stmt: $250call.6 = call $214load_global.0($226load_attr.3, i, ch, func=$214load_global.0, args=[Var($226load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,032 - DEBUG - on stmt: $const260.7 = const(NoneType, None)
2025-07-23 17:15:50,032 - DEBUG - on stmt: $260return_const.8 = cast(value=$const260.7)
2025-07-23 17:15:50,033 - DEBUG - on stmt: return $260return_const.8
2025-07-23 17:15:50,033 - DEBUG - ==== SSA block analysis pass on 262
2025-07-23 17:15:50,033 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E67B2780>
2025-07-23 17:15:50,033 - DEBUG - on stmt: $262load_global.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:15:50,033 - DEBUG - on stmt: $const272.2.1 = const(str, Unexpected unicode representation in _set_code_point)
2025-07-23 17:15:50,033 - DEBUG - on stmt: $274call.3 = call $262load_global.0($const272.2.1, func=$262load_global.0, args=[Var($const272.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:50,033 - DEBUG - on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _set_code_point')
2025-07-23 17:15:50,033 - DEBUG - defs defaultdict(<class 'list'>,
            {'$112load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E6843260>,
                                    90)],
             '$122compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E68433E0>,
                                   90)],
             '$126pred': [(<numba.core.ir.Assign object at 0x000001F6E6843650>,
                           90)],
             '$128load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6843830>,
                                    128)],
             '$140load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E6843A70>,
                                  128)],
             '$164call.6': [(<numba.core.ir.Assign object at 0x000001F6E6843E00>,
                             128)],
             '$174return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E6854080>,
                                     128)],
             '$178load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E6854260>,
                                  176)],
             '$198load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E68543B0>,
                                    176)],
             '$208compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E6854530>,
                                   176)],
             '$212pred': [(<numba.core.ir.Assign object at 0x000001F6E68547A0>,
                           176)],
             '$214load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6854980>,
                                    214)],
             '$226load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E6854BC0>,
                                  214)],
             '$250call.6': [(<numba.core.ir.Assign object at 0x000001F6E6841490>,
                             214)],
             '$260return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E6771670>,
                                     214)],
             '$262load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E670E6C0>,
                                    262)],
             '$26load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E6842150>,
                                   0)],
             '$274call.3': [(<numba.core.ir.Assign object at 0x000001F6E66E8B60>,
                             262)],
             '$36compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E68422D0>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x000001F6E6842570>,
                          0)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6842750>,
                                   42)],
             '$54load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E6842990>,
                                 42)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E6842000>,
                                0)],
             '$78call.6': [(<numba.core.ir.Assign object at 0x000001F6E6842CF0>,
                            42)],
             '$88return_const.8': [(<numba.core.ir.Assign object at 0x000001F6E6842F30>,
                                    42)],
             '$92load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E6843110>,
                                 90)],
             '$const174.7': [(<numba.core.ir.Assign object at 0x000001F6E6843F20>,
                              128)],
             '$const260.7': [(<numba.core.ir.Assign object at 0x000001F6E6840530>,
                              214)],
             '$const272.2.1': [(<numba.core.ir.Assign object at 0x000001F6E670C620>,
                                262)],
             '$const88.7': [(<numba.core.ir.Assign object at 0x000001F6E6842E10>,
                             42)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E6841A30>, 0)],
             'bool126': [(<numba.core.ir.Assign object at 0x000001F6E6843530>,
                          90)],
             'bool212': [(<numba.core.ir.Assign object at 0x000001F6E6854680>,
                          176)],
             'bool40': [(<numba.core.ir.Assign object at 0x000001F6E6842420>,
                         0)],
             'ch': [(<numba.core.ir.Assign object at 0x000001F6E6841D90>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E6841B50>, 0)]})
2025-07-23 17:15:50,035 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E67B2780>
2025-07-23 17:15:55,156 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1019)
           2	RESUME(arg=0, lineno=1019)
           4	LOAD_CONST(arg=1, lineno=1020)
           6	STORE_FAST(arg=1, lineno=1020)
           8	LOAD_GLOBAL(arg=1, lineno=1021)
          18	LOAD_FAST(arg=0, lineno=1021)
          20	LOAD_FAST(arg=1, lineno=1021)
          22	CALL(arg=2, lineno=1021)
          30	LOAD_CONST(arg=2, lineno=1021)
          32	COMPARE_OP(arg=40, lineno=1021)
          36	POP_JUMP_IF_FALSE(arg=17, lineno=1021)
          38	PUSH_NULL(arg=None, lineno=1022)
          40	LOAD_GLOBAL(arg=3, lineno=1022)
          50	LOAD_FAST(arg=0, lineno=1022)
          52	LOAD_FAST(arg=1, lineno=1022)
          54	CALL(arg=2, lineno=1022)
          62	CALL(arg=0, lineno=1022)
          70	RETURN_VALUE(arg=None, lineno=1022)
>         72	LOAD_GLOBAL(arg=5, lineno=1024)
          82	LOAD_FAST(arg=0, lineno=1024)
          84	CALL(arg=1, lineno=1024)
          92	RETURN_VALUE(arg=None, lineno=1024)
2025-07-23 17:15:55,156 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,156 - DEBUG - stack: []
2025-07-23 17:15:55,156 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,156 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1019)
2025-07-23 17:15:55,156 - DEBUG - stack []
2025-07-23 17:15:55,157 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1019)
2025-07-23 17:15:55,157 - DEBUG - stack []
2025-07-23 17:15:55,157 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1020)
2025-07-23 17:15:55,157 - DEBUG - stack []
2025-07-23 17:15:55,157 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=1020)
2025-07-23 17:15:55,158 - DEBUG - stack ['$const4.0.1']
2025-07-23 17:15:55,158 - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=1021)
2025-07-23 17:15:55,158 - DEBUG - stack []
2025-07-23 17:15:55,158 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1021)
2025-07-23 17:15:55,158 - DEBUG - stack ['$null$8.2', '$8load_global.1']
2025-07-23 17:15:55,159 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1021)
2025-07-23 17:15:55,159 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$object18.3']
2025-07-23 17:15:55,159 - DEBUG - dispatch pc=22, inst=CALL(arg=2, lineno=1021)
2025-07-23 17:15:55,160 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$object18.3', '$attr20.4']
2025-07-23 17:15:55,160 - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=1021)
2025-07-23 17:15:55,160 - DEBUG - stack ['$22call.5']
2025-07-23 17:15:55,160 - DEBUG - dispatch pc=32, inst=COMPARE_OP(arg=40, lineno=1021)
2025-07-23 17:15:55,160 - DEBUG - stack ['$22call.5', '$const30.6.2']
2025-07-23 17:15:55,161 - DEBUG - dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1021)
2025-07-23 17:15:55,161 - DEBUG - stack ['$32compare_op.7']
2025-07-23 17:15:55,161 - DEBUG - end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0), Edge(pc=72, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:55,161 - DEBUG - pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=72 nstack_initial=0)])
2025-07-23 17:15:55,161 - DEBUG - stack: []
2025-07-23 17:15:55,161 - DEBUG - state.pc_initial: State(pc_initial=38 nstack_initial=0)
2025-07-23 17:15:55,161 - DEBUG - dispatch pc=38, inst=PUSH_NULL(arg=None, lineno=1022)
2025-07-23 17:15:55,162 - DEBUG - stack []
2025-07-23 17:15:55,162 - DEBUG - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=1022)
2025-07-23 17:15:55,162 - DEBUG - stack ['$null$38.0']
2025-07-23 17:15:55,162 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=1022)
2025-07-23 17:15:55,162 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1']
2025-07-23 17:15:55,163 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=1022)
2025-07-23 17:15:55,163 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1', '$object50.3']
2025-07-23 17:15:55,163 - DEBUG - dispatch pc=54, inst=CALL(arg=2, lineno=1022)
2025-07-23 17:15:55,163 - DEBUG - stack ['$null$38.0', '$null$40.2', '$40load_global.1', '$object50.3', '$attr52.4']
2025-07-23 17:15:55,163 - DEBUG - dispatch pc=62, inst=CALL(arg=0, lineno=1022)
2025-07-23 17:15:55,164 - DEBUG - stack ['$null$38.0', '$54call.5']
2025-07-23 17:15:55,164 - DEBUG - dispatch pc=70, inst=RETURN_VALUE(arg=None, lineno=1022)
2025-07-23 17:15:55,164 - DEBUG - stack ['$62call.6']
2025-07-23 17:15:55,164 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,164 - DEBUG - pending: deque([State(pc_initial=72 nstack_initial=0)])
2025-07-23 17:15:55,165 - DEBUG - stack: []
2025-07-23 17:15:55,165 - DEBUG - state.pc_initial: State(pc_initial=72 nstack_initial=0)
2025-07-23 17:15:55,165 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=5, lineno=1024)
2025-07-23 17:15:55,167 - DEBUG - stack []
2025-07-23 17:15:55,167 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=1024)
2025-07-23 17:15:55,167 - DEBUG - stack ['$null$72.1', '$72load_global.0']
2025-07-23 17:15:55,167 - DEBUG - dispatch pc=84, inst=CALL(arg=1, lineno=1024)
2025-07-23 17:15:55,168 - DEBUG - stack ['$null$72.1', '$72load_global.0', '$object82.2']
2025-07-23 17:15:55,168 - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=1024)
2025-07-23 17:15:55,168 - DEBUG - stack ['$84call.3']
2025-07-23 17:15:55,170 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,170 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,170 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set()})
2025-07-23 17:15:55,171 - DEBUG - defmap: {}
2025-07-23 17:15:55,171 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,171 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,171 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,171 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,172 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,172 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'idx': 0, 'res': '$8load_global.1'}), (18, {'res': '$object18.3'}), (20, {'res': '$attr20.4'}), (22, {'func': '$8load_global.1', 'args': ['$object18.3', '$attr20.4'], 'kw_names': None, 'res': '$22call.5'}), (30, {'res': '$const30.6.2'}), (32, {'lhs': '$22call.5', 'rhs': '$const30.6.2', 'res': '$32compare_op.7'}), (36, {'pred': '$32compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: (), 72: ()})
2025-07-23 17:15:55,172 - DEBUG - block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {}), (40, {'idx': 1, 'res': '$40load_global.1'}), (50, {'res': '$object50.3'}), (52, {'res': '$attr52.4'}), (54, {'func': '$40load_global.1', 'args': ['$object50.3', '$attr52.4'], 'kw_names': None, 'res': '$54call.5'}), (62, {'func': '$54call.5', 'args': [], 'kw_names': None, 'res': '$62call.6'}), (70, {'retval': '$62call.6', 'castval': '$70return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,173 - DEBUG - block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'idx': 2, 'res': '$72load_global.0'}), (82, {'res': '$object82.2'}), (84, {'func': '$72load_global.0', 'args': ['$object82.2'], 'kw_names': None, 'res': '$84call.3'}), (92, {'retval': '$84call.3', 'castval': '$92return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,173 - DEBUG - label 0:
    object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    $8load_global.1 = global(hasattr: <built-in function hasattr>) ['$8load_global.1']
    $22call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.5', '$8load_global.1', 'attr', 'object']
    $const30.6.2 = const(bool, True)         ['$const30.6.2']
    $32compare_op.7 = $22call.5 == $const30.6.2 ['$22call.5', '$32compare_op.7', '$const30.6.2']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($32compare_op.7, func=bool36, args=(Var($32compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.7', '$36pred', 'bool36']
    branch $36pred, 38, 72                   ['$36pred']
label 38:
    $40load_global.1 = global(getattr: <built-in function getattr>) ['$40load_global.1']
    $54call.5 = call $40load_global.1(object, attr, func=$40load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.1', '$54call.5', 'attr', 'object']
    $62call.6 = call $54call.5(func=$54call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$54call.5', '$62call.6']
    $70return_value.7 = cast(value=$62call.6) ['$62call.6', '$70return_value.7']
    return $70return_value.7                 ['$70return_value.7']
label 72:
    $72load_global.0 = global(repr: <built-in function repr>) ['$72load_global.0']
    $84call.3 = call $72load_global.0(object, func=$72load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.0', '$84call.3', 'object']
    $92return_value.4 = cast(value=$84call.3) ['$84call.3', '$92return_value.4']
    return $92return_value.4                 ['$92return_value.4']

2025-07-23 17:15:55,181 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,181 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6963B30>
2025-07-23 17:15:55,181 - DEBUG - on stmt: object = arg(0, name=object)
2025-07-23 17:15:55,181 - DEBUG - on stmt: attr = const(str, __str__)
2025-07-23 17:15:55,181 - DEBUG - on stmt: $8load_global.1 = global(hasattr: <built-in function hasattr>)
2025-07-23 17:15:55,181 - DEBUG - on stmt: $22call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,181 - DEBUG - on stmt: $const30.6.2 = const(bool, True)
2025-07-23 17:15:55,182 - DEBUG - on stmt: $32compare_op.7 = $22call.5 == $const30.6.2
2025-07-23 17:15:55,182 - DEBUG - on stmt: bool36 = global(bool: <class 'bool'>)
2025-07-23 17:15:55,182 - DEBUG - on stmt: $36pred = call bool36($32compare_op.7, func=bool36, args=(Var($32compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,182 - DEBUG - on stmt: branch $36pred, 38, 72
2025-07-23 17:15:55,182 - DEBUG - ==== SSA block analysis pass on 38
2025-07-23 17:15:55,182 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6963B30>
2025-07-23 17:15:55,182 - DEBUG - on stmt: $40load_global.1 = global(getattr: <built-in function getattr>)
2025-07-23 17:15:55,183 - DEBUG - on stmt: $54call.5 = call $40load_global.1(object, attr, func=$40load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,183 - DEBUG - on stmt: $62call.6 = call $54call.5(func=$54call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,183 - DEBUG - on stmt: $70return_value.7 = cast(value=$62call.6)
2025-07-23 17:15:55,183 - DEBUG - on stmt: return $70return_value.7
2025-07-23 17:15:55,183 - DEBUG - ==== SSA block analysis pass on 72
2025-07-23 17:15:55,183 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6963B30>
2025-07-23 17:15:55,183 - DEBUG - on stmt: $72load_global.0 = global(repr: <built-in function repr>)
2025-07-23 17:15:55,183 - DEBUG - on stmt: $84call.3 = call $72load_global.0(object, func=$72load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,184 - DEBUG - on stmt: $92return_value.4 = cast(value=$84call.3)
2025-07-23 17:15:55,184 - DEBUG - on stmt: return $92return_value.4
2025-07-23 17:15:55,184 - DEBUG - defs defaultdict(<class 'list'>,
            {'$22call.5': [(<numba.core.ir.Assign object at 0x000001F6E69692E0>,
                            0)],
             '$32compare_op.7': [(<numba.core.ir.Assign object at 0x000001F6E6969580>,
                                  0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x000001F6E6969820>,
                          0)],
             '$40load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E6969940>,
                                   38)],
             '$54call.5': [(<numba.core.ir.Assign object at 0x000001F6E6969CD0>,
                            38)],
             '$62call.6': [(<numba.core.ir.Assign object at 0x000001F6E6969E50>,
                            38)],
             '$70return_value.7': [(<numba.core.ir.Assign object at 0x000001F6E6969F70>,
                                    38)],
             '$72load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E696A0C0>,
                                   72)],
             '$84call.3': [(<numba.core.ir.Assign object at 0x000001F6E696A360>,
                            72)],
             '$8load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E6968F50>,
                                  0)],
             '$92return_value.4': [(<numba.core.ir.Assign object at 0x000001F6E696A480>,
                                    72)],
             '$const30.6.2': [(<numba.core.ir.Assign object at 0x000001F6E6969400>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x000001F6E6968D10>, 0)],
             'bool36': [(<numba.core.ir.Assign object at 0x000001F6E69696D0>,
                         0)],
             'object': [(<numba.core.ir.Assign object at 0x000001F6E6968B90>,
                         0)]})
2025-07-23 17:15:55,185 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6963B30>
2025-07-23 17:15:55,192 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,192 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,192 - DEBUG - stack: []
2025-07-23 17:15:55,192 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,193 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:55,193 - DEBUG - stack []
2025-07-23 17:15:55,193 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:55,193 - DEBUG - stack []
2025-07-23 17:15:55,193 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:55,193 - DEBUG - stack []
2025-07-23 17:15:55,193 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:55,193 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,194 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:55,194 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,194 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:55,194 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,194 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,194 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:55,194 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,194 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,194 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,194 - DEBUG - defmap: {}
2025-07-23 17:15:55,195 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,195 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,195 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,195 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,195 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,195 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,196 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:55,197 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,198 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E696BE30>
2025-07-23 17:15:55,198 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,198 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,198 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:55,198 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,198 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:55,199 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:55,199 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E69680B0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E6968140>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E69684A0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E696A990>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E696AEA0>, 0)]})
2025-07-23 17:15:55,199 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E696BE30>
2025-07-23 17:15:55,206 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:55,216 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:55,223 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,224 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,224 - DEBUG - stack: []
2025-07-23 17:15:55,224 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,224 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:55,224 - DEBUG - stack []
2025-07-23 17:15:55,224 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:55,225 - DEBUG - stack []
2025-07-23 17:15:55,225 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:55,225 - DEBUG - stack []
2025-07-23 17:15:55,225 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:55,225 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,226 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:55,226 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,226 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:55,226 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,226 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,227 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:55,227 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,227 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,227 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,227 - DEBUG - defmap: {}
2025-07-23 17:15:55,229 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,229 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,229 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,229 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,230 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,230 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,231 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:55,234 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,235 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6978DD0>
2025-07-23 17:15:55,235 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,235 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,235 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:55,236 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,236 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:55,236 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:55,236 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E69794F0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E69793D0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6979790>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6979940>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6979A30>, 0)]})
2025-07-23 17:15:55,237 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6978DD0>
2025-07-23 17:15:55,264 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          14	LOAD_FAST(arg=0, lineno=955)
          16	LOAD_FAST(arg=1, lineno=955)
          18	LOAD_GLOBAL(arg=2, lineno=955)
          28	CALL(arg=3, lineno=955)
          36	RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:55,264 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,264 - DEBUG - stack: []
2025-07-23 17:15:55,265 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,265 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=954)
2025-07-23 17:15:55,265 - DEBUG - stack []
2025-07-23 17:15:55,265 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=954)
2025-07-23 17:15:55,265 - DEBUG - stack []
2025-07-23 17:15:55,265 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
2025-07-23 17:15:55,265 - DEBUG - stack []
2025-07-23 17:15:55,266 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=955)
2025-07-23 17:15:55,266 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,266 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=955)
2025-07-23 17:15:55,266 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,266 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=955)
2025-07-23 17:15:55,266 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,266 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=955)
2025-07-23 17:15:55,266 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3', '$18load_global.4']
2025-07-23 17:15:55,267 - DEBUG - dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:55,267 - DEBUG - stack ['$28call.5']
2025-07-23 17:15:55,267 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,267 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,267 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,267 - DEBUG - defmap: {}
2025-07-23 17:15:55,267 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,267 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,267 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,267 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,269 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,269 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'idx': 1, 'res': '$18load_global.4'}), (28, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3', '$18load_global.4'], 'kw_names': None, 'res': '$28call.5'}), (36, {'retval': '$28call.5', 'castval': '$36return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,269 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $18load_global.4 = global(_getattr_default: _getattr_default_type()) ['$18load_global.4']
    $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.4', '$28call.5', '$4load_global.0', 'name', 'obj']
    $36return_value.6 = cast(value=$28call.5) ['$28call.5', '$36return_value.6']
    return $36return_value.6                 ['$36return_value.6']

2025-07-23 17:15:55,271 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,271 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69628D0>
2025-07-23 17:15:55,271 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,271 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,271 - DEBUG - on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
2025-07-23 17:15:55,272 - DEBUG - on stmt: $18load_global.4 = global(_getattr_default: _getattr_default_type())
2025-07-23 17:15:55,272 - DEBUG - on stmt: $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,272 - DEBUG - on stmt: $36return_value.6 = cast(value=$28call.5)
2025-07-23 17:15:55,272 - DEBUG - on stmt: return $36return_value.6
2025-07-23 17:15:55,272 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18load_global.4': [(<numba.core.ir.Assign object at 0x000001F6E6958290>,
                                   0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x000001F6E695BB90>,
                            0)],
             '$36return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E695BA10>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6958950>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6739D30>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6961BB0>, 0)]})
2025-07-23 17:15:55,273 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69628D0>
2025-07-23 17:15:55,299 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2557)
           2	RESUME(arg=0, lineno=2557)
           4	LOAD_FAST(arg=0, lineno=2557)
           6	RETURN_VALUE(arg=None, lineno=2557)
2025-07-23 17:15:55,299 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,299 - DEBUG - stack: []
2025-07-23 17:15:55,299 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,299 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2557)
2025-07-23 17:15:55,299 - DEBUG - stack []
2025-07-23 17:15:55,299 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2557)
2025-07-23 17:15:55,299 - DEBUG - stack []
2025-07-23 17:15:55,299 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2557)
2025-07-23 17:15:55,300 - DEBUG - stack []
2025-07-23 17:15:55,300 - DEBUG - dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=2557)
2025-07-23 17:15:55,300 - DEBUG - stack ['$s4.0']
2025-07-23 17:15:55,300 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,300 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,301 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,301 - DEBUG - defmap: {}
2025-07-23 17:15:55,301 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,301 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,301 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,302 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,302 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,302 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$s4.0'}), (6, {'retval': '$s4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,302 - DEBUG - label 0:
    s = arg(0, name=s)                       ['s']
    $6return_value.1 = cast(value=s)         ['$6return_value.1', 's']
    return $6return_value.1                  ['$6return_value.1']

2025-07-23 17:15:55,304 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,304 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6817470>
2025-07-23 17:15:55,304 - DEBUG - on stmt: s = arg(0, name=s)
2025-07-23 17:15:55,304 - DEBUG - on stmt: $6return_value.1 = cast(value=s)
2025-07-23 17:15:55,304 - DEBUG - on stmt: return $6return_value.1
2025-07-23 17:15:55,304 - DEBUG - defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E6817290>,
                                   0)],
             's': [(<numba.core.ir.Assign object at 0x000001F6E6817950>, 0)]})
2025-07-23 17:15:55,305 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6817470>
2025-07-23 17:15:55,327 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1006)
           2	COPY_FREE_VARS(arg=1, lineno=1006)
           4	RESUME(arg=0, lineno=1006)
           6	LOAD_CONST(arg=1, lineno=1007)
           8	STORE_FAST(arg=1, lineno=1007)
          10	LOAD_GLOBAL(arg=1, lineno=1008)
          20	LOAD_FAST(arg=0, lineno=1008)
          22	LOAD_FAST(arg=1, lineno=1008)
          24	CALL(arg=2, lineno=1008)
          32	LOAD_CONST(arg=2, lineno=1008)
          34	COMPARE_OP(arg=40, lineno=1008)
          38	POP_JUMP_IF_FALSE(arg=17, lineno=1008)
          40	PUSH_NULL(arg=None, lineno=1009)
          42	LOAD_GLOBAL(arg=3, lineno=1009)
          52	LOAD_FAST(arg=0, lineno=1009)
          54	LOAD_FAST(arg=1, lineno=1009)
          56	CALL(arg=2, lineno=1009)
          64	CALL(arg=0, lineno=1009)
          72	RETURN_VALUE(arg=None, lineno=1009)
>         74	LOAD_DEREF(arg=2, lineno=1013)
          76	RETURN_VALUE(arg=None, lineno=1013)
2025-07-23 17:15:55,327 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,327 - DEBUG - stack: []
2025-07-23 17:15:55,327 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,327 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1006)
2025-07-23 17:15:55,327 - DEBUG - stack []
2025-07-23 17:15:55,328 - DEBUG - dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=1006)
2025-07-23 17:15:55,328 - DEBUG - stack []
2025-07-23 17:15:55,328 - DEBUG - dispatch pc=4, inst=RESUME(arg=0, lineno=1006)
2025-07-23 17:15:55,329 - DEBUG - stack []
2025-07-23 17:15:55,329 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1007)
2025-07-23 17:15:55,329 - DEBUG - stack []
2025-07-23 17:15:55,329 - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=1, lineno=1007)
2025-07-23 17:15:55,329 - DEBUG - stack ['$const6.0.1']
2025-07-23 17:15:55,329 - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=1008)
2025-07-23 17:15:55,329 - DEBUG - stack []
2025-07-23 17:15:55,330 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1008)
2025-07-23 17:15:55,330 - DEBUG - stack ['$null$10.2', '$10load_global.1']
2025-07-23 17:15:55,330 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=1008)
2025-07-23 17:15:55,330 - DEBUG - stack ['$null$10.2', '$10load_global.1', '$obj20.3']
2025-07-23 17:15:55,330 - DEBUG - dispatch pc=24, inst=CALL(arg=2, lineno=1008)
2025-07-23 17:15:55,330 - DEBUG - stack ['$null$10.2', '$10load_global.1', '$obj20.3', '$attr22.4']
2025-07-23 17:15:55,330 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=1008)
2025-07-23 17:15:55,330 - DEBUG - stack ['$24call.5']
2025-07-23 17:15:55,331 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=40, lineno=1008)
2025-07-23 17:15:55,331 - DEBUG - stack ['$24call.5', '$const32.6.2']
2025-07-23 17:15:55,331 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1008)
2025-07-23 17:15:55,331 - DEBUG - stack ['$34compare_op.7']
2025-07-23 17:15:55,331 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:55,331 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-07-23 17:15:55,331 - DEBUG - stack: []
2025-07-23 17:15:55,331 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-07-23 17:15:55,332 - DEBUG - dispatch pc=40, inst=PUSH_NULL(arg=None, lineno=1009)
2025-07-23 17:15:55,332 - DEBUG - stack []
2025-07-23 17:15:55,332 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=3, lineno=1009)
2025-07-23 17:15:55,332 - DEBUG - stack ['$null$40.0']
2025-07-23 17:15:55,332 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1009)
2025-07-23 17:15:55,332 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1']
2025-07-23 17:15:55,332 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=1009)
2025-07-23 17:15:55,332 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1', '$obj52.3']
2025-07-23 17:15:55,332 - DEBUG - dispatch pc=56, inst=CALL(arg=2, lineno=1009)
2025-07-23 17:15:55,333 - DEBUG - stack ['$null$40.0', '$null$42.2', '$42load_global.1', '$obj52.3', '$attr54.4']
2025-07-23 17:15:55,333 - DEBUG - dispatch pc=64, inst=CALL(arg=0, lineno=1009)
2025-07-23 17:15:55,333 - DEBUG - stack ['$null$40.0', '$56call.5']
2025-07-23 17:15:55,333 - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=1009)
2025-07-23 17:15:55,333 - DEBUG - stack ['$64call.6']
2025-07-23 17:15:55,333 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,333 - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-07-23 17:15:55,333 - DEBUG - stack: []
2025-07-23 17:15:55,333 - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-07-23 17:15:55,334 - DEBUG - dispatch pc=74, inst=LOAD_DEREF(arg=2, lineno=1013)
2025-07-23 17:15:55,334 - DEBUG - stack []
2025-07-23 17:15:55,334 - DEBUG - dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1013)
2025-07-23 17:15:55,334 - DEBUG - stack ['$74load_deref.0']
2025-07-23 17:15:55,334 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,334 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,334 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-07-23 17:15:55,335 - DEBUG - defmap: {}
2025-07-23 17:15:55,335 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,335 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,335 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,335 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,335 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,336 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (20, {'res': '$obj20.3'}), (22, {'res': '$attr22.4'}), (24, {'func': '$10load_global.1', 'args': ['$obj20.3', '$attr22.4'], 'kw_names': None, 'res': '$24call.5'}), (32, {'res': '$const32.6.2'}), (34, {'lhs': '$24call.5', 'rhs': '$const32.6.2', 'res': '$34compare_op.7'}), (38, {'pred': '$34compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 74: ()})
2025-07-23 17:15:55,336 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {}), (42, {'idx': 1, 'res': '$42load_global.1'}), (52, {'res': '$obj52.3'}), (54, {'res': '$attr54.4'}), (56, {'func': '$42load_global.1', 'args': ['$obj52.3', '$attr54.4'], 'kw_names': None, 'res': '$56call.5'}), (64, {'func': '$56call.5', 'args': [], 'kw_names': None, 'res': '$64call.6'}), (72, {'retval': '$64call.6', 'castval': '$72return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,336 - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_deref.0'}), (76, {'retval': '$74load_deref.0', 'castval': '$76return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,337 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    $10load_global.1 = global(hasattr: <built-in function hasattr>) ['$10load_global.1']
    $24call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.1', '$24call.5', 'attr', 'obj']
    $const32.6.2 = const(bool, True)         ['$const32.6.2']
    $34compare_op.7 = $24call.5 == $const32.6.2 ['$24call.5', '$34compare_op.7', '$const32.6.2']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.7, func=bool38, args=(Var($34compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.7', '$38pred', 'bool38']
    branch $38pred, 40, 74                   ['$38pred']
label 40:
    $42load_global.1 = global(getattr: <built-in function getattr>) ['$42load_global.1']
    $56call.5 = call $42load_global.1(obj, attr, func=$42load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.1', '$56call.5', 'attr', 'obj']
    $64call.6 = call $56call.5(func=$56call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$56call.5', '$64call.6']
    $72return_value.7 = cast(value=$64call.6) ['$64call.6', '$72return_value.7']
    return $72return_value.7                 ['$72return_value.7']
label 74:
    $74load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$74load_deref.0']
    $76return_value.1 = cast(value=$74load_deref.0) ['$74load_deref.0', '$76return_value.1']
    return $76return_value.1                 ['$76return_value.1']

2025-07-23 17:15:55,344 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,344 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69AF920>
2025-07-23 17:15:55,345 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,345 - DEBUG - on stmt: attr = const(str, __repr__)
2025-07-23 17:15:55,345 - DEBUG - on stmt: $10load_global.1 = global(hasattr: <built-in function hasattr>)
2025-07-23 17:15:55,345 - DEBUG - on stmt: $24call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,345 - DEBUG - on stmt: $const32.6.2 = const(bool, True)
2025-07-23 17:15:55,345 - DEBUG - on stmt: $34compare_op.7 = $24call.5 == $const32.6.2
2025-07-23 17:15:55,345 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:15:55,345 - DEBUG - on stmt: $38pred = call bool38($34compare_op.7, func=bool38, args=(Var($34compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,346 - DEBUG - on stmt: branch $38pred, 40, 74
2025-07-23 17:15:55,346 - DEBUG - ==== SSA block analysis pass on 40
2025-07-23 17:15:55,346 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69AF920>
2025-07-23 17:15:55,346 - DEBUG - on stmt: $42load_global.1 = global(getattr: <built-in function getattr>)
2025-07-23 17:15:55,346 - DEBUG - on stmt: $56call.5 = call $42load_global.1(obj, attr, func=$42load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,346 - DEBUG - on stmt: $64call.6 = call $56call.5(func=$56call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,347 - DEBUG - on stmt: $72return_value.7 = cast(value=$64call.6)
2025-07-23 17:15:55,347 - DEBUG - on stmt: return $72return_value.7
2025-07-23 17:15:55,347 - DEBUG - ==== SSA block analysis pass on 74
2025-07-23 17:15:55,347 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69AF920>
2025-07-23 17:15:55,347 - DEBUG - on stmt: $74load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>)
2025-07-23 17:15:55,348 - DEBUG - on stmt: $76return_value.1 = cast(value=$74load_deref.0)
2025-07-23 17:15:55,348 - DEBUG - on stmt: return $76return_value.1
2025-07-23 17:15:55,348 - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E69AED20>,
                                   0)],
             '$24call.5': [(<numba.core.ir.Assign object at 0x000001F6E69AF0B0>,
                            0)],
             '$34compare_op.7': [(<numba.core.ir.Assign object at 0x000001F6E69AF350>,
                                  0)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001F6E69AF5F0>,
                          0)],
             '$42load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E69AF710>,
                                   40)],
             '$56call.5': [(<numba.core.ir.Assign object at 0x000001F6E69AFAA0>,
                            40)],
             '$64call.6': [(<numba.core.ir.Assign object at 0x000001F6E69AFC20>,
                            40)],
             '$72return_value.7': [(<numba.core.ir.Assign object at 0x000001F6E69AFD40>,
                                    40)],
             '$74load_deref.0': [(<numba.core.ir.Assign object at 0x000001F6E69AFE60>,
                                  74)],
             '$76return_value.1': [(<numba.core.ir.Assign object at 0x000001F6E69AFFB0>,
                                    74)],
             '$const32.6.2': [(<numba.core.ir.Assign object at 0x000001F6E69AF1D0>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x000001F6E69AEAE0>, 0)],
             'bool38': [(<numba.core.ir.Assign object at 0x000001F6E69AF4A0>,
                         0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E69AE960>, 0)]})
2025-07-23 17:15:55,349 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69AF920>
2025-07-23 17:15:55,355 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,355 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,355 - DEBUG - stack: []
2025-07-23 17:15:55,355 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,356 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:55,356 - DEBUG - stack []
2025-07-23 17:15:55,356 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:55,356 - DEBUG - stack []
2025-07-23 17:15:55,356 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:55,357 - DEBUG - stack []
2025-07-23 17:15:55,357 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:55,357 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,357 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:55,357 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,357 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:55,359 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,359 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,359 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:55,360 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,360 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,360 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,361 - DEBUG - defmap: {}
2025-07-23 17:15:55,361 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,362 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,362 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,362 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,363 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,363 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,364 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:55,366 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,366 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69AE090>
2025-07-23 17:15:55,366 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,366 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,366 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:55,367 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,367 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:55,367 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:55,367 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E69B66F0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E69B6810>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E69B6360>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E69B61E0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E69B60C0>, 0)]})
2025-07-23 17:15:55,368 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69AE090>
2025-07-23 17:15:55,375 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:55,389 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:55,395 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,396 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,396 - DEBUG - stack: []
2025-07-23 17:15:55,396 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,396 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:55,396 - DEBUG - stack []
2025-07-23 17:15:55,397 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:55,397 - DEBUG - stack []
2025-07-23 17:15:55,397 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:55,397 - DEBUG - stack []
2025-07-23 17:15:55,398 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:55,398 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,398 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:55,398 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,398 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:55,399 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,399 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,399 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:55,399 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,399 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,399 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,400 - DEBUG - defmap: {}
2025-07-23 17:15:55,401 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,401 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,401 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,401 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,401 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,401 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,401 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:55,401 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,401 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69B5A00>
2025-07-23 17:15:55,401 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,401 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,401 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:55,401 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,401 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:55,401 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:55,401 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E69B5DF0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E69B4560>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E69B7110>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E69B71A0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E69B72F0>, 0)]})
2025-07-23 17:15:55,401 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69B5A00>
2025-07-23 17:15:55,457 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          14	LOAD_FAST(arg=0, lineno=955)
          16	LOAD_FAST(arg=1, lineno=955)
          18	LOAD_GLOBAL(arg=2, lineno=955)
          28	CALL(arg=3, lineno=955)
          36	RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:55,458 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,458 - DEBUG - stack: []
2025-07-23 17:15:55,458 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,459 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=954)
2025-07-23 17:15:55,459 - DEBUG - stack []
2025-07-23 17:15:55,459 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=954)
2025-07-23 17:15:55,460 - DEBUG - stack []
2025-07-23 17:15:55,460 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
2025-07-23 17:15:55,460 - DEBUG - stack []
2025-07-23 17:15:55,461 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=955)
2025-07-23 17:15:55,461 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,461 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=955)
2025-07-23 17:15:55,462 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,462 - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=955)
2025-07-23 17:15:55,463 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,463 - DEBUG - dispatch pc=28, inst=CALL(arg=3, lineno=955)
2025-07-23 17:15:55,463 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3', '$18load_global.4']
2025-07-23 17:15:55,463 - DEBUG - dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=955)
2025-07-23 17:15:55,464 - DEBUG - stack ['$28call.5']
2025-07-23 17:15:55,464 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,464 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,464 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,465 - DEBUG - defmap: {}
2025-07-23 17:15:55,465 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,465 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,466 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,466 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,466 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,466 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'idx': 1, 'res': '$18load_global.4'}), (28, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3', '$18load_global.4'], 'kw_names': None, 'res': '$28call.5'}), (36, {'retval': '$28call.5', 'castval': '$36return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,467 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $18load_global.4 = global(_getattr_default: _getattr_default_type()) ['$18load_global.4']
    $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.4', '$28call.5', '$4load_global.0', 'name', 'obj']
    $36return_value.6 = cast(value=$28call.5) ['$28call.5', '$36return_value.6']
    return $36return_value.6                 ['$36return_value.6']

2025-07-23 17:15:55,471 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,471 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69FB0B0>
2025-07-23 17:15:55,472 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,472 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,473 - DEBUG - on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
2025-07-23 17:15:55,473 - DEBUG - on stmt: $18load_global.4 = global(_getattr_default: _getattr_default_type())
2025-07-23 17:15:55,473 - DEBUG - on stmt: $28call.5 = call $4load_global.0(obj, name, $18load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($18load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,474 - DEBUG - on stmt: $36return_value.6 = cast(value=$28call.5)
2025-07-23 17:15:55,474 - DEBUG - on stmt: return $36return_value.6
2025-07-23 17:15:55,474 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18load_global.4': [(<numba.core.ir.Assign object at 0x000001F6E69FA990>,
                                   0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x000001F6E69FAB40>,
                            0)],
             '$36return_value.6': [(<numba.core.ir.Assign object at 0x000001F6E69FAC60>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E69FA660>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E69FA4E0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E69FA3C0>, 0)]})
2025-07-23 17:15:55,475 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69FB0B0>
2025-07-23 17:15:55,531 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2564)
           2	RESUME(arg=0, lineno=2564)
           4	LOAD_CONST(arg=1, lineno=2564)
           6	LOAD_FAST(arg=0, lineno=2564)
           8	BINARY_OP(arg=0, lineno=2564)
          12	LOAD_CONST(arg=1, lineno=2564)
          14	BINARY_OP(arg=0, lineno=2564)
          18	RETURN_VALUE(arg=None, lineno=2564)
2025-07-23 17:15:55,532 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,532 - DEBUG - stack: []
2025-07-23 17:15:55,532 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,532 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2564)
2025-07-23 17:15:55,533 - DEBUG - stack []
2025-07-23 17:15:55,533 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=2564)
2025-07-23 17:15:55,533 - DEBUG - stack []
2025-07-23 17:15:55,533 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2564)
2025-07-23 17:15:55,534 - DEBUG - stack []
2025-07-23 17:15:55,534 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2564)
2025-07-23 17:15:55,534 - DEBUG - stack ['$const4.0.1']
2025-07-23 17:15:55,534 - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=0, lineno=2564)
2025-07-23 17:15:55,535 - DEBUG - stack ['$const4.0.1', '$s6.1']
2025-07-23 17:15:55,535 - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=2564)
2025-07-23 17:15:55,535 - DEBUG - stack ['$binop_add8.2']
2025-07-23 17:15:55,535 - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=0, lineno=2564)
2025-07-23 17:15:55,536 - DEBUG - stack ['$binop_add8.2', '$const12.3.1']
2025-07-23 17:15:55,536 - DEBUG - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=2564)
2025-07-23 17:15:55,536 - DEBUG - stack ['$binop_add14.4']
2025-07-23 17:15:55,537 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,537 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,537 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,537 - DEBUG - defmap: {}
2025-07-23 17:15:55,538 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,538 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,538 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,538 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,539 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,539 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'res': '$s6.1'}), (8, {'op': '+', 'lhs': '$const4.0.1', 'rhs': '$s6.1', 'res': '$binop_add8.2'}), (12, {'res': '$const12.3.1'}), (14, {'op': '+', 'lhs': '$binop_add8.2', 'rhs': '$const12.3.1', 'res': '$binop_add14.4'}), (18, {'retval': '$binop_add14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,540 - DEBUG - label 0:
    s = arg(0, name=s)                       ['s']
    $const4.0.1 = const(str, ')              ['$const4.0.1']
    $binop_add8.2 = $const4.0.1 + s          ['$binop_add8.2', '$const4.0.1', 's']
    $const12.3.1 = const(str, ')             ['$const12.3.1']
    $binop_add14.4 = $binop_add8.2 + $const12.3.1 ['$binop_add14.4', '$binop_add8.2', '$const12.3.1']
    $18return_value.5 = cast(value=$binop_add14.4) ['$18return_value.5', '$binop_add14.4']
    return $18return_value.5                 ['$18return_value.5']

2025-07-23 17:15:55,543 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,544 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E69ACDA0>
2025-07-23 17:15:55,544 - DEBUG - on stmt: s = arg(0, name=s)
2025-07-23 17:15:55,544 - DEBUG - on stmt: $const4.0.1 = const(str, ')
2025-07-23 17:15:55,544 - DEBUG - on stmt: $binop_add8.2 = $const4.0.1 + s
2025-07-23 17:15:55,544 - DEBUG - on stmt: $const12.3.1 = const(str, ')
2025-07-23 17:15:55,545 - DEBUG - on stmt: $binop_add14.4 = $binop_add8.2 + $const12.3.1
2025-07-23 17:15:55,545 - DEBUG - on stmt: $18return_value.5 = cast(value=$binop_add14.4)
2025-07-23 17:15:55,545 - DEBUG - on stmt: return $18return_value.5
2025-07-23 17:15:55,545 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E69973E0>,
                                    0)],
             '$binop_add14.4': [(<numba.core.ir.Assign object at 0x000001F6E69977D0>,
                                 0)],
             '$binop_add8.2': [(<numba.core.ir.Assign object at 0x000001F6E6997650>,
                                0)],
             '$const12.3.1': [(<numba.core.ir.Assign object at 0x000001F6E6997860>,
                               0)],
             '$const4.0.1': [(<numba.core.ir.Assign object at 0x000001F6E6997FB0>,
                              0)],
             's': [(<numba.core.ir.Assign object at 0x000001F6E69AC950>, 0)]})
2025-07-23 17:15:55,546 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E69ACDA0>
2025-07-23 17:15:55,555 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1885)
           2	RESUME(arg=0, lineno=1885)
           4	LOAD_FAST(arg=0, lineno=1886)
           6	LOAD_ATTR(arg=0, lineno=1886)
          26	LOAD_FAST(arg=1, lineno=1886)
          28	LOAD_ATTR(arg=0, lineno=1886)
          48	BINARY_OP(arg=0, lineno=1886)
          52	STORE_FAST(arg=2, lineno=1886)
          54	LOAD_GLOBAL(arg=3, lineno=1887)
          64	LOAD_FAST(arg=0, lineno=1887)
          66	LOAD_ATTR(arg=4, lineno=1887)
          86	LOAD_FAST(arg=1, lineno=1887)
          88	LOAD_ATTR(arg=4, lineno=1887)
         108	CALL(arg=2, lineno=1887)
         116	STORE_FAST(arg=3, lineno=1887)
         118	LOAD_GLOBAL(arg=7, lineno=1888)
         128	LOAD_FAST(arg=0, lineno=1888)
         130	LOAD_ATTR(arg=8, lineno=1888)
         150	LOAD_FAST(arg=1, lineno=1888)
         152	LOAD_ATTR(arg=8, lineno=1888)
         172	CALL(arg=2, lineno=1888)
         180	STORE_FAST(arg=4, lineno=1888)
         182	LOAD_GLOBAL(arg=11, lineno=1889)
         192	LOAD_FAST(arg=3, lineno=1889)
         194	LOAD_FAST(arg=2, lineno=1889)
         196	LOAD_FAST(arg=4, lineno=1889)
         198	CALL(arg=3, lineno=1889)
         206	STORE_FAST(arg=5, lineno=1889)
         208	LOAD_GLOBAL(arg=13, lineno=1890)
         218	LOAD_GLOBAL(arg=15, lineno=1890)
         228	LOAD_FAST(arg=0, lineno=1890)
         230	CALL(arg=1, lineno=1890)
         238	CALL(arg=1, lineno=1890)
         246	GET_ITER(arg=None, lineno=1890)
>        248	FOR_ITER(arg=25, lineno=1890)
         252	STORE_FAST(arg=6, lineno=1890)
         254	LOAD_GLOBAL(arg=17, lineno=1891)
         264	LOAD_FAST(arg=5, lineno=1891)
         266	LOAD_FAST(arg=6, lineno=1891)
         268	LOAD_GLOBAL(arg=19, lineno=1891)
         278	LOAD_FAST(arg=0, lineno=1891)
         280	LOAD_FAST(arg=6, lineno=1891)
         282	CALL(arg=2, lineno=1891)
         290	CALL(arg=3, lineno=1891)
         298	POP_TOP(arg=None, lineno=1891)
         300	JUMP_BACKWARD(arg=27, lineno=1891)
>        302	END_FOR(arg=None, lineno=1890)
         304	LOAD_GLOBAL(arg=13, lineno=1892)
         314	LOAD_GLOBAL(arg=15, lineno=1892)
         324	LOAD_FAST(arg=1, lineno=1892)
         326	CALL(arg=1, lineno=1892)
         334	CALL(arg=1, lineno=1892)
         342	GET_ITER(arg=None, lineno=1892)
>        344	FOR_ITER(arg=37, lineno=1892)
         348	STORE_FAST(arg=7, lineno=1892)
         350	LOAD_GLOBAL(arg=17, lineno=1893)
         360	LOAD_FAST(arg=5, lineno=1893)
         362	LOAD_GLOBAL(arg=15, lineno=1893)
         372	LOAD_FAST(arg=0, lineno=1893)
         374	CALL(arg=1, lineno=1893)
         382	LOAD_FAST(arg=7, lineno=1893)
         384	BINARY_OP(arg=0, lineno=1893)
         388	LOAD_GLOBAL(arg=19, lineno=1893)
         398	LOAD_FAST(arg=1, lineno=1893)
         400	LOAD_FAST(arg=7, lineno=1893)
         402	CALL(arg=2, lineno=1893)
         410	CALL(arg=3, lineno=1893)
         418	POP_TOP(arg=None, lineno=1893)
         420	JUMP_BACKWARD(arg=39, lineno=1893)
>        422	END_FOR(arg=None, lineno=1892)
         424	LOAD_FAST(arg=5, lineno=1894)
         426	RETURN_VALUE(arg=None, lineno=1894)
2025-07-23 17:15:55,555 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,556 - DEBUG - stack: []
2025-07-23 17:15:55,556 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,556 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1885)
2025-07-23 17:15:55,556 - DEBUG - stack []
2025-07-23 17:15:55,557 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1885)
2025-07-23 17:15:55,557 - DEBUG - stack []
2025-07-23 17:15:55,557 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1886)
2025-07-23 17:15:55,557 - DEBUG - stack []
2025-07-23 17:15:55,557 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=1886)
2025-07-23 17:15:55,557 - DEBUG - stack ['$a4.0']
2025-07-23 17:15:55,557 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=1886)
2025-07-23 17:15:55,559 - DEBUG - stack ['$6load_attr.1']
2025-07-23 17:15:55,559 - DEBUG - dispatch pc=28, inst=LOAD_ATTR(arg=0, lineno=1886)
2025-07-23 17:15:55,559 - DEBUG - stack ['$6load_attr.1', '$b26.2']
2025-07-23 17:15:55,559 - DEBUG - dispatch pc=48, inst=BINARY_OP(arg=0, lineno=1886)
2025-07-23 17:15:55,559 - DEBUG - stack ['$6load_attr.1', '$28load_attr.3']
2025-07-23 17:15:55,559 - DEBUG - dispatch pc=52, inst=STORE_FAST(arg=2, lineno=1886)
2025-07-23 17:15:55,560 - DEBUG - stack ['$binop_add48.4']
2025-07-23 17:15:55,560 - DEBUG - dispatch pc=54, inst=LOAD_GLOBAL(arg=3, lineno=1887)
2025-07-23 17:15:55,560 - DEBUG - stack []
2025-07-23 17:15:55,561 - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=1887)
2025-07-23 17:15:55,561 - DEBUG - stack ['$null$54.6', '$54load_global.5']
2025-07-23 17:15:55,561 - DEBUG - dispatch pc=66, inst=LOAD_ATTR(arg=4, lineno=1887)
2025-07-23 17:15:55,561 - DEBUG - stack ['$null$54.6', '$54load_global.5', '$a64.7']
2025-07-23 17:15:55,562 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=1887)
2025-07-23 17:15:55,562 - DEBUG - stack ['$null$54.6', '$54load_global.5', '$66load_attr.8']
2025-07-23 17:15:55,562 - DEBUG - dispatch pc=88, inst=LOAD_ATTR(arg=4, lineno=1887)
2025-07-23 17:15:55,562 - DEBUG - stack ['$null$54.6', '$54load_global.5', '$66load_attr.8', '$b86.9']
2025-07-23 17:15:55,563 - DEBUG - dispatch pc=108, inst=CALL(arg=2, lineno=1887)
2025-07-23 17:15:55,563 - DEBUG - stack ['$null$54.6', '$54load_global.5', '$66load_attr.8', '$88load_attr.10']
2025-07-23 17:15:55,563 - DEBUG - dispatch pc=116, inst=STORE_FAST(arg=3, lineno=1887)
2025-07-23 17:15:55,563 - DEBUG - stack ['$108call.11']
2025-07-23 17:15:55,564 - DEBUG - dispatch pc=118, inst=LOAD_GLOBAL(arg=7, lineno=1888)
2025-07-23 17:15:55,564 - DEBUG - stack []
2025-07-23 17:15:55,564 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=1888)
2025-07-23 17:15:55,564 - DEBUG - stack ['$null$118.13', '$118load_global.12']
2025-07-23 17:15:55,564 - DEBUG - dispatch pc=130, inst=LOAD_ATTR(arg=8, lineno=1888)
2025-07-23 17:15:55,565 - DEBUG - stack ['$null$118.13', '$118load_global.12', '$a128.14']
2025-07-23 17:15:55,565 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=1888)
2025-07-23 17:15:55,565 - DEBUG - stack ['$null$118.13', '$118load_global.12', '$130load_attr.15']
2025-07-23 17:15:55,565 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=8, lineno=1888)
2025-07-23 17:15:55,566 - DEBUG - stack ['$null$118.13', '$118load_global.12', '$130load_attr.15', '$b150.16']
2025-07-23 17:15:55,566 - DEBUG - dispatch pc=172, inst=CALL(arg=2, lineno=1888)
2025-07-23 17:15:55,566 - DEBUG - stack ['$null$118.13', '$118load_global.12', '$130load_attr.15', '$152load_attr.17']
2025-07-23 17:15:55,566 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=4, lineno=1888)
2025-07-23 17:15:55,566 - DEBUG - stack ['$172call.18']
2025-07-23 17:15:55,567 - DEBUG - dispatch pc=182, inst=LOAD_GLOBAL(arg=11, lineno=1889)
2025-07-23 17:15:55,567 - DEBUG - stack []
2025-07-23 17:15:55,567 - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=3, lineno=1889)
2025-07-23 17:15:55,567 - DEBUG - stack ['$null$182.20', '$182load_global.19']
2025-07-23 17:15:55,567 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=2, lineno=1889)
2025-07-23 17:15:55,567 - DEBUG - stack ['$null$182.20', '$182load_global.19', '$new_kind192.21']
2025-07-23 17:15:55,568 - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=4, lineno=1889)
2025-07-23 17:15:55,568 - DEBUG - stack ['$null$182.20', '$182load_global.19', '$new_kind192.21', '$new_length194.22']
2025-07-23 17:15:55,568 - DEBUG - dispatch pc=198, inst=CALL(arg=3, lineno=1889)
2025-07-23 17:15:55,568 - DEBUG - stack ['$null$182.20', '$182load_global.19', '$new_kind192.21', '$new_length194.22', '$new_ascii196.23']
2025-07-23 17:15:55,569 - DEBUG - dispatch pc=206, inst=STORE_FAST(arg=5, lineno=1889)
2025-07-23 17:15:55,569 - DEBUG - stack ['$198call.24']
2025-07-23 17:15:55,569 - DEBUG - dispatch pc=208, inst=LOAD_GLOBAL(arg=13, lineno=1890)
2025-07-23 17:15:55,569 - DEBUG - stack []
2025-07-23 17:15:55,569 - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=15, lineno=1890)
2025-07-23 17:15:55,569 - DEBUG - stack ['$null$208.26', '$208load_global.25']
2025-07-23 17:15:55,570 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=0, lineno=1890)
2025-07-23 17:15:55,570 - DEBUG - stack ['$null$208.26', '$208load_global.25', '$null$218.28', '$218load_global.27']
2025-07-23 17:15:55,570 - DEBUG - dispatch pc=230, inst=CALL(arg=1, lineno=1890)
2025-07-23 17:15:55,571 - DEBUG - stack ['$null$208.26', '$208load_global.25', '$null$218.28', '$218load_global.27', '$a228.29']
2025-07-23 17:15:55,571 - DEBUG - dispatch pc=238, inst=CALL(arg=1, lineno=1890)
2025-07-23 17:15:55,571 - DEBUG - stack ['$null$208.26', '$208load_global.25', '$230call.30']
2025-07-23 17:15:55,571 - DEBUG - dispatch pc=246, inst=GET_ITER(arg=None, lineno=1890)
2025-07-23 17:15:55,572 - DEBUG - stack ['$238call.31']
2025-07-23 17:15:55,572 - DEBUG - end state. edges=[Edge(pc=248, stack=('$246get_iter.32',), blockstack=(), npush=0)]
2025-07-23 17:15:55,572 - DEBUG - pending: deque([State(pc_initial=248 nstack_initial=1)])
2025-07-23 17:15:55,572 - DEBUG - stack: ['$phi248.0']
2025-07-23 17:15:55,573 - DEBUG - state.pc_initial: State(pc_initial=248 nstack_initial=1)
2025-07-23 17:15:55,573 - DEBUG - dispatch pc=248, inst=FOR_ITER(arg=25, lineno=1890)
2025-07-23 17:15:55,573 - DEBUG - stack ['$phi248.0']
2025-07-23 17:15:55,573 - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi248.0', '$248for_iter.2'), blockstack=(), npush=0), Edge(pc=252, stack=('$phi248.0', '$248for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:55,573 - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2), State(pc_initial=252 nstack_initial=2)])
2025-07-23 17:15:55,574 - DEBUG - stack: ['$phi302.0', '$phi302.1']
2025-07-23 17:15:55,574 - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=2)
2025-07-23 17:15:55,574 - DEBUG - dispatch pc=302, inst=END_FOR(arg=None, lineno=1890)
2025-07-23 17:15:55,574 - DEBUG - stack ['$phi302.0', '$phi302.1']
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=304, inst=LOAD_GLOBAL(arg=13, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack []
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=314, inst=LOAD_GLOBAL(arg=15, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack ['$null$304.3', '$304load_global.2']
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=324, inst=LOAD_FAST(arg=1, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack ['$null$304.3', '$304load_global.2', '$null$314.5', '$314load_global.4']
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=326, inst=CALL(arg=1, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack ['$null$304.3', '$304load_global.2', '$null$314.5', '$314load_global.4', '$b324.6']
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=334, inst=CALL(arg=1, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack ['$null$304.3', '$304load_global.2', '$326call.7']
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=342, inst=GET_ITER(arg=None, lineno=1892)
2025-07-23 17:15:55,575 - DEBUG - stack ['$334call.8']
2025-07-23 17:15:55,575 - DEBUG - end state. edges=[Edge(pc=344, stack=('$342get_iter.9',), blockstack=(), npush=0)]
2025-07-23 17:15:55,575 - DEBUG - pending: deque([State(pc_initial=252 nstack_initial=2), State(pc_initial=344 nstack_initial=1)])
2025-07-23 17:15:55,575 - DEBUG - stack: ['$phi252.0', '$phi252.1']
2025-07-23 17:15:55,575 - DEBUG - state.pc_initial: State(pc_initial=252 nstack_initial=2)
2025-07-23 17:15:55,575 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=6, lineno=1890)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$phi252.1']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=17, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=5, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=6, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=19, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4', '$i266.5']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=0, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4', '$i266.5', '$null$268.7', '$268load_global.6']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=6, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4', '$i266.5', '$null$268.7', '$268load_global.6', '$a278.8']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=282, inst=CALL(arg=2, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4', '$i266.5', '$null$268.7', '$268load_global.6', '$a278.8', '$i280.9']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=290, inst=CALL(arg=3, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$null$254.3', '$254load_global.2', '$result264.4', '$i266.5', '$282call.10']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=298, inst=POP_TOP(arg=None, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0', '$290call.11']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=300, inst=JUMP_BACKWARD(arg=27, lineno=1891)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi252.0']
2025-07-23 17:15:55,579 - DEBUG - end state. edges=[Edge(pc=248, stack=('$phi252.0',), blockstack=(), npush=0)]
2025-07-23 17:15:55,579 - DEBUG - pending: deque([State(pc_initial=344 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
2025-07-23 17:15:55,579 - DEBUG - stack: ['$phi344.0']
2025-07-23 17:15:55,579 - DEBUG - state.pc_initial: State(pc_initial=344 nstack_initial=1)
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=344, inst=FOR_ITER(arg=37, lineno=1892)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi344.0']
2025-07-23 17:15:55,579 - DEBUG - end state. edges=[Edge(pc=422, stack=('$phi344.0', '$344for_iter.2'), blockstack=(), npush=0), Edge(pc=348, stack=('$phi344.0', '$344for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:15:55,579 - DEBUG - pending: deque([State(pc_initial=248 nstack_initial=1), State(pc_initial=422 nstack_initial=2), State(pc_initial=348 nstack_initial=2)])
2025-07-23 17:15:55,579 - DEBUG - pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=348 nstack_initial=2)])
2025-07-23 17:15:55,579 - DEBUG - stack: ['$phi422.0', '$phi422.1']
2025-07-23 17:15:55,579 - DEBUG - state.pc_initial: State(pc_initial=422 nstack_initial=2)
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=422, inst=END_FOR(arg=None, lineno=1892)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi422.0', '$phi422.1']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=424, inst=LOAD_FAST(arg=5, lineno=1894)
2025-07-23 17:15:55,579 - DEBUG - stack []
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=426, inst=RETURN_VALUE(arg=None, lineno=1894)
2025-07-23 17:15:55,579 - DEBUG - stack ['$result424.2']
2025-07-23 17:15:55,579 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,579 - DEBUG - pending: deque([State(pc_initial=348 nstack_initial=2)])
2025-07-23 17:15:55,579 - DEBUG - stack: ['$phi348.0', '$phi348.1']
2025-07-23 17:15:55,579 - DEBUG - state.pc_initial: State(pc_initial=348 nstack_initial=2)
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=348, inst=STORE_FAST(arg=7, lineno=1892)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi348.0', '$phi348.1']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=350, inst=LOAD_GLOBAL(arg=17, lineno=1893)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi348.0']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=360, inst=LOAD_FAST(arg=5, lineno=1893)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=362, inst=LOAD_GLOBAL(arg=15, lineno=1893)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4']
2025-07-23 17:15:55,579 - DEBUG - dispatch pc=372, inst=LOAD_FAST(arg=0, lineno=1893)
2025-07-23 17:15:55,579 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$null$362.6', '$362load_global.5']
2025-07-23 17:15:55,589 - DEBUG - dispatch pc=374, inst=CALL(arg=1, lineno=1893)
2025-07-23 17:15:55,589 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$null$362.6', '$362load_global.5', '$a372.7']
2025-07-23 17:15:55,589 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=7, lineno=1893)
2025-07-23 17:15:55,589 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$374call.8']
2025-07-23 17:15:55,589 - DEBUG - dispatch pc=384, inst=BINARY_OP(arg=0, lineno=1893)
2025-07-23 17:15:55,589 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$374call.8', '$j382.9']
2025-07-23 17:15:55,590 - DEBUG - dispatch pc=388, inst=LOAD_GLOBAL(arg=19, lineno=1893)
2025-07-23 17:15:55,590 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$binop_add384.10']
2025-07-23 17:15:55,590 - DEBUG - dispatch pc=398, inst=LOAD_FAST(arg=1, lineno=1893)
2025-07-23 17:15:55,591 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$binop_add384.10', '$null$388.12', '$388load_global.11']
2025-07-23 17:15:55,591 - DEBUG - dispatch pc=400, inst=LOAD_FAST(arg=7, lineno=1893)
2025-07-23 17:15:55,591 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$binop_add384.10', '$null$388.12', '$388load_global.11', '$b398.13']
2025-07-23 17:15:55,592 - DEBUG - dispatch pc=402, inst=CALL(arg=2, lineno=1893)
2025-07-23 17:15:55,592 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$binop_add384.10', '$null$388.12', '$388load_global.11', '$b398.13', '$j400.14']
2025-07-23 17:15:55,592 - DEBUG - dispatch pc=410, inst=CALL(arg=3, lineno=1893)
2025-07-23 17:15:55,592 - DEBUG - stack ['$phi348.0', '$null$350.3', '$350load_global.2', '$result360.4', '$binop_add384.10', '$402call.15']
2025-07-23 17:15:55,592 - DEBUG - dispatch pc=418, inst=POP_TOP(arg=None, lineno=1893)
2025-07-23 17:15:55,593 - DEBUG - stack ['$phi348.0', '$410call.16']
2025-07-23 17:15:55,593 - DEBUG - dispatch pc=420, inst=JUMP_BACKWARD(arg=39, lineno=1893)
2025-07-23 17:15:55,593 - DEBUG - stack ['$phi348.0']
2025-07-23 17:15:55,593 - DEBUG - end state. edges=[Edge(pc=344, stack=('$phi348.0',), blockstack=(), npush=0)]
2025-07-23 17:15:55,593 - DEBUG - pending: deque([State(pc_initial=344 nstack_initial=1)])
2025-07-23 17:15:55,593 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,593 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=248 nstack_initial=1): {'$phi248.0'},
             State(pc_initial=252 nstack_initial=2): {'$phi252.1'},
             State(pc_initial=302 nstack_initial=2): set(),
             State(pc_initial=344 nstack_initial=1): {'$phi344.0'},
             State(pc_initial=348 nstack_initial=2): {'$phi348.1'},
             State(pc_initial=422 nstack_initial=2): set()})
2025-07-23 17:15:55,594 - DEBUG - defmap: {'$phi248.0': State(pc_initial=0 nstack_initial=0),
 '$phi252.1': State(pc_initial=248 nstack_initial=1),
 '$phi302.1': State(pc_initial=248 nstack_initial=1),
 '$phi344.0': State(pc_initial=302 nstack_initial=2),
 '$phi348.1': State(pc_initial=344 nstack_initial=1),
 '$phi422.1': State(pc_initial=344 nstack_initial=1)}
2025-07-23 17:15:55,594 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi248.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi252.0',
                            State(pc_initial=252 nstack_initial=2))},
             '$phi252.0': {('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi252.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi302.0': {('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi302.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi344.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2)),
                           ('$phi348.0',
                            State(pc_initial=348 nstack_initial=2))},
             '$phi348.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi348.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi422.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi422.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))}})
2025-07-23 17:15:55,595 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi248.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi252.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi302.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi344.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2)),
                           ('$phi344.0',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi348.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi348.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi422.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi422.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))}})
2025-07-23 17:15:55,595 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi248.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi302.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi344.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi348.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi348.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi422.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi422.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))}})
2025-07-23 17:15:55,596 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi248.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi252.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi302.0': {('$246get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$248for_iter.2',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi344.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi348.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi348.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))},
             '$phi422.0': {('$342get_iter.9',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi422.1': {('$344for_iter.2',
                            State(pc_initial=344 nstack_initial=1))}})
2025-07-23 17:15:55,597 - DEBUG - keep phismap: {'$phi248.0': {('$246get_iter.32', State(pc_initial=0 nstack_initial=0))},
 '$phi252.1': {('$248for_iter.2', State(pc_initial=248 nstack_initial=1))},
 '$phi344.0': {('$342get_iter.9', State(pc_initial=302 nstack_initial=2))},
 '$phi348.1': {('$344for_iter.2', State(pc_initial=344 nstack_initial=1))}}
2025-07-23 17:15:55,597 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi248.0': '$246get_iter.32'},
             State(pc_initial=248 nstack_initial=1): {'$phi252.1': '$248for_iter.2'},
             State(pc_initial=302 nstack_initial=2): {'$phi344.0': '$342get_iter.9'},
             State(pc_initial=344 nstack_initial=1): {'$phi348.1': '$344for_iter.2'}})
2025-07-23 17:15:55,597 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,597 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (26, {'res': '$b26.2'}), (28, {'item': '$b26.2', 'res': '$28load_attr.3'}), (48, {'op': '+', 'lhs': '$6load_attr.1', 'rhs': '$28load_attr.3', 'res': '$binop_add48.4'}), (52, {'value': '$binop_add48.4'}), (54, {'idx': 1, 'res': '$54load_global.5'}), (64, {'res': '$a64.7'}), (66, {'item': '$a64.7', 'res': '$66load_attr.8'}), (86, {'res': '$b86.9'}), (88, {'item': '$b86.9', 'res': '$88load_attr.10'}), (108, {'func': '$54load_global.5', 'args': ['$66load_attr.8', '$88load_attr.10'], 'kw_names': None, 'res': '$108call.11'}), (116, {'value': '$108call.11'}), (118, {'idx': 3, 'res': '$118load_global.12'}), (128, {'res': '$a128.14'}), (130, {'item': '$a128.14', 'res': '$130load_attr.15'}), (150, {'res': '$b150.16'}), (152, {'item': '$b150.16', 'res': '$152load_attr.17'}), (172, {'func': '$118load_global.12', 'args': ['$130load_attr.15', '$152load_attr.17'], 'kw_names': None, 'res': '$172call.18'}), (180, {'value': '$172call.18'}), (182, {'idx': 5, 'res': '$182load_global.19'}), (192, {'res': '$new_kind192.21'}), (194, {'res': '$new_length194.22'}), (196, {'res': '$new_ascii196.23'}), (198, {'func': '$182load_global.19', 'args': ['$new_kind192.21', '$new_length194.22', '$new_ascii196.23'], 'kw_names': None, 'res': '$198call.24'}), (206, {'value': '$198call.24'}), (208, {'idx': 6, 'res': '$208load_global.25'}), (218, {'idx': 7, 'res': '$218load_global.27'}), (228, {'res': '$a228.29'}), (230, {'func': '$218load_global.27', 'args': ['$a228.29'], 'kw_names': None, 'res': '$230call.30'}), (238, {'func': '$208load_global.25', 'args': ['$230call.30'], 'kw_names': None, 'res': '$238call.31'}), (246, {'value': '$238call.31', 'res': '$246get_iter.32'})), outgoing_phis={'$phi248.0': '$246get_iter.32'}, blockstack=(), active_try_block=None, outgoing_edgepushed={248: ('$246get_iter.32',)})
2025-07-23 17:15:55,599 - DEBUG - block_infos State(pc_initial=248 nstack_initial=1):
AdaptBlockInfo(insts=((248, {'iterator': '$phi248.0', 'pair': '$248for_iter.1', 'indval': '$248for_iter.2', 'pred': '$248for_iter.3'}),), outgoing_phis={'$phi252.1': '$248for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi248.0', '$248for_iter.2'), 252: ('$phi248.0', '$248for_iter.2')})
2025-07-23 17:15:55,599 - DEBUG - block_infos State(pc_initial=252 nstack_initial=2):
AdaptBlockInfo(insts=((252, {'value': '$phi252.1'}), (254, {'idx': 8, 'res': '$254load_global.2'}), (264, {'res': '$result264.4'}), (266, {'res': '$i266.5'}), (268, {'idx': 9, 'res': '$268load_global.6'}), (278, {'res': '$a278.8'}), (280, {'res': '$i280.9'}), (282, {'func': '$268load_global.6', 'args': ['$a278.8', '$i280.9'], 'kw_names': None, 'res': '$282call.10'}), (290, {'func': '$254load_global.2', 'args': ['$result264.4', '$i266.5', '$282call.10'], 'kw_names': None, 'res': '$290call.11'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={248: ('$phi252.0',)})
2025-07-23 17:15:55,599 - DEBUG - block_infos State(pc_initial=302 nstack_initial=2):
AdaptBlockInfo(insts=((304, {'idx': 6, 'res': '$304load_global.2'}), (314, {'idx': 7, 'res': '$314load_global.4'}), (324, {'res': '$b324.6'}), (326, {'func': '$314load_global.4', 'args': ['$b324.6'], 'kw_names': None, 'res': '$326call.7'}), (334, {'func': '$304load_global.2', 'args': ['$326call.7'], 'kw_names': None, 'res': '$334call.8'}), (342, {'value': '$334call.8', 'res': '$342get_iter.9'})), outgoing_phis={'$phi344.0': '$342get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={344: ('$342get_iter.9',)})
2025-07-23 17:15:55,599 - DEBUG - block_infos State(pc_initial=344 nstack_initial=1):
AdaptBlockInfo(insts=((344, {'iterator': '$phi344.0', 'pair': '$344for_iter.1', 'indval': '$344for_iter.2', 'pred': '$344for_iter.3'}),), outgoing_phis={'$phi348.1': '$344for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={422: ('$phi344.0', '$344for_iter.2'), 348: ('$phi344.0', '$344for_iter.2')})
2025-07-23 17:15:55,599 - DEBUG - block_infos State(pc_initial=348 nstack_initial=2):
AdaptBlockInfo(insts=((348, {'value': '$phi348.1'}), (350, {'idx': 8, 'res': '$350load_global.2'}), (360, {'res': '$result360.4'}), (362, {'idx': 7, 'res': '$362load_global.5'}), (372, {'res': '$a372.7'}), (374, {'func': '$362load_global.5', 'args': ['$a372.7'], 'kw_names': None, 'res': '$374call.8'}), (382, {'res': '$j382.9'}), (384, {'op': '+', 'lhs': '$374call.8', 'rhs': '$j382.9', 'res': '$binop_add384.10'}), (388, {'idx': 9, 'res': '$388load_global.11'}), (398, {'res': '$b398.13'}), (400, {'res': '$j400.14'}), (402, {'func': '$388load_global.11', 'args': ['$b398.13', '$j400.14'], 'kw_names': None, 'res': '$402call.15'}), (410, {'func': '$350load_global.2', 'args': ['$result360.4', '$binop_add384.10', '$402call.15'], 'kw_names': None, 'res': '$410call.16'}), (420, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={344: ('$phi348.0',)})
2025-07-23 17:15:55,600 - DEBUG - block_infos State(pc_initial=422 nstack_initial=2):
AdaptBlockInfo(insts=((424, {'res': '$result424.2'}), (426, {'retval': '$result424.2', 'castval': '$426return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,601 - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6load_attr.1 = getattr(value=a, attr=_length) ['$6load_attr.1', 'a']
    $28load_attr.3 = getattr(value=b, attr=_length) ['$28load_attr.3', 'b']
    new_length = $6load_attr.1 + $28load_attr.3 ['$28load_attr.3', '$6load_attr.1', 'new_length']
    $54load_global.5 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>) ['$54load_global.5']
    $66load_attr.8 = getattr(value=a, attr=_kind) ['$66load_attr.8', 'a']
    $88load_attr.10 = getattr(value=b, attr=_kind) ['$88load_attr.10', 'b']
    new_kind = call $54load_global.5($66load_attr.8, $88load_attr.10, func=$54load_global.5, args=[Var($66load_attr.8, unicode.py:1887), Var($88load_attr.10, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$54load_global.5', '$66load_attr.8', '$88load_attr.10', 'new_kind']
    $118load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>) ['$118load_global.12']
    $130load_attr.15 = getattr(value=a, attr=_is_ascii) ['$130load_attr.15', 'a']
    $152load_attr.17 = getattr(value=b, attr=_is_ascii) ['$152load_attr.17', 'b']
    new_ascii = call $118load_global.12($130load_attr.15, $152load_attr.17, func=$118load_global.12, args=[Var($130load_attr.15, unicode.py:1888), Var($152load_attr.17, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$118load_global.12', '$130load_attr.15', '$152load_attr.17', 'new_ascii']
    $182load_global.19 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>) ['$182load_global.19']
    result = call $182load_global.19(new_kind, new_length, new_ascii, func=$182load_global.19, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$182load_global.19', 'new_ascii', 'new_kind', 'new_length', 'result']
    $208load_global.25 = global(range: <class 'range'>) ['$208load_global.25']
    $218load_global.27 = global(len: <built-in function len>) ['$218load_global.27']
    $230call.30 = call $218load_global.27(a, func=$218load_global.27, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.27', '$230call.30', 'a']
    $238call.31 = call $208load_global.25($230call.30, func=$208load_global.25, args=[Var($230call.30, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$208load_global.25', '$230call.30', '$238call.31']
    $246get_iter.32 = getiter(value=$238call.31) ['$238call.31', '$246get_iter.32']
    $phi248.0 = $246get_iter.32              ['$246get_iter.32', '$phi248.0']
    jump 248                                 []
label 248:
    $248for_iter.1 = iternext(value=$phi248.0) ['$248for_iter.1', '$phi248.0']
    $248for_iter.2 = pair_first(value=$248for_iter.1) ['$248for_iter.1', '$248for_iter.2']
    $248for_iter.3 = pair_second(value=$248for_iter.1) ['$248for_iter.1', '$248for_iter.3']
    $phi252.1 = $248for_iter.2               ['$248for_iter.2', '$phi252.1']
    branch $248for_iter.3, 252, 302          ['$248for_iter.3']
label 252:
    i = $phi252.1                            ['$phi252.1', 'i']
    $254load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$254load_global.2']
    $268load_global.6 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>) ['$268load_global.6']
    $282call.10 = call $268load_global.6(a, i, func=$268load_global.6, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.6', '$282call.10', 'a', 'i']
    $290call.11 = call $254load_global.2(result, i, $282call.10, func=$254load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($282call.10, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.2', '$282call.10', '$290call.11', 'i', 'result']
    jump 248                                 []
label 302:
    $304load_global.2 = global(range: <class 'range'>) ['$304load_global.2']
    $314load_global.4 = global(len: <built-in function len>) ['$314load_global.4']
    $326call.7 = call $314load_global.4(b, func=$314load_global.4, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$314load_global.4', '$326call.7', 'b']
    $334call.8 = call $304load_global.2($326call.7, func=$304load_global.2, args=[Var($326call.7, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$304load_global.2', '$326call.7', '$334call.8']
    $342get_iter.9 = getiter(value=$334call.8) ['$334call.8', '$342get_iter.9']
    $phi344.0 = $342get_iter.9               ['$342get_iter.9', '$phi344.0']
    jump 344                                 []
label 344:
    $344for_iter.1 = iternext(value=$phi344.0) ['$344for_iter.1', '$phi344.0']
    $344for_iter.2 = pair_first(value=$344for_iter.1) ['$344for_iter.1', '$344for_iter.2']
    $344for_iter.3 = pair_second(value=$344for_iter.1) ['$344for_iter.1', '$344for_iter.3']
    $phi348.1 = $344for_iter.2               ['$344for_iter.2', '$phi348.1']
    branch $344for_iter.3, 348, 422          ['$344for_iter.3']
label 348:
    j = $phi348.1                            ['$phi348.1', 'j']
    $350load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>) ['$350load_global.2']
    $362load_global.5 = global(len: <built-in function len>) ['$362load_global.5']
    $374call.8 = call $362load_global.5(a, func=$362load_global.5, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$362load_global.5', '$374call.8', 'a']
    $binop_add384.10 = $374call.8 + j        ['$374call.8', '$binop_add384.10', 'j']
    $388load_global.11 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>) ['$388load_global.11']
    $402call.15 = call $388load_global.11(b, j, func=$388load_global.11, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$388load_global.11', '$402call.15', 'b', 'j']
    $410call.16 = call $350load_global.2(result, $binop_add384.10, $402call.15, func=$350load_global.2, args=[Var(result, unicode.py:1889), Var($binop_add384.10, unicode.py:1893), Var($402call.15, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$350load_global.2', '$402call.15', '$410call.16', '$binop_add384.10', 'result']
    jump 344                                 []
label 422:
    $426return_value.3 = cast(value=result)  ['$426return_value.3', 'result']
    return $426return_value.3                ['$426return_value.3']

2025-07-23 17:15:55,608 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,609 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,609 - DEBUG - on stmt: a = arg(0, name=a)
2025-07-23 17:15:55,609 - DEBUG - on stmt: b = arg(1, name=b)
2025-07-23 17:15:55,609 - DEBUG - on stmt: $6load_attr.1 = getattr(value=a, attr=_length)
2025-07-23 17:15:55,609 - DEBUG - on stmt: $28load_attr.3 = getattr(value=b, attr=_length)
2025-07-23 17:15:55,610 - DEBUG - on stmt: new_length = $6load_attr.1 + $28load_attr.3
2025-07-23 17:15:55,610 - DEBUG - on stmt: $54load_global.5 = global(_pick_kind: <function _pick_kind at 0x000001F6D1919620>)
2025-07-23 17:15:55,610 - DEBUG - on stmt: $66load_attr.8 = getattr(value=a, attr=_kind)
2025-07-23 17:15:55,610 - DEBUG - on stmt: $88load_attr.10 = getattr(value=b, attr=_kind)
2025-07-23 17:15:55,611 - DEBUG - on stmt: new_kind = call $54load_global.5($66load_attr.8, $88load_attr.10, func=$54load_global.5, args=[Var($66load_attr.8, unicode.py:1887), Var($88load_attr.10, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,611 - DEBUG - on stmt: $118load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x000001F6D1919760>)
2025-07-23 17:15:55,611 - DEBUG - on stmt: $130load_attr.15 = getattr(value=a, attr=_is_ascii)
2025-07-23 17:15:55,612 - DEBUG - on stmt: $152load_attr.17 = getattr(value=b, attr=_is_ascii)
2025-07-23 17:15:55,612 - DEBUG - on stmt: new_ascii = call $118load_global.12($130load_attr.15, $152load_attr.17, func=$118load_global.12, args=[Var($130load_attr.15, unicode.py:1888), Var($152load_attr.17, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,612 - DEBUG - on stmt: $182load_global.19 = global(_empty_string: <function _empty_string at 0x000001F6D1919120>)
2025-07-23 17:15:55,612 - DEBUG - on stmt: result = call $182load_global.19(new_kind, new_length, new_ascii, func=$182load_global.19, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,613 - DEBUG - on stmt: $208load_global.25 = global(range: <class 'range'>)
2025-07-23 17:15:55,613 - DEBUG - on stmt: $218load_global.27 = global(len: <built-in function len>)
2025-07-23 17:15:55,613 - DEBUG - on stmt: $230call.30 = call $218load_global.27(a, func=$218load_global.27, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,613 - DEBUG - on stmt: $238call.31 = call $208load_global.25($230call.30, func=$208load_global.25, args=[Var($230call.30, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,614 - DEBUG - on stmt: $246get_iter.32 = getiter(value=$238call.31)
2025-07-23 17:15:55,614 - DEBUG - on stmt: $phi248.0 = $246get_iter.32
2025-07-23 17:15:55,614 - DEBUG - on stmt: jump 248
2025-07-23 17:15:55,614 - DEBUG - ==== SSA block analysis pass on 248
2025-07-23 17:15:55,614 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,615 - DEBUG - on stmt: $248for_iter.1 = iternext(value=$phi248.0)
2025-07-23 17:15:55,615 - DEBUG - on stmt: $248for_iter.2 = pair_first(value=$248for_iter.1)
2025-07-23 17:15:55,615 - DEBUG - on stmt: $248for_iter.3 = pair_second(value=$248for_iter.1)
2025-07-23 17:15:55,615 - DEBUG - on stmt: $phi252.1 = $248for_iter.2
2025-07-23 17:15:55,615 - DEBUG - on stmt: branch $248for_iter.3, 252, 302
2025-07-23 17:15:55,616 - DEBUG - ==== SSA block analysis pass on 252
2025-07-23 17:15:55,616 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,616 - DEBUG - on stmt: i = $phi252.1
2025-07-23 17:15:55,616 - DEBUG - on stmt: $254load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:55,616 - DEBUG - on stmt: $268load_global.6 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>)
2025-07-23 17:15:55,616 - DEBUG - on stmt: $282call.10 = call $268load_global.6(a, i, func=$268load_global.6, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,616 - DEBUG - on stmt: $290call.11 = call $254load_global.2(result, i, $282call.10, func=$254load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($282call.10, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,617 - DEBUG - on stmt: jump 248
2025-07-23 17:15:55,617 - DEBUG - ==== SSA block analysis pass on 302
2025-07-23 17:15:55,617 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,617 - DEBUG - on stmt: $304load_global.2 = global(range: <class 'range'>)
2025-07-23 17:15:55,617 - DEBUG - on stmt: $314load_global.4 = global(len: <built-in function len>)
2025-07-23 17:15:55,617 - DEBUG - on stmt: $326call.7 = call $314load_global.4(b, func=$314load_global.4, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,617 - DEBUG - on stmt: $334call.8 = call $304load_global.2($326call.7, func=$304load_global.2, args=[Var($326call.7, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,617 - DEBUG - on stmt: $342get_iter.9 = getiter(value=$334call.8)
2025-07-23 17:15:55,619 - DEBUG - on stmt: $phi344.0 = $342get_iter.9
2025-07-23 17:15:55,619 - DEBUG - on stmt: jump 344
2025-07-23 17:15:55,619 - DEBUG - ==== SSA block analysis pass on 344
2025-07-23 17:15:55,619 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,619 - DEBUG - on stmt: $344for_iter.1 = iternext(value=$phi344.0)
2025-07-23 17:15:55,619 - DEBUG - on stmt: $344for_iter.2 = pair_first(value=$344for_iter.1)
2025-07-23 17:15:55,619 - DEBUG - on stmt: $344for_iter.3 = pair_second(value=$344for_iter.1)
2025-07-23 17:15:55,620 - DEBUG - on stmt: $phi348.1 = $344for_iter.2
2025-07-23 17:15:55,620 - DEBUG - on stmt: branch $344for_iter.3, 348, 422
2025-07-23 17:15:55,620 - DEBUG - ==== SSA block analysis pass on 348
2025-07-23 17:15:55,620 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,621 - DEBUG - on stmt: j = $phi348.1
2025-07-23 17:15:55,621 - DEBUG - on stmt: $350load_global.2 = global(_set_code_point: <function _set_code_point at 0x000001F6D19196C0>)
2025-07-23 17:15:55,621 - DEBUG - on stmt: $362load_global.5 = global(len: <built-in function len>)
2025-07-23 17:15:55,622 - DEBUG - on stmt: $374call.8 = call $362load_global.5(a, func=$362load_global.5, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,622 - DEBUG - on stmt: $binop_add384.10 = $374call.8 + j
2025-07-23 17:15:55,623 - DEBUG - on stmt: $388load_global.11 = global(_get_code_point: <function _get_code_point at 0x000001F6D1919260>)
2025-07-23 17:15:55,623 - DEBUG - on stmt: $402call.15 = call $388load_global.11(b, j, func=$388load_global.11, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,623 - DEBUG - on stmt: $410call.16 = call $350load_global.2(result, $binop_add384.10, $402call.15, func=$350load_global.2, args=[Var(result, unicode.py:1889), Var($binop_add384.10, unicode.py:1893), Var($402call.15, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,623 - DEBUG - on stmt: jump 344
2025-07-23 17:15:55,624 - DEBUG - ==== SSA block analysis pass on 422
2025-07-23 17:15:55,624 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E68765A0>
2025-07-23 17:15:55,624 - DEBUG - on stmt: $426return_value.3 = cast(value=result)
2025-07-23 17:15:55,624 - DEBUG - on stmt: return $426return_value.3
2025-07-23 17:15:55,624 - DEBUG - defs defaultdict(<class 'list'>,
            {'$118load_global.12': [(<numba.core.ir.Assign object at 0x000001F6E68FD910>,
                                     0)],
             '$130load_attr.15': [(<numba.core.ir.Assign object at 0x000001F6E68FF380>,
                                   0)],
             '$152load_attr.17': [(<numba.core.ir.Assign object at 0x000001F6E68FD730>,
                                   0)],
             '$182load_global.19': [(<numba.core.ir.Assign object at 0x000001F6E68FCFB0>,
                                     0)],
             '$208load_global.25': [(<numba.core.ir.Assign object at 0x000001F6E68FF830>,
                                     0)],
             '$218load_global.27': [(<numba.core.ir.Assign object at 0x000001F6E68FEF60>,
                                     0)],
             '$230call.30': [(<numba.core.ir.Assign object at 0x000001F6E68FEB40>,
                              0)],
             '$238call.31': [(<numba.core.ir.Assign object at 0x000001F6E68FED80>,
                              0)],
             '$246get_iter.32': [(<numba.core.ir.Assign object at 0x000001F6E68FEBD0>,
                                  0)],
             '$248for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E68FD8E0>,
                                 248)],
             '$248for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E68FDB80>,
                                 248)],
             '$248for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E68FEA80>,
                                 248)],
             '$254load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E68FE6C0>,
                                    252)],
             '$268load_global.6': [(<numba.core.ir.Assign object at 0x000001F6E68FE0F0>,
                                    252)],
             '$282call.10': [(<numba.core.ir.Assign object at 0x000001F6E68FF860>,
                              252)],
             '$28load_attr.3': [(<numba.core.ir.Assign object at 0x000001F6E68FC9B0>,
                                 0)],
             '$290call.11': [(<numba.core.ir.Assign object at 0x000001F6E68FF710>,
                              252)],
             '$304load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E68FF650>,
                                    302)],
             '$314load_global.4': [(<numba.core.ir.Assign object at 0x000001F6E68FFC50>,
                                    302)],
             '$326call.7': [(<numba.core.ir.Assign object at 0x000001F6E68FC5C0>,
                             302)],
             '$334call.8': [(<numba.core.ir.Assign object at 0x000001F6E68FF920>,
                             302)],
             '$342get_iter.9': [(<numba.core.ir.Assign object at 0x000001F6E6817EC0>,
                                 302)],
             '$344for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E6816780>,
                                 344)],
             '$344for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E6817AA0>,
                                 344)],
             '$344for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E6815AC0>,
                                 344)],
             '$350load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E68173E0>,
                                    348)],
             '$362load_global.5': [(<numba.core.ir.Assign object at 0x000001F6E68155B0>,
                                    348)],
             '$374call.8': [(<numba.core.ir.Assign object at 0x000001F6E68EDBB0>,
                             348)],
             '$388load_global.11': [(<numba.core.ir.Assign object at 0x000001F6E66F3140>,
                                     348)],
             '$402call.15': [(<numba.core.ir.Assign object at 0x000001F6E66F03B0>,
                              348)],
             '$410call.16': [(<numba.core.ir.Assign object at 0x000001F6E689E270>,
                              348)],
             '$426return_value.3': [(<numba.core.ir.Assign object at 0x000001F6E672ED80>,
                                     422)],
             '$54load_global.5': [(<numba.core.ir.Assign object at 0x000001F6E68FE4B0>,
                                   0)],
             '$66load_attr.8': [(<numba.core.ir.Assign object at 0x000001F6E68FCE60>,
                                 0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6E68FDD00>,
                                0)],
             '$88load_attr.10': [(<numba.core.ir.Assign object at 0x000001F6E68FF9E0>,
                                  0)],
             '$binop_add384.10': [(<numba.core.ir.Assign object at 0x000001F6E66F2BD0>,
                                   348)],
             '$phi248.0': [(<numba.core.ir.Assign object at 0x000001F6E6996690>,
                            0)],
             '$phi252.1': [(<numba.core.ir.Assign object at 0x000001F6E68FEBA0>,
                            248)],
             '$phi344.0': [(<numba.core.ir.Assign object at 0x000001F6E68FE750>,
                            302)],
             '$phi348.1': [(<numba.core.ir.Assign object at 0x000001F6E68151C0>,
                            344)],
             'a': [(<numba.core.ir.Assign object at 0x000001F6E6997710>, 0)],
             'b': [(<numba.core.ir.Assign object at 0x000001F6E6997A10>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E68FE7B0>, 252)],
             'j': [(<numba.core.ir.Assign object at 0x000001F6E6816840>, 348)],
             'new_ascii': [(<numba.core.ir.Assign object at 0x000001F6E68FDA90>,
                            0)],
             'new_kind': [(<numba.core.ir.Assign object at 0x000001F6E68FF2C0>,
                           0)],
             'new_length': [(<numba.core.ir.Assign object at 0x000001F6E68FDD90>,
                             0)],
             'result': [(<numba.core.ir.Assign object at 0x000001F6E68FD2E0>,
                         0)]})
2025-07-23 17:15:55,627 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E68765A0>
2025-07-23 17:15:55,914 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,914 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:55,914 - DEBUG - stack: []
2025-07-23 17:15:55,915 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:55,915 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:55,915 - DEBUG - stack []
2025-07-23 17:15:55,916 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:55,916 - DEBUG - stack []
2025-07-23 17:15:55,916 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:55,917 - DEBUG - stack []
2025-07-23 17:15:55,917 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:55,920 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:55,921 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:55,921 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:55,922 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:55,922 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:55,922 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:55,923 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:55,923 - DEBUG - end state. edges=[]
2025-07-23 17:15:55,924 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:55,924 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:55,924 - DEBUG - defmap: {}
2025-07-23 17:15:55,924 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,925 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:55,925 - DEBUG - keep phismap: {}
2025-07-23 17:15:55,925 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:55,926 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:55,926 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:55,926 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:55,928 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:55,928 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6ADB770>
2025-07-23 17:15:55,929 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:55,929 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:55,929 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:55,929 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:55,930 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:55,930 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:55,930 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E6ADB2F0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E6ADB410>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6ADAF60>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6ADADE0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6ADACC0>, 0)]})
2025-07-23 17:15:55,931 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6ADB770>
2025-07-23 17:15:55,938 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:55,949 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:56,341 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          14	LOAD_FAST(arg=0, lineno=999)
          16	LOAD_FAST(arg=1, lineno=999)
          18	CALL(arg=2, lineno=999)
          26	RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:56,341 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:56,342 - DEBUG - stack: []
2025-07-23 17:15:56,342 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:56,342 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=998)
2025-07-23 17:15:56,342 - DEBUG - stack []
2025-07-23 17:15:56,342 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=998)
2025-07-23 17:15:56,343 - DEBUG - stack []
2025-07-23 17:15:56,343 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
2025-07-23 17:15:56,344 - DEBUG - stack []
2025-07-23 17:15:56,344 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=999)
2025-07-23 17:15:56,344 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:56,344 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=999)
2025-07-23 17:15:56,344 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2']
2025-07-23 17:15:56,345 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=999)
2025-07-23 17:15:56,345 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$obj14.2', '$name16.3']
2025-07-23 17:15:56,345 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=999)
2025-07-23 17:15:56,345 - DEBUG - stack ['$18call.4']
2025-07-23 17:15:56,345 - DEBUG - end state. edges=[]
2025-07-23 17:15:56,345 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:56,346 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:15:56,346 - DEBUG - defmap: {}
2025-07-23 17:15:56,346 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:56,346 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:15:56,346 - DEBUG - keep phismap: {}
2025-07-23 17:15:56,346 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:15:56,346 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:56,347 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$obj14.2'}), (16, {'res': '$name16.3'}), (18, {'func': '$4load_global.0', 'args': ['$obj14.2', '$name16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:56,347 - DEBUG - label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'name', 'obj']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:15:56,348 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:56,348 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E6B2FF80>
2025-07-23 17:15:56,348 - DEBUG - on stmt: obj = arg(0, name=obj)
2025-07-23 17:15:56,348 - DEBUG - on stmt: name = arg(1, name=name)
2025-07-23 17:15:56,349 - DEBUG - on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
2025-07-23 17:15:56,349 - DEBUG - on stmt: $18call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:56,349 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:15:56,349 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:15:56,349 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6E6B2FCB0>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6E6B2FDD0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E6B2F950>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x000001F6E6B2F800>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x000001F6E6B2F6E0>, 0)]})
2025-07-23 17:15:56,349 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E6B2FF80>
2025-07-23 17:15:56,357 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:56,363 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(float64, 2, 'C', False, aligned=True), slice<a:b>, Array(float32, 2, 'C', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
2025-07-23 17:15:57,816 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1650)
           2	RESUME(arg=0, lineno=1650)
           4	LOAD_GLOBAL(arg=1, lineno=1651)
          14	LOAD_FAST(arg=0, lineno=1651)
          16	CALL(arg=1, lineno=1651)
          24	LOAD_CONST(arg=1, lineno=1651)
          26	COMPARE_OP(arg=40, lineno=1651)
          30	POP_JUMP_IF_FALSE(arg=10, lineno=1651)
          32	LOAD_CONST(arg=2, lineno=1652)
          34	LOAD_FAST(arg=0, lineno=1652)
          36	LOAD_CONST(arg=3, lineno=1652)
          38	BINARY_SUBSCR(arg=None, lineno=1652)
          42	FORMAT_VALUE(arg=0, lineno=1652)
          44	LOAD_CONST(arg=4, lineno=1652)
          46	BUILD_STRING(arg=3, lineno=1652)
          48	STORE_FAST(arg=2, lineno=1652)
          50	JUMP_FORWARD(arg=44, lineno=1652)
>         52	LOAD_CONST(arg=2, lineno=1654)
          54	LOAD_CONST(arg=5, lineno=1654)
          56	LOAD_ATTR(arg=3, lineno=1654)
          76	LOAD_FAST(arg=0, lineno=1654)
          78	GET_ITER(arg=None, lineno=1654)
          80	LOAD_FAST_AND_CLEAR(arg=3, lineno=1654)
          82	SWAP(arg=2, lineno=1654)
          84	BUILD_LIST(arg=0, lineno=1654)
          86	SWAP(arg=2, lineno=1654)
>         88	FOR_ITER(arg=13, lineno=1654)
          92	STORE_FAST(arg=3, lineno=1654)
          94	LOAD_GLOBAL(arg=5, lineno=1654)
         104	LOAD_FAST(arg=3, lineno=1654)
         106	CALL(arg=1, lineno=1654)
         114	LIST_APPEND(arg=2, lineno=1654)
         116	JUMP_BACKWARD(arg=15, lineno=1654)
>        118	END_FOR(arg=None, lineno=1654)
         120	SWAP(arg=2, lineno=1654)
         122	STORE_FAST(arg=3, lineno=1654)
         124	CALL(arg=1, lineno=1654)
         132	FORMAT_VALUE(arg=0, lineno=1654)
         134	LOAD_CONST(arg=6, lineno=1654)
         136	BUILD_STRING(arg=3, lineno=1654)
         138	STORE_FAST(arg=2, lineno=1654)
>        140	LOAD_GLOBAL(arg=1, lineno=1655)
         150	LOAD_FAST(arg=1, lineno=1655)
         152	CALL(arg=1, lineno=1655)
         160	LOAD_CONST(arg=1, lineno=1655)
         162	COMPARE_OP(arg=40, lineno=1655)
         166	POP_JUMP_IF_FALSE(arg=10, lineno=1655)
         168	LOAD_CONST(arg=2, lineno=1656)
         170	LOAD_FAST(arg=1, lineno=1656)
         172	LOAD_CONST(arg=3, lineno=1656)
         174	BINARY_SUBSCR(arg=None, lineno=1656)
         178	FORMAT_VALUE(arg=0, lineno=1656)
         180	LOAD_CONST(arg=4, lineno=1656)
         182	BUILD_STRING(arg=3, lineno=1656)
         184	STORE_FAST(arg=4, lineno=1656)
         186	JUMP_FORWARD(arg=44, lineno=1656)
>        188	LOAD_CONST(arg=2, lineno=1658)
         190	LOAD_CONST(arg=5, lineno=1658)
         192	LOAD_ATTR(arg=3, lineno=1658)
         212	LOAD_FAST(arg=1, lineno=1658)
         214	GET_ITER(arg=None, lineno=1658)
         216	LOAD_FAST_AND_CLEAR(arg=3, lineno=1658)
         218	SWAP(arg=2, lineno=1658)
         220	BUILD_LIST(arg=0, lineno=1658)
         222	SWAP(arg=2, lineno=1658)
>        224	FOR_ITER(arg=13, lineno=1658)
         228	STORE_FAST(arg=3, lineno=1658)
         230	LOAD_GLOBAL(arg=5, lineno=1658)
         240	LOAD_FAST(arg=3, lineno=1658)
         242	CALL(arg=1, lineno=1658)
         250	LIST_APPEND(arg=2, lineno=1658)
         252	JUMP_BACKWARD(arg=15, lineno=1658)
>        254	END_FOR(arg=None, lineno=1658)
         256	SWAP(arg=2, lineno=1658)
         258	STORE_FAST(arg=3, lineno=1658)
         260	CALL(arg=1, lineno=1658)
         268	FORMAT_VALUE(arg=0, lineno=1658)
         270	LOAD_CONST(arg=6, lineno=1658)
         272	BUILD_STRING(arg=3, lineno=1658)
         274	STORE_FAST(arg=4, lineno=1658)
>        276	LOAD_CONST(arg=7, lineno=1659)
         278	LOAD_FAST(arg=2, lineno=1659)
         280	FORMAT_VALUE(arg=0, lineno=1659)
         282	LOAD_CONST(arg=8, lineno=1659)
         284	LOAD_FAST(arg=4, lineno=1660)
         286	FORMAT_VALUE(arg=0, lineno=1660)
         288	BUILD_STRING(arg=4, lineno=1659)
         290	STORE_FAST(arg=5, lineno=1659)
         292	LOAD_GLOBAL(arg=7, lineno=1661)
         302	LOAD_FAST(arg=5, lineno=1661)
         304	CALL(arg=1, lineno=1661)
         312	RAISE_VARARGS(arg=1, lineno=1661)
         314	SWAP(arg=2, lineno=1661)
         316	POP_TOP(arg=None, lineno=1661)
         318	SWAP(arg=2, lineno=1654)
         320	STORE_FAST(arg=3, lineno=1654)
         322	RERAISE(arg=0, lineno=1654)
         324	SWAP(arg=2, lineno=1654)
         326	POP_TOP(arg=None, lineno=1654)
         328	SWAP(arg=2, lineno=1658)
         330	STORE_FAST(arg=3, lineno=1658)
         332	RERAISE(arg=0, lineno=1658)
2025-07-23 17:15:57,816 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:15:57,816 - DEBUG - stack: []
2025-07-23 17:15:57,817 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:15:57,817 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1650)
2025-07-23 17:15:57,817 - DEBUG - stack []
2025-07-23 17:15:57,817 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1650)
2025-07-23 17:15:57,818 - DEBUG - stack []
2025-07-23 17:15:57,818 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1651)
2025-07-23 17:15:57,818 - DEBUG - stack []
2025-07-23 17:15:57,818 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=1651)
2025-07-23 17:15:57,819 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=16, inst=CALL(arg=1, lineno=1651)
2025-07-23 17:15:57,819 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$src_shapes14.2']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1651)
2025-07-23 17:15:57,819 - DEBUG - stack ['$16call.3']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=40, lineno=1651)
2025-07-23 17:15:57,819 - DEBUG - stack ['$16call.3', '$const24.4.1']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=30, inst=POP_JUMP_IF_FALSE(arg=10, lineno=1651)
2025-07-23 17:15:57,819 - DEBUG - stack ['$26compare_op.5']
2025-07-23 17:15:57,819 - DEBUG - end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,819 - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=52 nstack_initial=0)])
2025-07-23 17:15:57,819 - DEBUG - stack: []
2025-07-23 17:15:57,819 - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=0)
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack []
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2', '$src_shapes34.1']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2', '$src_shapes34.1', '$const36.2.3']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=42, inst=FORMAT_VALUE(arg=0, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2', '$38binary_subscr.3']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=4, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2', '$42format_value.5']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=46, inst=BUILD_STRING(arg=3, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const32.0.2', '$42format_value.5', '$const44.6.4']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack ['$46build_string.8']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=50, inst=JUMP_FORWARD(arg=44, lineno=1652)
2025-07-23 17:15:57,819 - DEBUG - stack []
2025-07-23 17:15:57,819 - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,819 - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=140 nstack_initial=0)])
2025-07-23 17:15:57,819 - DEBUG - stack: []
2025-07-23 17:15:57,819 - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack []
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=5, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=56, inst=LOAD_ATTR(arg=3, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$const54.1.5']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$src_shapes76.4']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=80, inst=LOAD_FAST_AND_CLEAR(arg=3, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$78get_iter.5']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=82, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$78get_iter.5', '$x80.6']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=84, inst=BUILD_LIST(arg=0, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$78get_iter.5']
2025-07-23 17:15:57,819 - DEBUG - dispatch pc=86, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:57,819 - DEBUG - stack ['$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$78get_iter.5', '$84build_list.7']
2025-07-23 17:15:57,819 - DEBUG - end state. edges=[Edge(pc=88, stack=('$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$84build_list.7', '$78get_iter.5'), blockstack=(), npush=0)]
2025-07-23 17:15:57,829 - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:57,829 - DEBUG - stack: []
2025-07-23 17:15:57,829 - DEBUG - state.pc_initial: State(pc_initial=140 nstack_initial=0)
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack []
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack ['$null$140.1', '$140load_global.0']
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=152, inst=CALL(arg=1, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack ['$null$140.1', '$140load_global.0', '$index_shape150.2']
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=160, inst=LOAD_CONST(arg=1, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack ['$152call.3']
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=162, inst=COMPARE_OP(arg=40, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack ['$152call.3', '$const160.4.1']
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=166, inst=POP_JUMP_IF_FALSE(arg=10, lineno=1655)
2025-07-23 17:15:57,829 - DEBUG - stack ['$162compare_op.5']
2025-07-23 17:15:57,829 - DEBUG - end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0), Edge(pc=188, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,829 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=6), State(pc_initial=168 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
2025-07-23 17:15:57,829 - DEBUG - stack: ['$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5']
2025-07-23 17:15:57,829 - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=6)
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=88, inst=FOR_ITER(arg=13, lineno=1654)
2025-07-23 17:15:57,829 - DEBUG - stack ['$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5']
2025-07-23 17:15:57,829 - DEBUG - end state. edges=[Edge(pc=118, stack=('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), blockstack=(), npush=0), Edge(pc=92, stack=('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), blockstack=(), npush=0)]
2025-07-23 17:15:57,829 - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=188 nstack_initial=0), State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7)])
2025-07-23 17:15:57,829 - DEBUG - stack: []
2025-07-23 17:15:57,829 - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=0)
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=1656)
2025-07-23 17:15:57,829 - DEBUG - stack []
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=1, lineno=1656)
2025-07-23 17:15:57,829 - DEBUG - stack ['$const168.0.2']
2025-07-23 17:15:57,829 - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=3, lineno=1656)
2025-07-23 17:15:57,833 - DEBUG - stack ['$const168.0.2', '$index_shape170.1']
2025-07-23 17:15:57,833 - DEBUG - dispatch pc=174, inst=BINARY_SUBSCR(arg=None, lineno=1656)
2025-07-23 17:15:57,833 - DEBUG - stack ['$const168.0.2', '$index_shape170.1', '$const172.2.3']
2025-07-23 17:15:57,833 - DEBUG - dispatch pc=178, inst=FORMAT_VALUE(arg=0, lineno=1656)
2025-07-23 17:15:57,833 - DEBUG - stack ['$const168.0.2', '$174binary_subscr.3']
2025-07-23 17:15:57,833 - DEBUG - dispatch pc=180, inst=LOAD_CONST(arg=4, lineno=1656)
2025-07-23 17:15:57,833 - DEBUG - stack ['$const168.0.2', '$178format_value.5']
2025-07-23 17:15:57,833 - DEBUG - dispatch pc=182, inst=BUILD_STRING(arg=3, lineno=1656)
2025-07-23 17:15:57,833 - DEBUG - stack ['$const168.0.2', '$178format_value.5', '$const180.6.4']
2025-07-23 17:15:57,834 - DEBUG - dispatch pc=184, inst=STORE_FAST(arg=4, lineno=1656)
2025-07-23 17:15:57,834 - DEBUG - stack ['$182build_string.8']
2025-07-23 17:15:57,834 - DEBUG - dispatch pc=186, inst=JUMP_FORWARD(arg=44, lineno=1656)
2025-07-23 17:15:57,835 - DEBUG - stack []
2025-07-23 17:15:57,835 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,835 - DEBUG - pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0)])
2025-07-23 17:15:57,836 - DEBUG - stack: []
2025-07-23 17:15:57,836 - DEBUG - state.pc_initial: State(pc_initial=188 nstack_initial=0)
2025-07-23 17:15:57,836 - DEBUG - dispatch pc=188, inst=LOAD_CONST(arg=2, lineno=1658)
2025-07-23 17:15:57,836 - DEBUG - stack []
2025-07-23 17:15:57,836 - DEBUG - dispatch pc=190, inst=LOAD_CONST(arg=5, lineno=1658)
2025-07-23 17:15:57,836 - DEBUG - stack ['$const188.0.2']
2025-07-23 17:15:57,836 - DEBUG - dispatch pc=192, inst=LOAD_ATTR(arg=3, lineno=1658)
2025-07-23 17:15:57,837 - DEBUG - stack ['$const188.0.2', '$const190.1.5']
2025-07-23 17:15:57,837 - DEBUG - dispatch pc=212, inst=LOAD_FAST(arg=1, lineno=1658)
2025-07-23 17:15:57,837 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2']
2025-07-23 17:15:57,837 - DEBUG - dispatch pc=214, inst=GET_ITER(arg=None, lineno=1658)
2025-07-23 17:15:57,837 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$index_shape212.4']
2025-07-23 17:15:57,837 - DEBUG - dispatch pc=216, inst=LOAD_FAST_AND_CLEAR(arg=3, lineno=1658)
2025-07-23 17:15:57,837 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$214get_iter.5']
2025-07-23 17:15:57,837 - DEBUG - dispatch pc=218, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:57,837 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$214get_iter.5', '$x216.6']
2025-07-23 17:15:57,837 - DEBUG - dispatch pc=220, inst=BUILD_LIST(arg=0, lineno=1658)
2025-07-23 17:15:57,839 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$214get_iter.5']
2025-07-23 17:15:57,839 - DEBUG - dispatch pc=222, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:57,839 - DEBUG - stack ['$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$214get_iter.5', '$220build_list.7']
2025-07-23 17:15:57,839 - DEBUG - end state. edges=[Edge(pc=224, stack=('$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$220build_list.7', '$214get_iter.5'), blockstack=(), npush=0)]
2025-07-23 17:15:57,839 - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=7), State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:57,839 - DEBUG - stack: ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4', '$phi118.5', '$phi118.6']
2025-07-23 17:15:57,840 - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=7)
2025-07-23 17:15:57,840 - DEBUG - dispatch pc=118, inst=END_FOR(arg=None, lineno=1654)
2025-07-23 17:15:57,840 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4', '$phi118.5', '$phi118.6']
2025-07-23 17:15:57,840 - DEBUG - dispatch pc=120, inst=SWAP(arg=2, lineno=1654)
2025-07-23 17:15:57,840 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.3', '$phi118.4']
2025-07-23 17:15:57,841 - DEBUG - dispatch pc=122, inst=STORE_FAST(arg=3, lineno=1654)
2025-07-23 17:15:57,841 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.4', '$phi118.3']
2025-07-23 17:15:57,841 - DEBUG - dispatch pc=124, inst=CALL(arg=1, lineno=1654)
2025-07-23 17:15:57,842 - DEBUG - stack ['$phi118.0', '$null$118.1', '$phi118.2', '$phi118.4']
2025-07-23 17:15:57,842 - DEBUG - dispatch pc=132, inst=FORMAT_VALUE(arg=0, lineno=1654)
2025-07-23 17:15:57,842 - DEBUG - stack ['$phi118.0', '$124call.7']
2025-07-23 17:15:57,842 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=6, lineno=1654)
2025-07-23 17:15:57,843 - DEBUG - stack ['$phi118.0', '$132format_value.9']
2025-07-23 17:15:57,843 - DEBUG - dispatch pc=136, inst=BUILD_STRING(arg=3, lineno=1654)
2025-07-23 17:15:57,843 - DEBUG - stack ['$phi118.0', '$132format_value.9', '$const134.10.6']
2025-07-23 17:15:57,843 - DEBUG - dispatch pc=138, inst=STORE_FAST(arg=2, lineno=1654)
2025-07-23 17:15:57,843 - DEBUG - stack ['$136build_string.12']
2025-07-23 17:15:57,843 - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,844 - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=7), State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0)])
2025-07-23 17:15:57,844 - DEBUG - stack: ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$phi92.6']
2025-07-23 17:15:57,844 - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=7)
2025-07-23 17:15:57,844 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=3, lineno=1654)
2025-07-23 17:15:57,844 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$phi92.6']
2025-07-23 17:15:57,845 - DEBUG - dispatch pc=94, inst=LOAD_GLOBAL(arg=5, lineno=1654)
2025-07-23 17:15:57,845 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5']
2025-07-23 17:15:57,845 - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=3, lineno=1654)
2025-07-23 17:15:57,845 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$null$94.8', '$94load_global.7']
2025-07-23 17:15:57,845 - DEBUG - dispatch pc=106, inst=CALL(arg=1, lineno=1654)
2025-07-23 17:15:57,845 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$null$94.8', '$94load_global.7', '$x104.9']
2025-07-23 17:15:57,846 - DEBUG - dispatch pc=114, inst=LIST_APPEND(arg=2, lineno=1654)
2025-07-23 17:15:57,846 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5', '$106call.10']
2025-07-23 17:15:57,846 - DEBUG - dispatch pc=116, inst=JUMP_BACKWARD(arg=15, lineno=1654)
2025-07-23 17:15:57,846 - DEBUG - stack ['$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5']
2025-07-23 17:15:57,846 - DEBUG - end state. edges=[Edge(pc=88, stack=('$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5'), blockstack=(), npush=0)]
2025-07-23 17:15:57,846 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:57,847 - DEBUG - stack: []
2025-07-23 17:15:57,847 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2025-07-23 17:15:57,847 - DEBUG - dispatch pc=276, inst=LOAD_CONST(arg=7, lineno=1659)
2025-07-23 17:15:57,847 - DEBUG - stack []
2025-07-23 17:15:57,847 - DEBUG - dispatch pc=278, inst=LOAD_FAST(arg=2, lineno=1659)
2025-07-23 17:15:57,847 - DEBUG - stack ['$const276.0.7']
2025-07-23 17:15:57,847 - DEBUG - dispatch pc=280, inst=FORMAT_VALUE(arg=0, lineno=1659)
2025-07-23 17:15:57,847 - DEBUG - stack ['$const276.0.7', '$shape_str278.1']
2025-07-23 17:15:57,847 - DEBUG - dispatch pc=282, inst=LOAD_CONST(arg=8, lineno=1659)
2025-07-23 17:15:57,848 - DEBUG - stack ['$const276.0.7', '$280format_value.3']
2025-07-23 17:15:57,848 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=4, lineno=1660)
2025-07-23 17:15:57,848 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8']
2025-07-23 17:15:57,848 - DEBUG - dispatch pc=286, inst=FORMAT_VALUE(arg=0, lineno=1660)
2025-07-23 17:15:57,848 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$index_str284.5']
2025-07-23 17:15:57,848 - DEBUG - dispatch pc=288, inst=BUILD_STRING(arg=4, lineno=1659)
2025-07-23 17:15:57,848 - DEBUG - stack ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$286format_value.7']
2025-07-23 17:15:57,848 - DEBUG - dispatch pc=290, inst=STORE_FAST(arg=5, lineno=1659)
2025-07-23 17:15:57,848 - DEBUG - stack ['$288build_string.10']
2025-07-23 17:15:57,849 - DEBUG - dispatch pc=292, inst=LOAD_GLOBAL(arg=7, lineno=1661)
2025-07-23 17:15:57,849 - DEBUG - stack []
2025-07-23 17:15:57,849 - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=1661)
2025-07-23 17:15:57,849 - DEBUG - stack ['$null$292.12', '$292load_global.11']
2025-07-23 17:15:57,849 - DEBUG - dispatch pc=304, inst=CALL(arg=1, lineno=1661)
2025-07-23 17:15:57,849 - DEBUG - stack ['$null$292.12', '$292load_global.11', '$msg302.13']
2025-07-23 17:15:57,849 - DEBUG - dispatch pc=312, inst=RAISE_VARARGS(arg=1, lineno=1661)
2025-07-23 17:15:57,849 - DEBUG - stack ['$304call.14']
2025-07-23 17:15:57,849 - DEBUG - end state. edges=[]
2025-07-23 17:15:57,849 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=6), State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6)])
2025-07-23 17:15:57,849 - DEBUG - stack: ['$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5']
2025-07-23 17:15:57,849 - DEBUG - state.pc_initial: State(pc_initial=224 nstack_initial=6)
2025-07-23 17:15:57,850 - DEBUG - dispatch pc=224, inst=FOR_ITER(arg=13, lineno=1658)
2025-07-23 17:15:57,850 - DEBUG - stack ['$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5']
2025-07-23 17:15:57,850 - DEBUG - end state. edges=[Edge(pc=254, stack=('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), blockstack=(), npush=0), Edge(pc=228, stack=('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), blockstack=(), npush=0)]
2025-07-23 17:15:57,850 - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=88 nstack_initial=6), State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:57,850 - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=6), State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:57,850 - DEBUG - pending: deque([State(pc_initial=254 nstack_initial=7), State(pc_initial=228 nstack_initial=7)])
2025-07-23 17:15:57,851 - DEBUG - stack: ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4', '$phi254.5', '$phi254.6']
2025-07-23 17:15:57,851 - DEBUG - state.pc_initial: State(pc_initial=254 nstack_initial=7)
2025-07-23 17:15:57,851 - DEBUG - dispatch pc=254, inst=END_FOR(arg=None, lineno=1658)
2025-07-23 17:15:57,851 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4', '$phi254.5', '$phi254.6']
2025-07-23 17:15:57,851 - DEBUG - dispatch pc=256, inst=SWAP(arg=2, lineno=1658)
2025-07-23 17:15:57,851 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.3', '$phi254.4']
2025-07-23 17:15:57,851 - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=3, lineno=1658)
2025-07-23 17:15:57,852 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.4', '$phi254.3']
2025-07-23 17:15:57,852 - DEBUG - dispatch pc=260, inst=CALL(arg=1, lineno=1658)
2025-07-23 17:15:57,852 - DEBUG - stack ['$phi254.0', '$null$254.1', '$phi254.2', '$phi254.4']
2025-07-23 17:15:57,852 - DEBUG - dispatch pc=268, inst=FORMAT_VALUE(arg=0, lineno=1658)
2025-07-23 17:15:57,852 - DEBUG - stack ['$phi254.0', '$260call.7']
2025-07-23 17:15:57,853 - DEBUG - dispatch pc=270, inst=LOAD_CONST(arg=6, lineno=1658)
2025-07-23 17:15:57,853 - DEBUG - stack ['$phi254.0', '$268format_value.9']
2025-07-23 17:15:57,854 - DEBUG - dispatch pc=272, inst=BUILD_STRING(arg=3, lineno=1658)
2025-07-23 17:15:57,854 - DEBUG - stack ['$phi254.0', '$268format_value.9', '$const270.10.6']
2025-07-23 17:15:57,854 - DEBUG - dispatch pc=274, inst=STORE_FAST(arg=4, lineno=1658)
2025-07-23 17:15:57,854 - DEBUG - stack ['$272build_string.12']
2025-07-23 17:15:57,854 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0)]
2025-07-23 17:15:57,854 - DEBUG - pending: deque([State(pc_initial=228 nstack_initial=7), State(pc_initial=276 nstack_initial=0)])
2025-07-23 17:15:57,855 - DEBUG - stack: ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$phi228.6']
2025-07-23 17:15:57,855 - DEBUG - state.pc_initial: State(pc_initial=228 nstack_initial=7)
2025-07-23 17:15:57,855 - DEBUG - dispatch pc=228, inst=STORE_FAST(arg=3, lineno=1658)
2025-07-23 17:15:57,855 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$phi228.6']
2025-07-23 17:15:57,855 - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=5, lineno=1658)
2025-07-23 17:15:57,855 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5']
2025-07-23 17:15:57,855 - DEBUG - dispatch pc=240, inst=LOAD_FAST(arg=3, lineno=1658)
2025-07-23 17:15:57,856 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$null$230.8', '$230load_global.7']
2025-07-23 17:15:57,856 - DEBUG - dispatch pc=242, inst=CALL(arg=1, lineno=1658)
2025-07-23 17:15:57,856 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$null$230.8', '$230load_global.7', '$x240.9']
2025-07-23 17:15:57,856 - DEBUG - dispatch pc=250, inst=LIST_APPEND(arg=2, lineno=1658)
2025-07-23 17:15:57,856 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5', '$242call.10']
2025-07-23 17:15:57,856 - DEBUG - dispatch pc=252, inst=JUMP_BACKWARD(arg=15, lineno=1658)
2025-07-23 17:15:57,857 - DEBUG - stack ['$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5']
2025-07-23 17:15:57,857 - DEBUG - end state. edges=[Edge(pc=224, stack=('$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5'), blockstack=(), npush=0)]
2025-07-23 17:15:57,857 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:57,857 - DEBUG - pending: deque([State(pc_initial=224 nstack_initial=6)])
2025-07-23 17:15:57,857 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:15:57,857 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=6): {'$phi88.5'},
             State(pc_initial=92 nstack_initial=7): {'$phi92.6', '$phi92.4'},
             State(pc_initial=118 nstack_initial=7): {'$phi118.0',
                                                      '$phi118.2',
                                                      '$phi118.3',
                                                      '$phi118.4'},
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=6): {'$phi224.5'},
             State(pc_initial=228 nstack_initial=7): {'$phi228.6', '$phi228.4'},
             State(pc_initial=254 nstack_initial=7): {'$phi254.0',
                                                      '$phi254.2',
                                                      '$phi254.3',
                                                      '$phi254.4'},
             State(pc_initial=276 nstack_initial=0): set()})
2025-07-23 17:15:57,859 - DEBUG - defmap: {'$null$224.1': State(pc_initial=188 nstack_initial=0),
 '$null$88.1': State(pc_initial=52 nstack_initial=0),
 '$phi118.6': State(pc_initial=88 nstack_initial=6),
 '$phi224.0': State(pc_initial=188 nstack_initial=0),
 '$phi224.2': State(pc_initial=188 nstack_initial=0),
 '$phi224.3': State(pc_initial=188 nstack_initial=0),
 '$phi224.4': State(pc_initial=188 nstack_initial=0),
 '$phi224.5': State(pc_initial=188 nstack_initial=0),
 '$phi228.6': State(pc_initial=224 nstack_initial=6),
 '$phi254.6': State(pc_initial=224 nstack_initial=6),
 '$phi88.0': State(pc_initial=52 nstack_initial=0),
 '$phi88.2': State(pc_initial=52 nstack_initial=0),
 '$phi88.3': State(pc_initial=52 nstack_initial=0),
 '$phi88.4': State(pc_initial=52 nstack_initial=0),
 '$phi88.5': State(pc_initial=52 nstack_initial=0),
 '$phi92.6': State(pc_initial=88 nstack_initial=6)}
2025-07-23 17:15:57,859 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$88.1',
                              State(pc_initial=88 nstack_initial=6))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0)),
                             ('$null$228.1',
                              State(pc_initial=228 nstack_initial=7))},
             '$null$228.1': {('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$254.1': {('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0)),
                            ('$null$92.1',
                             State(pc_initial=92 nstack_initial=7))},
             '$null$92.1': {('$null$88.1',
                             State(pc_initial=88 nstack_initial=6))},
             '$phi118.0': {('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi118.2': {('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi118.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6))},
             '$phi118.4': {('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi118.5': {('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.2',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.3': {('$phi228.3',
                            State(pc_initial=228 nstack_initial=7)),
                           ('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.4',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi228.5',
                            State(pc_initial=228 nstack_initial=7))},
             '$phi228.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.2': {('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.4': {('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.5': {('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.2': {('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.4': {('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.5': {('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.0', State(pc_initial=92 nstack_initial=7))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.2', State(pc_initial=92 nstack_initial=7))},
             '$phi88.3': {('$phi92.3', State(pc_initial=92 nstack_initial=7)),
                          ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.4', State(pc_initial=92 nstack_initial=7))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi92.5', State(pc_initial=92 nstack_initial=7))},
             '$phi92.0': {('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi92.2': {('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi92.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6))},
             '$phi92.4': {('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi92.5': {('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:57,861 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0)),
                             ('$null$92.1',
                              State(pc_initial=92 nstack_initial=7))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0)),
                             ('$null$224.1',
                              State(pc_initial=224 nstack_initial=6))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0)),
                            ('$null$88.1',
                             State(pc_initial=88 nstack_initial=6))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.0', State(pc_initial=92 nstack_initial=7))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.2', State(pc_initial=92 nstack_initial=7))},
             '$phi118.3': {('$phi92.3', State(pc_initial=92 nstack_initial=7)),
                           ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.4', State(pc_initial=92 nstack_initial=7))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0)),
                           ('$phi92.5', State(pc_initial=92 nstack_initial=7))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.0',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.2',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.3': {('$phi224.3',
                            State(pc_initial=224 nstack_initial=6)),
                           ('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.4',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0)),
                           ('$phi224.5',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=6))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.2', State(pc_initial=88 nstack_initial=6))},
             '$phi88.3': {('$phi88.3', State(pc_initial=88 nstack_initial=6)),
                          ('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.4', State(pc_initial=88 nstack_initial=6))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0)),
                          ('$phi88.5', State(pc_initial=88 nstack_initial=6))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:57,864 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:57,866 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$null$118.1': {('$null$56.3',
                              State(pc_initial=52 nstack_initial=0))},
             '$null$224.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$228.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$254.1': {('$null$192.3',
                              State(pc_initial=188 nstack_initial=0))},
             '$null$88.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$null$92.1': {('$null$56.3',
                             State(pc_initial=52 nstack_initial=0))},
             '$phi118.0': {('$const52.0.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.2': {('$56load_attr.2',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi118.4': {('$84build_list.7',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.5': {('$78get_iter.5',
                            State(pc_initial=52 nstack_initial=0))},
             '$phi118.6': {('$88for_iter.7',
                            State(pc_initial=88 nstack_initial=6))},
             '$phi224.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi224.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi224.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi228.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi228.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi254.0': {('$const188.0.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.2': {('$192load_attr.2',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
             '$phi254.4': {('$220build_list.7',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.5': {('$214get_iter.5',
                            State(pc_initial=188 nstack_initial=0))},
             '$phi254.6': {('$224for_iter.7',
                            State(pc_initial=224 nstack_initial=6))},
             '$phi88.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi88.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi88.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.0': {('$const52.0.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.2': {('$56load_attr.2',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
             '$phi92.4': {('$84build_list.7',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.5': {('$78get_iter.5',
                           State(pc_initial=52 nstack_initial=0))},
             '$phi92.6': {('$88for_iter.7',
                           State(pc_initial=88 nstack_initial=6))}})
2025-07-23 17:15:57,869 - DEBUG - keep phismap: {'$phi118.0': {('$const52.0.2', State(pc_initial=52 nstack_initial=0))},
 '$phi118.2': {('$56load_attr.2', State(pc_initial=52 nstack_initial=0))},
 '$phi118.3': {('$x80.6', State(pc_initial=52 nstack_initial=0))},
 '$phi118.4': {('$84build_list.7', State(pc_initial=52 nstack_initial=0))},
 '$phi224.5': {('$214get_iter.5', State(pc_initial=188 nstack_initial=0))},
 '$phi228.4': {('$220build_list.7', State(pc_initial=188 nstack_initial=0))},
 '$phi228.6': {('$224for_iter.7', State(pc_initial=224 nstack_initial=6))},
 '$phi254.0': {('$const188.0.2', State(pc_initial=188 nstack_initial=0))},
 '$phi254.2': {('$192load_attr.2', State(pc_initial=188 nstack_initial=0))},
 '$phi254.3': {('$x216.6', State(pc_initial=188 nstack_initial=0))},
 '$phi254.4': {('$220build_list.7', State(pc_initial=188 nstack_initial=0))},
 '$phi88.5': {('$78get_iter.5', State(pc_initial=52 nstack_initial=0))},
 '$phi92.4': {('$84build_list.7', State(pc_initial=52 nstack_initial=0))},
 '$phi92.6': {('$88for_iter.7', State(pc_initial=88 nstack_initial=6))}}
2025-07-23 17:15:57,869 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=52 nstack_initial=0): {'$phi118.0': '$const52.0.2',
                                                     '$phi118.2': '$56load_attr.2',
                                                     '$phi118.3': '$x80.6',
                                                     '$phi118.4': '$84build_list.7',
                                                     '$phi88.5': '$78get_iter.5',
                                                     '$phi92.4': '$84build_list.7'},
             State(pc_initial=88 nstack_initial=6): {'$phi92.6': '$88for_iter.7'},
             State(pc_initial=188 nstack_initial=0): {'$phi224.5': '$214get_iter.5',
                                                      '$phi228.4': '$220build_list.7',
                                                      '$phi254.0': '$const188.0.2',
                                                      '$phi254.2': '$192load_attr.2',
                                                      '$phi254.3': '$x216.6',
                                                      '$phi254.4': '$220build_list.7'},
             State(pc_initial=224 nstack_initial=6): {'$phi228.6': '$224for_iter.7'}})
2025-07-23 17:15:57,869 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$src_shapes14.2'}), (16, {'func': '$4load_global.0', 'args': ['$src_shapes14.2'], 'kw_names': None, 'res': '$16call.3'}), (24, {'res': '$const24.4.1'}), (26, {'lhs': '$16call.3', 'rhs': '$const24.4.1', 'res': '$26compare_op.5'}), (30, {'pred': '$26compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 52: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$const32.0.2'}), (34, {'res': '$src_shapes34.1'}), (36, {'res': '$const36.2.3'}), (38, {'index': '$const36.2.3', 'target': '$src_shapes34.1', 'res': '$38binary_subscr.3'}), (42, {'value': '$38binary_subscr.3', 'res': '$42format_value.5', 'strvar': '$42format_value.4'}), (44, {'res': '$const44.6.4'}), (46, {'strings': ['$const32.0.2', '$42format_value.5', '$const44.6.4'], 'tmps': ['$46build_string.7', '$46build_string.8']}), (48, {'value': '$46build_string.8'}), (50, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$const52.0.2'}), (54, {'res': '$const54.1.5'}), (56, {'item': '$const54.1.5', 'res': '$56load_attr.2'}), (76, {'res': '$src_shapes76.4'}), (78, {'value': '$src_shapes76.4', 'res': '$78get_iter.5'}), (80, {'res': '$x80.6'}), (84, {'items': [], 'res': '$84build_list.7'})), outgoing_phis={'$phi92.4': '$84build_list.7', '$phi88.5': '$78get_iter.5', '$phi118.4': '$84build_list.7', '$phi118.0': '$const52.0.2', '$phi118.2': '$56load_attr.2', '$phi118.3': '$x80.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$const52.0.2', '$null$56.3', '$56load_attr.2', '$x80.6', '$84build_list.7', '$78get_iter.5')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=88 nstack_initial=6):
AdaptBlockInfo(insts=((88, {'iterator': '$phi88.5', 'pair': '$88for_iter.6', 'indval': '$88for_iter.7', 'pred': '$88for_iter.8'}),), outgoing_phis={'$phi92.6': '$88for_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7'), 92: ('$phi88.0', '$null$88.1', '$phi88.2', '$phi88.3', '$phi88.4', '$phi88.5', '$88for_iter.7')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=92 nstack_initial=7):
AdaptBlockInfo(insts=((92, {'value': '$phi92.6'}), (94, {'idx': 2, 'res': '$94load_global.7'}), (104, {'res': '$x104.9'}), (106, {'func': '$94load_global.7', 'args': ['$x104.9'], 'kw_names': None, 'res': '$106call.10'}), (114, {'target': '$phi92.4', 'value': '$106call.10', 'appendvar': '$114list_append.11', 'res': '$114list_append.12'}), (116, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: ('$phi92.0', '$null$92.1', '$phi92.2', '$phi92.3', '$phi92.4', '$phi92.5')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=118 nstack_initial=7):
AdaptBlockInfo(insts=((122, {'value': '$phi118.3'}), (124, {'func': '$phi118.2', 'args': ['$phi118.4'], 'kw_names': None, 'res': '$124call.7'}), (132, {'value': '$124call.7', 'res': '$132format_value.9', 'strvar': '$132format_value.8'}), (134, {'res': '$const134.10.6'}), (136, {'strings': ['$phi118.0', '$132format_value.9', '$const134.10.6'], 'tmps': ['$136build_string.11', '$136build_string.12']}), (138, {'value': '$136build_string.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'idx': 0, 'res': '$140load_global.0'}), (150, {'res': '$index_shape150.2'}), (152, {'func': '$140load_global.0', 'args': ['$index_shape150.2'], 'kw_names': None, 'res': '$152call.3'}), (160, {'res': '$const160.4.1'}), (162, {'lhs': '$152call.3', 'rhs': '$const160.4.1', 'res': '$162compare_op.5'}), (166, {'pred': '$162compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: (), 188: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$const168.0.2'}), (170, {'res': '$index_shape170.1'}), (172, {'res': '$const172.2.3'}), (174, {'index': '$const172.2.3', 'target': '$index_shape170.1', 'res': '$174binary_subscr.3'}), (178, {'value': '$174binary_subscr.3', 'res': '$178format_value.5', 'strvar': '$178format_value.4'}), (180, {'res': '$const180.6.4'}), (182, {'strings': ['$const168.0.2', '$178format_value.5', '$const180.6.4'], 'tmps': ['$182build_string.7', '$182build_string.8']}), (184, {'value': '$182build_string.8'}), (186, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$const188.0.2'}), (190, {'res': '$const190.1.5'}), (192, {'item': '$const190.1.5', 'res': '$192load_attr.2'}), (212, {'res': '$index_shape212.4'}), (214, {'value': '$index_shape212.4', 'res': '$214get_iter.5'}), (216, {'res': '$x216.6'}), (220, {'items': [], 'res': '$220build_list.7'})), outgoing_phis={'$phi254.0': '$const188.0.2', '$phi254.2': '$192load_attr.2', '$phi254.4': '$220build_list.7', '$phi254.3': '$x216.6', '$phi228.4': '$220build_list.7', '$phi224.5': '$214get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$const188.0.2', '$null$192.3', '$192load_attr.2', '$x216.6', '$220build_list.7', '$214get_iter.5')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=224 nstack_initial=6):
AdaptBlockInfo(insts=((224, {'iterator': '$phi224.5', 'pair': '$224for_iter.6', 'indval': '$224for_iter.7', 'pred': '$224for_iter.8'}),), outgoing_phis={'$phi228.6': '$224for_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7'), 228: ('$phi224.0', '$null$224.1', '$phi224.2', '$phi224.3', '$phi224.4', '$phi224.5', '$224for_iter.7')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=228 nstack_initial=7):
AdaptBlockInfo(insts=((228, {'value': '$phi228.6'}), (230, {'idx': 2, 'res': '$230load_global.7'}), (240, {'res': '$x240.9'}), (242, {'func': '$230load_global.7', 'args': ['$x240.9'], 'kw_names': None, 'res': '$242call.10'}), (250, {'target': '$phi228.4', 'value': '$242call.10', 'appendvar': '$250list_append.11', 'res': '$250list_append.12'}), (252, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: ('$phi228.0', '$null$228.1', '$phi228.2', '$phi228.3', '$phi228.4', '$phi228.5')})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=254 nstack_initial=7):
AdaptBlockInfo(insts=((258, {'value': '$phi254.3'}), (260, {'func': '$phi254.2', 'args': ['$phi254.4'], 'kw_names': None, 'res': '$260call.7'}), (268, {'value': '$260call.7', 'res': '$268format_value.9', 'strvar': '$268format_value.8'}), (270, {'res': '$const270.10.6'}), (272, {'strings': ['$phi254.0', '$268format_value.9', '$const270.10.6'], 'tmps': ['$272build_string.11', '$272build_string.12']}), (274, {'value': '$272build_string.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ()})
2025-07-23 17:15:57,869 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$const276.0.7'}), (278, {'res': '$shape_str278.1'}), (280, {'value': '$shape_str278.1', 'res': '$280format_value.3', 'strvar': '$280format_value.2'}), (282, {'res': '$const282.4.8'}), (284, {'res': '$index_str284.5'}), (286, {'value': '$index_str284.5', 'res': '$286format_value.7', 'strvar': '$286format_value.6'}), (288, {'strings': ['$const276.0.7', '$280format_value.3', '$const282.4.8', '$286format_value.7'], 'tmps': ['$288build_string.8', '$288build_string.9', '$288build_string.10']}), (290, {'value': '$288build_string.10'}), (292, {'idx': 3, 'res': '$292load_global.11'}), (302, {'res': '$msg302.13'}), (304, {'func': '$292load_global.11', 'args': ['$msg302.13'], 'kw_names': None, 'res': '$304call.14'}), (312, {'exc': '$304call.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:15:57,879 - DEBUG - label 0:
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    index_shape = arg(1, name=index_shape)   ['index_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    $16call.3 = call $4load_global.0(src_shapes, func=$4load_global.0, args=[Var(src_shapes, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$16call.3', '$4load_global.0', 'src_shapes']
    $const24.4.1 = const(int, 1)             ['$const24.4.1']
    $26compare_op.5 = $16call.3 == $const24.4.1 ['$16call.3', '$26compare_op.5', '$const24.4.1']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.5', '$30pred', 'bool30']
    branch $30pred, 32, 52                   ['$30pred']
label 32:
    $const32.0.2 = const(str, ()             ['$const32.0.2']
    $const36.2.3 = const(int, 0)             ['$const36.2.3']
    $38binary_subscr.3 = getitem(value=src_shapes, index=$const36.2.3, fn=<built-in function getitem>) ['$38binary_subscr.3', '$const36.2.3', 'src_shapes']
    $42format_value.4 = global(str: <class 'str'>) ['$42format_value.4']
    $42format_value.5 = call $42format_value.4($38binary_subscr.3, func=$42format_value.4, args=(Var($38binary_subscr.3, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$38binary_subscr.3', '$42format_value.4', '$42format_value.5']
    $const44.6.4 = const(str, ,))            ['$const44.6.4']
    $46build_string.7 = $const32.0.2 + $42format_value.5 ['$42format_value.5', '$46build_string.7', '$const32.0.2']
    shape_str = $46build_string.7 + $const44.6.4 ['$46build_string.7', '$const44.6.4', 'shape_str']
    jump 140                                 []
label 52:
    $const52.0.2 = const(str, ()             ['$const52.0.2']
    $const54.1.5 = const(str, , )            ['$const54.1.5']
    $56load_attr.2 = getattr(value=$const54.1.5, attr=join) ['$56load_attr.2', '$const54.1.5']
    $78get_iter.5 = getiter(value=src_shapes) ['$78get_iter.5', 'src_shapes']
    $x80.6 = undef()                         ['$x80.6']
    $84build_list.7 = build_list(items=[])   ['$84build_list.7']
    $phi92.4 = $84build_list.7               ['$84build_list.7', '$phi92.4']
    $phi88.5 = $78get_iter.5                 ['$78get_iter.5', '$phi88.5']
    $phi118.4 = $84build_list.7              ['$84build_list.7', '$phi118.4']
    $phi118.0 = $const52.0.2                 ['$const52.0.2', '$phi118.0']
    $phi118.2 = $56load_attr.2               ['$56load_attr.2', '$phi118.2']
    $phi118.3 = $x80.6                       ['$phi118.3', '$x80.6']
    jump 88                                  []
label 88:
    $88for_iter.6 = iternext(value=$phi88.5) ['$88for_iter.6', '$phi88.5']
    $88for_iter.7 = pair_first(value=$88for_iter.6) ['$88for_iter.6', '$88for_iter.7']
    $88for_iter.8 = pair_second(value=$88for_iter.6) ['$88for_iter.6', '$88for_iter.8']
    $phi92.6 = $88for_iter.7                 ['$88for_iter.7', '$phi92.6']
    branch $88for_iter.8, 92, 118            ['$88for_iter.8']
label 92:
    x = $phi92.6                             ['$phi92.6', 'x']
    $94load_global.7 = global(str: <class 'str'>) ['$94load_global.7']
    $106call.10 = call $94load_global.7(x, func=$94load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$106call.10', '$94load_global.7', 'x']
    $114list_append.11 = getattr(value=$phi92.4, attr=append) ['$114list_append.11', '$phi92.4']
    $114list_append.12 = call $114list_append.11($106call.10, func=$114list_append.11, args=(Var($106call.10, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$106call.10', '$114list_append.11', '$114list_append.12']
    jump 88                                  []
label 118:
    x = $phi118.3                            ['$phi118.3', 'x']
    $124call.7 = call $phi118.2($phi118.4, func=$phi118.2, args=[Var($phi118.4, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$124call.7', '$phi118.2', '$phi118.4']
    $132format_value.8 = global(str: <class 'str'>) ['$132format_value.8']
    $132format_value.9 = call $132format_value.8($124call.7, func=$132format_value.8, args=(Var($124call.7, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$124call.7', '$132format_value.8', '$132format_value.9']
    $const134.10.6 = const(str, ))           ['$const134.10.6']
    $136build_string.11 = $phi118.0 + $132format_value.9 ['$132format_value.9', '$136build_string.11', '$phi118.0']
    shape_str = $136build_string.11 + $const134.10.6 ['$136build_string.11', '$const134.10.6', 'shape_str']
    jump 140                                 []
label 140:
    $140load_global.0 = global(len: <built-in function len>) ['$140load_global.0']
    $152call.3 = call $140load_global.0(index_shape, func=$140load_global.0, args=[Var(index_shape, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$152call.3', 'index_shape']
    $const160.4.1 = const(int, 1)            ['$const160.4.1']
    $162compare_op.5 = $152call.3 == $const160.4.1 ['$152call.3', '$162compare_op.5', '$const160.4.1']
    bool166 = global(bool: <class 'bool'>)   ['bool166']
    $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None) ['$162compare_op.5', '$166pred', 'bool166']
    branch $166pred, 168, 188                ['$166pred']
label 168:
    $const168.0.2 = const(str, ()            ['$const168.0.2']
    $const172.2.3 = const(int, 0)            ['$const172.2.3']
    $174binary_subscr.3 = getitem(value=index_shape, index=$const172.2.3, fn=<built-in function getitem>) ['$174binary_subscr.3', '$const172.2.3', 'index_shape']
    $178format_value.4 = global(str: <class 'str'>) ['$178format_value.4']
    $178format_value.5 = call $178format_value.4($174binary_subscr.3, func=$178format_value.4, args=(Var($174binary_subscr.3, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$174binary_subscr.3', '$178format_value.4', '$178format_value.5']
    $const180.6.4 = const(str, ,))           ['$const180.6.4']
    $182build_string.7 = $const168.0.2 + $178format_value.5 ['$178format_value.5', '$182build_string.7', '$const168.0.2']
    index_str = $182build_string.7 + $const180.6.4 ['$182build_string.7', '$const180.6.4', 'index_str']
    jump 276                                 []
label 188:
    $const188.0.2 = const(str, ()            ['$const188.0.2']
    $const190.1.5 = const(str, , )           ['$const190.1.5']
    $192load_attr.2 = getattr(value=$const190.1.5, attr=join) ['$192load_attr.2', '$const190.1.5']
    $214get_iter.5 = getiter(value=index_shape) ['$214get_iter.5', 'index_shape']
    $220build_list.7 = build_list(items=[])  ['$220build_list.7']
    $phi254.0 = $const188.0.2                ['$const188.0.2', '$phi254.0']
    $phi254.2 = $192load_attr.2              ['$192load_attr.2', '$phi254.2']
    $phi254.4 = $220build_list.7             ['$220build_list.7', '$phi254.4']
    $phi254.3 = x                            ['$phi254.3', 'x']
    $phi228.4 = $220build_list.7             ['$220build_list.7', '$phi228.4']
    $phi224.5 = $214get_iter.5               ['$214get_iter.5', '$phi224.5']
    jump 224                                 []
label 224:
    $224for_iter.6 = iternext(value=$phi224.5) ['$224for_iter.6', '$phi224.5']
    $224for_iter.7 = pair_first(value=$224for_iter.6) ['$224for_iter.6', '$224for_iter.7']
    $224for_iter.8 = pair_second(value=$224for_iter.6) ['$224for_iter.6', '$224for_iter.8']
    $phi228.6 = $224for_iter.7               ['$224for_iter.7', '$phi228.6']
    branch $224for_iter.8, 228, 254          ['$224for_iter.8']
label 228:
    x = $phi228.6                            ['$phi228.6', 'x']
    $230load_global.7 = global(str: <class 'str'>) ['$230load_global.7']
    $242call.10 = call $230load_global.7(x, func=$230load_global.7, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.7', '$242call.10', 'x']
    $250list_append.11 = getattr(value=$phi228.4, attr=append) ['$250list_append.11', '$phi228.4']
    $250list_append.12 = call $250list_append.11($242call.10, func=$250list_append.11, args=(Var($242call.10, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$242call.10', '$250list_append.11', '$250list_append.12']
    jump 224                                 []
label 254:
    x = $phi254.3                            ['$phi254.3', 'x']
    $260call.7 = call $phi254.2($phi254.4, func=$phi254.2, args=[Var($phi254.4, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None) ['$260call.7', '$phi254.2', '$phi254.4']
    $268format_value.8 = global(str: <class 'str'>) ['$268format_value.8']
    $268format_value.9 = call $268format_value.8($260call.7, func=$268format_value.8, args=(Var($260call.7, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$260call.7', '$268format_value.8', '$268format_value.9']
    $const270.10.6 = const(str, ))           ['$const270.10.6']
    $272build_string.11 = $phi254.0 + $268format_value.9 ['$268format_value.9', '$272build_string.11', '$phi254.0']
    index_str = $272build_string.11 + $const270.10.6 ['$272build_string.11', '$const270.10.6', 'index_str']
    jump 276                                 []
label 276:
    $const276.0.7 = const(str, cannot assign slice of shape ) ['$const276.0.7']
    $280format_value.2 = global(str: <class 'str'>) ['$280format_value.2']
    $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$280format_value.2', '$280format_value.3', 'shape_str']
    $const282.4.8 = const(str,  from input of shape ) ['$const282.4.8']
    $286format_value.6 = global(str: <class 'str'>) ['$286format_value.6']
    $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$286format_value.6', '$286format_value.7', 'index_str']
    $288build_string.8 = $const276.0.7 + $280format_value.3 ['$280format_value.3', '$288build_string.8', '$const276.0.7']
    $288build_string.9 = $288build_string.8 + $const282.4.8 ['$288build_string.8', '$288build_string.9', '$const282.4.8']
    msg = $288build_string.9 + $286format_value.7 ['$286format_value.7', '$288build_string.9', 'msg']
    $292load_global.11 = global(ValueError: <class 'ValueError'>) ['$292load_global.11']
    $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None) ['$292load_global.11', '$304call.14', 'msg']
    raise $304call.14                        ['$304call.14']

2025-07-23 17:15:57,889 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:15:57,889 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7D89AF0>
2025-07-23 17:15:57,889 - DEBUG - on stmt: src_shapes = arg(0, name=src_shapes)
2025-07-23 17:15:57,889 - DEBUG - on stmt: index_shape = arg(1, name=index_shape)
2025-07-23 17:15:57,889 - DEBUG - on stmt: $4load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:57,889 - DEBUG - on stmt: $16call.3 = const(int, 1)
2025-07-23 17:15:57,889 - DEBUG - on stmt: $const24.4.1 = const(int, 1)
2025-07-23 17:15:57,889 - DEBUG - on stmt: $26compare_op.5 = const(bool, True)
2025-07-23 17:15:57,889 - DEBUG - on stmt: bool30 = global(bool: <class 'bool'>)
2025-07-23 17:15:57,899 - DEBUG - on stmt: $30pred = call bool30($26compare_op.5, func=bool30, args=(Var($26compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,899 - DEBUG - on stmt: jump 32
2025-07-23 17:15:57,899 - DEBUG - ==== SSA block analysis pass on 32
2025-07-23 17:15:57,899 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7D89AF0>
2025-07-23 17:15:57,899 - DEBUG - on stmt: $const32.0.2 = const(str, ()
2025-07-23 17:15:57,899 - DEBUG - on stmt: $const36.2.3 = const(int, 0)
2025-07-23 17:15:57,899 - DEBUG - on stmt: $38binary_subscr.3 = static_getitem(value=src_shapes, index=0, index_var=$const36.2.3, fn=<built-in function getitem>)
2025-07-23 17:15:57,899 - DEBUG - on stmt: $42format_value.4 = global(str: <class 'str'>)
2025-07-23 17:15:57,900 - DEBUG - on stmt: $42format_value.5 = call $42format_value.4($38binary_subscr.3, func=$42format_value.4, args=(Var($38binary_subscr.3, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,901 - DEBUG - on stmt: $const44.6.4 = const(str, ,))
2025-07-23 17:15:57,901 - DEBUG - on stmt: $46build_string.7 = $const32.0.2 + $42format_value.5
2025-07-23 17:15:57,901 - DEBUG - on stmt: shape_str = $46build_string.7 + $const44.6.4
2025-07-23 17:15:57,901 - DEBUG - on stmt: jump 140
2025-07-23 17:15:57,901 - DEBUG - ==== SSA block analysis pass on 140
2025-07-23 17:15:57,901 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7D89AF0>
2025-07-23 17:15:57,901 - DEBUG - on stmt: $140load_global.0 = global(len: <built-in function len>)
2025-07-23 17:15:57,901 - DEBUG - on stmt: $152call.3 = const(int, 1)
2025-07-23 17:15:57,901 - DEBUG - on stmt: $const160.4.1 = const(int, 1)
2025-07-23 17:15:57,901 - DEBUG - on stmt: $162compare_op.5 = const(bool, True)
2025-07-23 17:15:57,901 - DEBUG - on stmt: bool166 = global(bool: <class 'bool'>)
2025-07-23 17:15:57,902 - DEBUG - on stmt: $166pred = call bool166($162compare_op.5, func=bool166, args=(Var($162compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,902 - DEBUG - on stmt: jump 168
2025-07-23 17:15:57,902 - DEBUG - ==== SSA block analysis pass on 168
2025-07-23 17:15:57,902 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7D89AF0>
2025-07-23 17:15:57,902 - DEBUG - on stmt: $const168.0.2 = const(str, ()
2025-07-23 17:15:57,903 - DEBUG - on stmt: $const172.2.3 = const(int, 0)
2025-07-23 17:15:57,903 - DEBUG - on stmt: $174binary_subscr.3 = static_getitem(value=index_shape, index=0, index_var=$const172.2.3, fn=<built-in function getitem>)
2025-07-23 17:15:57,903 - DEBUG - on stmt: $178format_value.4 = global(str: <class 'str'>)
2025-07-23 17:15:57,903 - DEBUG - on stmt: $178format_value.5 = call $178format_value.4($174binary_subscr.3, func=$178format_value.4, args=(Var($174binary_subscr.3, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,904 - DEBUG - on stmt: $const180.6.4 = const(str, ,))
2025-07-23 17:15:57,904 - DEBUG - on stmt: $182build_string.7 = $const168.0.2 + $178format_value.5
2025-07-23 17:15:57,904 - DEBUG - on stmt: index_str = $182build_string.7 + $const180.6.4
2025-07-23 17:15:57,904 - DEBUG - on stmt: jump 276
2025-07-23 17:15:57,904 - DEBUG - ==== SSA block analysis pass on 276
2025-07-23 17:15:57,905 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7D89AF0>
2025-07-23 17:15:57,905 - DEBUG - on stmt: $const276.0.7 = const(str, cannot assign slice of shape )
2025-07-23 17:15:57,905 - DEBUG - on stmt: $280format_value.2 = global(str: <class 'str'>)
2025-07-23 17:15:57,905 - DEBUG - on stmt: $280format_value.3 = call $280format_value.2(shape_str, func=$280format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,906 - DEBUG - on stmt: $const282.4.8 = const(str,  from input of shape )
2025-07-23 17:15:57,906 - DEBUG - on stmt: $286format_value.6 = global(str: <class 'str'>)
2025-07-23 17:15:57,906 - DEBUG - on stmt: $286format_value.7 = call $286format_value.6(index_str, func=$286format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,906 - DEBUG - on stmt: $288build_string.8 = $const276.0.7 + $280format_value.3
2025-07-23 17:15:57,907 - DEBUG - on stmt: $288build_string.9 = $288build_string.8 + $const282.4.8
2025-07-23 17:15:57,907 - DEBUG - on stmt: msg = $288build_string.9 + $286format_value.7
2025-07-23 17:15:57,907 - DEBUG - on stmt: $292load_global.11 = global(ValueError: <class 'ValueError'>)
2025-07-23 17:15:57,907 - DEBUG - on stmt: $304call.14 = call $292load_global.11(msg, func=$292load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:15:57,907 - DEBUG - on stmt: <dynamic> raise <class 'ValueError'>(Var(msg, arrayobj.py:1659))
2025-07-23 17:15:57,907 - DEBUG - defs defaultdict(<class 'list'>,
            {'$140load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E7DA1970>,
                                    140)],
             '$152call.3': [(<numba.core.ir.Assign object at 0x000001F6E7DA1C10>,
                             140)],
             '$162compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6E7DA1D30>,
                                   140)],
             '$166pred': [(<numba.core.ir.Assign object at 0x000001F6E7DA1FA0>,
                           140)],
             '$16call.3': [(<numba.core.ir.Assign object at 0x000001F6E7D8A300>,
                            0)],
             '$174binary_subscr.3': [(<numba.core.ir.Assign object at 0x000001F6E7D89820>,
                                      168)],
             '$178format_value.4': [(<numba.core.ir.Assign object at 0x000001F6E7DA2690>,
                                     168)],
             '$178format_value.5': [(<numba.core.ir.Assign object at 0x000001F6E7DA27B0>,
                                     168)],
             '$182build_string.7': [(<numba.core.ir.Assign object at 0x000001F6E7DA2A80>,
                                     168)],
             '$26compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6E7D8A6C0>,
                                  0)],
             '$280format_value.2': [(<numba.core.ir.Assign object at 0x000001F6E7DA92B0>,
                                     276)],
             '$280format_value.3': [(<numba.core.ir.Assign object at 0x000001F6E7DA93D0>,
                                     276)],
             '$286format_value.6': [(<numba.core.ir.Assign object at 0x000001F6E7DA9760>,
                                     276)],
             '$286format_value.7': [(<numba.core.ir.Assign object at 0x000001F6E7DA9880>,
                                     276)],
             '$288build_string.8': [(<numba.core.ir.Assign object at 0x000001F6E7DA9A00>,
                                     276)],
             '$288build_string.9': [(<numba.core.ir.Assign object at 0x000001F6E7DA9B20>,
                                     276)],
             '$292load_global.11': [(<numba.core.ir.Assign object at 0x000001F6E7DA9E20>,
                                     276)],
             '$304call.14': [(<numba.core.ir.Assign object at 0x000001F6E7DAA090>,
                              276)],
             '$30pred': [(<numba.core.ir.Assign object at 0x000001F6E7D8A7E0>,
                          0)],
             '$38binary_subscr.3': [(<numba.core.ir.Assign object at 0x000001F6E7D8A480>,
                                     32)],
             '$42format_value.4': [(<numba.core.ir.Assign object at 0x000001F6E7D8AD50>,
                                    32)],
             '$42format_value.5': [(<numba.core.ir.Assign object at 0x000001F6E7D8AE70>,
                                    32)],
             '$46build_string.7': [(<numba.core.ir.Assign object at 0x000001F6E7D8B110>,
                                    32)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E7D8A960>,
                                  0)],
             '$const160.4.1': [(<numba.core.ir.Assign object at 0x000001F6E7D8BA10>,
                                140)],
             '$const168.0.2': [(<numba.core.ir.Assign object at 0x000001F6E7DA2180>,
                                168)],
             '$const172.2.3': [(<numba.core.ir.Assign object at 0x000001F6E7DA23C0>,
                                168)],
             '$const180.6.4': [(<numba.core.ir.Assign object at 0x000001F6E7DA28D0>,
                                168)],
             '$const24.4.1': [(<numba.core.ir.Assign object at 0x000001F6E7D8A240>,
                               0)],
             '$const276.0.7': [(<numba.core.ir.Assign object at 0x000001F6E7DA9040>,
                                276)],
             '$const282.4.8': [(<numba.core.ir.Assign object at 0x000001F6E7DA94F0>,
                                276)],
             '$const32.0.2': [(<numba.core.ir.Assign object at 0x000001F6E7D8A840>,
                               32)],
             '$const36.2.3': [(<numba.core.ir.Assign object at 0x000001F6E7D8AA80>,
                               32)],
             '$const44.6.4': [(<numba.core.ir.Assign object at 0x000001F6E7D8AF90>,
                               32)],
             'bool166': [(<numba.core.ir.Assign object at 0x000001F6E7DA1E80>,
                          140)],
             'bool30': [(<numba.core.ir.Assign object at 0x000001F6E7D8A390>,
                         0)],
             'index_shape': [(<numba.core.ir.Assign object at 0x000001F6E7D89190>,
                              0)],
             'index_str': [(<numba.core.ir.Assign object at 0x000001F6E7DA2BA0>,
                            168)],
             'msg': [(<numba.core.ir.Assign object at 0x000001F6E7DA9C40>,
                      276)],
             'shape_str': [(<numba.core.ir.Assign object at 0x000001F6E7D8B230>,
                            32)],
             'src_shapes': [(<numba.core.ir.Assign object at 0x000001F6E7D89580>,
                             0)]})
2025-07-23 17:15:57,910 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E7D89AF0>
2025-07-23 17:16:00,329 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:00,864 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:16:00,899 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=421)
           2	RESUME(arg=0, lineno=421)
           4	LOAD_CONST(arg=1, lineno=423)
           6	STORE_FAST(arg=4, lineno=423)
           8	LOAD_GLOBAL(arg=1, lineno=424)
          18	LOAD_CONST(arg=2, lineno=424)
          20	LOAD_FAST(arg=1, lineno=424)
          22	BINARY_OP(arg=5, lineno=424)
          26	LOAD_CONST(arg=3, lineno=424)
          28	BINARY_OP(arg=10, lineno=424)
          32	CALL(arg=1, lineno=424)
          40	GET_ITER(arg=None, lineno=424)
>         42	FOR_ITER(arg=51, lineno=424)
          46	STORE_FAST(arg=5, lineno=424)
          48	LOAD_FAST(arg=5, lineno=425)
          50	LOAD_FAST(arg=1, lineno=425)
          52	COMPARE_OP(arg=2, lineno=425)
          56	POP_JUMP_IF_FALSE(arg=6, lineno=425)
          58	LOAD_FAST(arg=4, lineno=426)
          60	LOAD_CONST(arg=3, lineno=426)
          62	BINARY_OP(arg=13, lineno=426)
          66	STORE_FAST(arg=4, lineno=426)
          68	JUMP_FORWARD(arg=22, lineno=426)
>         70	LOAD_FAST(arg=4, lineno=428)
          72	LOAD_GLOBAL(arg=3, lineno=428)
          82	LOAD_FAST(arg=0, lineno=428)
          84	LOAD_FAST(arg=5, lineno=428)
          86	LOAD_FAST(arg=1, lineno=428)
          88	BINARY_OP(arg=10, lineno=428)
          92	LOAD_CONST(arg=4, lineno=428)
          94	BUILD_TUPLE(arg=2, lineno=428)
          96	BINARY_SUBSCR(arg=None, lineno=428)
         100	CALL(arg=1, lineno=428)
         108	BINARY_OP(arg=13, lineno=428)
         112	STORE_FAST(arg=4, lineno=428)
>        114	LOAD_FAST(arg=4, lineno=429)
         116	LOAD_FAST(arg=3, lineno=429)
         118	LOAD_FAST(arg=5, lineno=429)
         120	LOAD_CONST(arg=3, lineno=429)
         122	BINARY_OP(arg=0, lineno=429)
         126	STORE_SUBSCR(arg=None, lineno=429)
         130	LOAD_FAST(arg=3, lineno=430)
         132	LOAD_FAST(arg=5, lineno=430)
         134	BINARY_SUBSCR(arg=None, lineno=430)
         138	LOAD_FAST(arg=2, lineno=430)
         140	LOAD_FAST(arg=5, lineno=430)
         142	STORE_SUBSCR(arg=None, lineno=430)
         146	JUMP_BACKWARD(arg=53, lineno=430)
>        148	END_FOR(arg=None, lineno=424)
         150	RETURN_CONST(arg=0, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:00,899 - DEBUG - stack: []
2025-07-23 17:16:00,899 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=421)
2025-07-23 17:16:00,899 - DEBUG - stack []
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=421)
2025-07-23 17:16:00,899 - DEBUG - stack []
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=423)
2025-07-23 17:16:00,899 - DEBUG - stack []
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=4, lineno=423)
2025-07-23 17:16:00,899 - DEBUG - stack ['$const4.0.1']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack []
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$const18.3.2']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=22, inst=BINARY_OP(arg=5, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$const18.3.2', '$M20.4']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$binop_mul22.5']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=10, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$binop_mul22.5', '$const26.6.3']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=32, inst=CALL(arg=1, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$null$8.2', '$8load_global.1', '$binop_sub28.7']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=40, inst=GET_ITER(arg=None, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$32call.8']
2025-07-23 17:16:00,899 - DEBUG - end state. edges=[Edge(pc=42, stack=('$40get_iter.9',), blockstack=(), npush=0)]
2025-07-23 17:16:00,899 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1)])
2025-07-23 17:16:00,899 - DEBUG - stack: ['$phi42.0']
2025-07-23 17:16:00,899 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=1)
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=42, inst=FOR_ITER(arg=51, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi42.0']
2025-07-23 17:16:00,899 - DEBUG - end state. edges=[Edge(pc=148, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0), Edge(pc=46, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0)]
2025-07-23 17:16:00,899 - DEBUG - pending: deque([State(pc_initial=148 nstack_initial=2), State(pc_initial=46 nstack_initial=2)])
2025-07-23 17:16:00,899 - DEBUG - stack: ['$phi148.0', '$phi148.1']
2025-07-23 17:16:00,899 - DEBUG - state.pc_initial: State(pc_initial=148 nstack_initial=2)
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=148, inst=END_FOR(arg=None, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi148.0', '$phi148.1']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=150, inst=RETURN_CONST(arg=0, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack []
2025-07-23 17:16:00,899 - DEBUG - end state. edges=[]
2025-07-23 17:16:00,899 - DEBUG - pending: deque([State(pc_initial=46 nstack_initial=2)])
2025-07-23 17:16:00,899 - DEBUG - stack: ['$phi46.0', '$phi46.1']
2025-07-23 17:16:00,899 - DEBUG - state.pc_initial: State(pc_initial=46 nstack_initial=2)
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=5, lineno=424)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi46.0', '$phi46.1']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=425)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi46.0']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=425)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi46.0', '$i48.2']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=52, inst=COMPARE_OP(arg=2, lineno=425)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi46.0', '$i48.2', '$M50.3']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=6, lineno=425)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi46.0', '$52compare_op.4']
2025-07-23 17:16:00,899 - DEBUG - end state. edges=[Edge(pc=58, stack=('$phi46.0',), blockstack=(), npush=0), Edge(pc=70, stack=('$phi46.0',), blockstack=(), npush=0)]
2025-07-23 17:16:00,899 - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-07-23 17:16:00,899 - DEBUG - stack: ['$phi58.0']
2025-07-23 17:16:00,899 - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=1)
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=426)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi58.0']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=426)
2025-07-23 17:16:00,899 - DEBUG - stack ['$phi58.0', '$pos58.1']
2025-07-23 17:16:00,899 - DEBUG - dispatch pc=62, inst=BINARY_OP(arg=13, lineno=426)
2025-07-23 17:16:00,909 - DEBUG - stack ['$phi58.0', '$pos58.1', '$const60.2.3']
2025-07-23 17:16:00,909 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=4, lineno=426)
2025-07-23 17:16:00,909 - DEBUG - stack ['$phi58.0', '$binop_iadd62.3']
2025-07-23 17:16:00,909 - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=22, lineno=426)
2025-07-23 17:16:00,909 - DEBUG - stack ['$phi58.0']
2025-07-23 17:16:00,909 - DEBUG - end state. edges=[Edge(pc=114, stack=('$phi58.0',), blockstack=(), npush=0)]
2025-07-23 17:16:00,909 - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=114 nstack_initial=1)])
2025-07-23 17:16:00,909 - DEBUG - stack: ['$phi70.0']
2025-07-23 17:16:00,909 - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-07-23 17:16:00,909 - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=4, lineno=428)
2025-07-23 17:16:00,911 - DEBUG - stack ['$phi70.0']
2025-07-23 17:16:00,911 - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=3, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4', '$i84.5']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=88, inst=BINARY_OP(arg=10, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4', '$i84.5', '$M86.6']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=4, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4', '$binop_sub88.7']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=94, inst=BUILD_TUPLE(arg=2, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4', '$binop_sub88.7', '$const92.8.4']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$cluster_matrix82.4', '$94build_tuple.9']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=100, inst=CALL(arg=1, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$null$72.3', '$72load_global.2', '$96binary_subscr.10']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=108, inst=BINARY_OP(arg=13, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$pos70.1', '$100call.11']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=4, lineno=428)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi70.0', '$binop_iadd108.12']
2025-07-23 17:16:00,912 - DEBUG - end state. edges=[Edge(pc=114, stack=('$phi70.0',), blockstack=(), npush=0)]
2025-07-23 17:16:00,912 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=1), State(pc_initial=114 nstack_initial=1)])
2025-07-23 17:16:00,912 - DEBUG - stack: ['$phi114.0']
2025-07-23 17:16:00,912 - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=1)
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=3, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0', '$pos114.1']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=5, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0', '$pos114.1', '$indptr116.2']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=120, inst=LOAD_CONST(arg=3, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0', '$pos114.1', '$indptr116.2', '$i118.3']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=122, inst=BINARY_OP(arg=0, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0', '$pos114.1', '$indptr116.2', '$i118.3', '$const120.4.3']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=429)
2025-07-23 17:16:00,912 - DEBUG - stack ['$phi114.0', '$pos114.1', '$indptr116.2', '$binop_add122.5']
2025-07-23 17:16:00,912 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=3, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=132, inst=LOAD_FAST(arg=5, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0', '$indptr130.6']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0', '$indptr130.6', '$i132.7']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=2, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0', '$134binary_subscr.8']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0', '$134binary_subscr.8', '$indices_row_pos138.9']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=142, inst=STORE_SUBSCR(arg=None, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0', '$134binary_subscr.8', '$indices_row_pos138.9', '$i140.10']
2025-07-23 17:16:00,919 - DEBUG - dispatch pc=146, inst=JUMP_BACKWARD(arg=53, lineno=430)
2025-07-23 17:16:00,919 - DEBUG - stack ['$phi114.0']
2025-07-23 17:16:00,919 - DEBUG - end state. edges=[Edge(pc=42, stack=('$phi114.0',), blockstack=(), npush=0)]
2025-07-23 17:16:00,919 - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
2025-07-23 17:16:00,919 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=1)])
2025-07-23 17:16:00,919 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:00,919 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=1): {'$phi42.0'},
             State(pc_initial=46 nstack_initial=2): {'$phi46.1'},
             State(pc_initial=58 nstack_initial=1): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=114 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=2): set()})
2025-07-23 17:16:00,919 - DEBUG - defmap: {'$phi148.1': State(pc_initial=42 nstack_initial=1),
 '$phi42.0': State(pc_initial=0 nstack_initial=0),
 '$phi46.1': State(pc_initial=42 nstack_initial=1)}
2025-07-23 17:16:00,919 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi70.0', State(pc_initial=70 nstack_initial=1))},
             '$phi148.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi148.1': {('$42for_iter.2',
                            State(pc_initial=42 nstack_initial=1))},
             '$phi42.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi114.0',
                           State(pc_initial=114 nstack_initial=1))},
             '$phi46.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi46.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi58.0': {('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi70.0': {('$phi46.0', State(pc_initial=46 nstack_initial=2))}})
2025-07-23 17:16:00,919 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi148.0': {('$40get_iter.9',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi114.0',
                            State(pc_initial=114 nstack_initial=1))},
             '$phi148.1': {('$42for_iter.2',
                            State(pc_initial=42 nstack_initial=1))},
             '$phi42.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi58.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-23 17:16:00,919 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$40get_iter.9',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$40get_iter.9',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.1': {('$42for_iter.2',
                            State(pc_initial=42 nstack_initial=1))},
             '$phi42.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi58.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-23 17:16:00,919 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$40get_iter.9',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$40get_iter.9',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.1': {('$42for_iter.2',
                            State(pc_initial=42 nstack_initial=1))},
             '$phi42.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi58.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$40get_iter.9',
                           State(pc_initial=0 nstack_initial=0))}})
2025-07-23 17:16:00,919 - DEBUG - keep phismap: {'$phi42.0': {('$40get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi46.1': {('$42for_iter.2', State(pc_initial=42 nstack_initial=1))}}
2025-07-23 17:16:00,927 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi42.0': '$40get_iter.9'},
             State(pc_initial=42 nstack_initial=1): {'$phi46.1': '$42for_iter.2'}})
2025-07-23 17:16:00,927 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'idx': 0, 'res': '$8load_global.1'}), (18, {'res': '$const18.3.2'}), (20, {'res': '$M20.4'}), (22, {'op': '*', 'lhs': '$const18.3.2', 'rhs': '$M20.4', 'res': '$binop_mul22.5'}), (26, {'res': '$const26.6.3'}), (28, {'op': '-', 'lhs': '$binop_mul22.5', 'rhs': '$const26.6.3', 'res': '$binop_sub28.7'}), (32, {'func': '$8load_global.1', 'args': ['$binop_sub28.7'], 'kw_names': None, 'res': '$32call.8'}), (40, {'value': '$32call.8', 'res': '$40get_iter.9'})), outgoing_phis={'$phi42.0': '$40get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$40get_iter.9',)})
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=42 nstack_initial=1):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.0', 'pair': '$42for_iter.1', 'indval': '$42for_iter.2', 'pred': '$42for_iter.3'}),), outgoing_phis={'$phi46.1': '$42for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi42.0', '$42for_iter.2'), 46: ('$phi42.0', '$42for_iter.2')})
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=46 nstack_initial=2):
AdaptBlockInfo(insts=((46, {'value': '$phi46.1'}), (48, {'res': '$i48.2'}), (50, {'res': '$M50.3'}), (52, {'lhs': '$i48.2', 'rhs': '$M50.3', 'res': '$52compare_op.4'}), (56, {'pred': '$52compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi46.0',), 70: ('$phi46.0',)})
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {'res': '$pos58.1'}), (60, {'res': '$const60.2.3'}), (62, {'op': '+=', 'lhs': '$pos58.1', 'rhs': '$const60.2.3', 'res': '$binop_iadd62.3'}), (66, {'value': '$binop_iadd62.3'}), (68, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: ('$phi58.0',)})
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((70, {'res': '$pos70.1'}), (72, {'idx': 1, 'res': '$72load_global.2'}), (82, {'res': '$cluster_matrix82.4'}), (84, {'res': '$i84.5'}), (86, {'res': '$M86.6'}), (88, {'op': '-', 'lhs': '$i84.5', 'rhs': '$M86.6', 'res': '$binop_sub88.7'}), (92, {'res': '$const92.8.4'}), (94, {'items': ['$binop_sub88.7', '$const92.8.4'], 'res': '$94build_tuple.9'}), (96, {'index': '$94build_tuple.9', 'target': '$cluster_matrix82.4', 'res': '$96binary_subscr.10'}), (100, {'func': '$72load_global.2', 'args': ['$96binary_subscr.10'], 'kw_names': None, 'res': '$100call.11'}), (108, {'op': '+=', 'lhs': '$pos70.1', 'rhs': '$100call.11', 'res': '$binop_iadd108.12'}), (112, {'value': '$binop_iadd108.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: ('$phi70.0',)})
2025-07-23 17:16:00,927 - DEBUG - block_infos State(pc_initial=114 nstack_initial=1):
AdaptBlockInfo(insts=((114, {'res': '$pos114.1'}), (116, {'res': '$indptr116.2'}), (118, {'res': '$i118.3'}), (120, {'res': '$const120.4.3'}), (122, {'op': '+', 'lhs': '$i118.3', 'rhs': '$const120.4.3', 'res': '$binop_add122.5'}), (126, {'target': '$indptr116.2', 'index': '$binop_add122.5', 'value': '$pos114.1'}), (130, {'res': '$indptr130.6'}), (132, {'res': '$i132.7'}), (134, {'index': '$i132.7', 'target': '$indptr130.6', 'res': '$134binary_subscr.8'}), (138, {'res': '$indices_row_pos138.9'}), (140, {'res': '$i140.10'}), (142, {'target': '$indices_row_pos138.9', 'index': '$i140.10', 'value': '$134binary_subscr.8'}), (146, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi114.0',)})
2025-07-23 17:16:00,929 - DEBUG - block_infos State(pc_initial=148 nstack_initial=2):
AdaptBlockInfo(insts=((150, {'retval': '$const150.2', 'castval': '$150return_const.3'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:00,929 - DEBUG - label 0:
    cluster_matrix = arg(0, name=cluster_matrix) ['cluster_matrix']
    M = arg(1, name=M)                       ['M']
    indices_row_pos = arg(2, name=indices_row_pos) ['indices_row_pos']
    indptr = arg(3, name=indptr)             ['indptr']
    pos = const(int, 0)                      ['pos']
    $8load_global.1 = global(range: <class 'range'>) ['$8load_global.1']
    $const18.3.2 = const(int, 2)             ['$const18.3.2']
    $binop_mul22.5 = $const18.3.2 * M        ['$binop_mul22.5', '$const18.3.2', 'M']
    $const26.6.3 = const(int, 1)             ['$const26.6.3']
    $binop_sub28.7 = $binop_mul22.5 - $const26.6.3 ['$binop_mul22.5', '$binop_sub28.7', '$const26.6.3']
    $32call.8 = call $8load_global.1($binop_sub28.7, func=$8load_global.1, args=[Var($binop_sub28.7, _masked_model.py:424)], kws=(), vararg=None, varkwarg=None, target=None) ['$32call.8', '$8load_global.1', '$binop_sub28.7']
    $40get_iter.9 = getiter(value=$32call.8) ['$32call.8', '$40get_iter.9']
    $phi42.0 = $40get_iter.9                 ['$40get_iter.9', '$phi42.0']
    jump 42                                  []
label 42:
    $42for_iter.1 = iternext(value=$phi42.0) ['$42for_iter.1', '$phi42.0']
    $42for_iter.2 = pair_first(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.2']
    $42for_iter.3 = pair_second(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.3']
    $phi46.1 = $42for_iter.2                 ['$42for_iter.2', '$phi46.1']
    branch $42for_iter.3, 46, 148            ['$42for_iter.3']
label 46:
    i = $phi46.1                             ['$phi46.1', 'i']
    $52compare_op.4 = i < M                  ['$52compare_op.4', 'M', 'i']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($52compare_op.4, func=bool56, args=(Var($52compare_op.4, _masked_model.py:425),), kws=(), vararg=None, varkwarg=None, target=None) ['$52compare_op.4', '$56pred', 'bool56']
    branch $56pred, 58, 70                   ['$56pred']
label 58:
    $const60.2.3 = const(int, 1)             ['$const60.2.3']
    $binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd62.3', '$const60.2.3', 'pos']
    pos = $binop_iadd62.3                    ['$binop_iadd62.3', 'pos']
    jump 114                                 []
label 70:
    $72load_global.2 = global(int: <class 'int'>) ['$72load_global.2']
    $binop_sub88.7 = i - M                   ['$binop_sub88.7', 'M', 'i']
    $const92.8.4 = const(int, 3)             ['$const92.8.4']
    $94build_tuple.9 = build_tuple(items=[Var($binop_sub88.7, _masked_model.py:428), Var($const92.8.4, _masked_model.py:428)]) ['$94build_tuple.9', '$binop_sub88.7', '$const92.8.4']
    $96binary_subscr.10 = getitem(value=cluster_matrix, index=$94build_tuple.9, fn=<built-in function getitem>) ['$94build_tuple.9', '$96binary_subscr.10', 'cluster_matrix']
    $100call.11 = call $72load_global.2($96binary_subscr.10, func=$72load_global.2, args=[Var($96binary_subscr.10, _masked_model.py:428)], kws=(), vararg=None, varkwarg=None, target=None) ['$100call.11', '$72load_global.2', '$96binary_subscr.10']
    $binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined) ['$100call.11', '$binop_iadd108.12', 'pos']
    pos = $binop_iadd108.12                  ['$binop_iadd108.12', 'pos']
    jump 114                                 []
label 114:
    $const120.4.3 = const(int, 1)            ['$const120.4.3']
    $binop_add122.5 = i + $const120.4.3      ['$binop_add122.5', '$const120.4.3', 'i']
    indptr[$binop_add122.5] = pos            ['$binop_add122.5', 'indptr', 'pos']
    $134binary_subscr.8 = getitem(value=indptr, index=i, fn=<built-in function getitem>) ['$134binary_subscr.8', 'i', 'indptr']
    indices_row_pos[i] = $134binary_subscr.8 ['$134binary_subscr.8', 'i', 'indices_row_pos']
    jump 42                                  []
label 148:
    $const150.2 = const(NoneType, None)      ['$const150.2']
    $150return_const.3 = cast(value=$const150.2) ['$150return_const.3', '$const150.2']
    return $150return_const.3                ['$150return_const.3']

2025-07-23 17:16:00,943 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:00,943 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,943 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:00,943 - DEBUG - on stmt: M = arg(1, name=M)
2025-07-23 17:16:00,949 - DEBUG - on stmt: indices_row_pos = arg(2, name=indices_row_pos)
2025-07-23 17:16:00,949 - DEBUG - on stmt: indptr = arg(3, name=indptr)
2025-07-23 17:16:00,949 - DEBUG - on stmt: pos = const(int, 0)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $8load_global.1 = global(range: <class 'range'>)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const18.3.2 = const(int, 2)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_mul22.5 = $const18.3.2 * M
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const26.6.3 = const(int, 1)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_sub28.7 = $binop_mul22.5 - $const26.6.3
2025-07-23 17:16:00,949 - DEBUG - on stmt: $32call.8 = call $8load_global.1($binop_sub28.7, func=$8load_global.1, args=[Var($binop_sub28.7, _masked_model.py:424)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $40get_iter.9 = getiter(value=$32call.8)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $phi42.0 = $40get_iter.9
2025-07-23 17:16:00,949 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $phi46.1 = $42for_iter.2
2025-07-23 17:16:00,949 - DEBUG - on stmt: branch $42for_iter.3, 46, 148
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 46
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: i = $phi46.1
2025-07-23 17:16:00,949 - DEBUG - on stmt: $52compare_op.4 = i < M
2025-07-23 17:16:00,949 - DEBUG - on stmt: bool56 = global(bool: <class 'bool'>)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $56pred = call bool56($52compare_op.4, func=bool56, args=(Var($52compare_op.4, _masked_model.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,949 - DEBUG - on stmt: branch $56pred, 58, 70
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 58
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const60.2.3 = const(int, 1)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,949 - DEBUG - on stmt: pos = $binop_iadd62.3
2025-07-23 17:16:00,949 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 70
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: $72load_global.2 = global(int: <class 'int'>)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_sub88.7 = i - M
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const92.8.4 = const(int, 3)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $94build_tuple.9 = build_tuple(items=[Var($binop_sub88.7, _masked_model.py:428), Var($const92.8.4, _masked_model.py:428)])
2025-07-23 17:16:00,949 - DEBUG - on stmt: $96binary_subscr.10 = getitem(value=cluster_matrix, index=$94build_tuple.9, fn=<built-in function getitem>)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $100call.11 = call $72load_global.2($96binary_subscr.10, func=$72load_global.2, args=[Var($96binary_subscr.10, _masked_model.py:428)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,949 - DEBUG - on stmt: pos = $binop_iadd108.12
2025-07-23 17:16:00,949 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 114
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const120.4.3 = const(int, 1)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $binop_add122.5 = i + $const120.4.3
2025-07-23 17:16:00,949 - DEBUG - on stmt: indptr[$binop_add122.5] = pos
2025-07-23 17:16:00,949 - DEBUG - on stmt: $134binary_subscr.8 = getitem(value=indptr, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:00,949 - DEBUG - on stmt: indices_row_pos[i] = $134binary_subscr.8
2025-07-23 17:16:00,949 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block analysis pass on 148
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - on stmt: $const150.2 = const(NoneType, None)
2025-07-23 17:16:00,949 - DEBUG - on stmt: $150return_const.3 = cast(value=$const150.2)
2025-07-23 17:16:00,949 - DEBUG - on stmt: return $150return_const.3
2025-07-23 17:16:00,949 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100call.11': [(<numba.core.ir.Assign object at 0x000001F6E7FE27E0>,
                              70)],
             '$134binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E7FF1CD0>,
                                      114)],
             '$150return_const.3': [(<numba.core.ir.Assign object at 0x000001F6E7FF1FA0>,
                                     148)],
             '$32call.8': [(<numba.core.ir.Assign object at 0x000001F6E7FE3CE0>,
                            0)],
             '$40get_iter.9': [(<numba.core.ir.Assign object at 0x000001F6E7FE3E00>,
                                0)],
             '$42for_iter.1': [(<numba.core.ir.Assign object at 0x000001F6E7FF0080>,
                                42)],
             '$42for_iter.2': [(<numba.core.ir.Assign object at 0x000001F6E7FF01A0>,
                                42)],
             '$42for_iter.3': [(<numba.core.ir.Assign object at 0x000001F6E7FF02C0>,
                                42)],
             '$52compare_op.4': [(<numba.core.ir.Assign object at 0x000001F6E7FF0890>,
                                  46)],
             '$56pred': [(<numba.core.ir.Assign object at 0x000001F6E7FF0B30>,
                          46)],
             '$72load_global.2': [(<numba.core.ir.Assign object at 0x000001F6E7FF1250>,
                                   70)],
             '$8load_global.1': [(<numba.core.ir.Assign object at 0x000001F6E7FE3500>,
                                  0)],
             '$94build_tuple.9': [(<numba.core.ir.Assign object at 0x000001F6E7FE26C0>,
                                   70)],
             '$96binary_subscr.10': [(<numba.core.ir.Assign object at 0x000001F6E7FE24E0>,
                                      70)],
             '$binop_add122.5': [(<numba.core.ir.Assign object at 0x000001F6E7FF1940>,
                                  114)],
             '$binop_iadd108.12': [(<numba.core.ir.Assign object at 0x000001F6E7FE2690>,
                                    70)],
             '$binop_iadd62.3': [(<numba.core.ir.Assign object at 0x000001F6E7FF0F20>,
                                  58)],
             '$binop_mul22.5': [(<numba.core.ir.Assign object at 0x000001F6E7FE38C0>,
                                 0)],
             '$binop_sub28.7': [(<numba.core.ir.Assign object at 0x000001F6E7FE3B60>,
                                 0)],
             '$binop_sub88.7': [(<numba.core.ir.Assign object at 0x000001F6E7FF16A0>,
                                 70)],
             '$const120.4.3': [(<numba.core.ir.Assign object at 0x000001F6E7FF1520>,
                                114)],
             '$const150.2': [(<numba.core.ir.Assign object at 0x000001F6E7FF1B50>,
                              148)],
             '$const18.3.2': [(<numba.core.ir.Assign object at 0x000001F6E7FE3650>,
                               0)],
             '$const26.6.3': [(<numba.core.ir.Assign object at 0x000001F6E7FE39E0>,
                               0)],
             '$const60.2.3': [(<numba.core.ir.Assign object at 0x000001F6E7FF0DA0>,
                               58)],
             '$const92.8.4': [(<numba.core.ir.Assign object at 0x000001F6E7FF17C0>,
                               70)],
             '$phi42.0': [(<numba.core.ir.Assign object at 0x000001F6E7FE3740>,
                           0)],
             '$phi46.1': [(<numba.core.ir.Assign object at 0x000001F6E7FF0380>,
                           42)],
             'M': [(<numba.core.ir.Assign object at 0x000001F6E7FE2E40>, 0)],
             'bool56': [(<numba.core.ir.Assign object at 0x000001F6E7FF09E0>,
                         46)],
             'cluster_matrix': [(<numba.core.ir.Assign object at 0x000001F6E7FE2F00>,
                                 0)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E7FF0530>, 46)],
             'indices_row_pos': [(<numba.core.ir.Assign object at 0x000001F6E7FE3020>,
                                  0)],
             'indptr': [(<numba.core.ir.Assign object at 0x000001F6E7FE3140>,
                         0)],
             'pos': [(<numba.core.ir.Assign object at 0x000001F6E7FE32C0>, 0),
                     (<numba.core.ir.Assign object at 0x000001F6E7FF0F80>, 58),
                     (<numba.core.ir.Assign object at 0x000001F6E7FE1CD0>,
                      70)]})
2025-07-23 17:16:00,949 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E7FE2930>
2025-07-23 17:16:00,949 - DEBUG - Fix SSA violator on var pos
2025-07-23 17:16:00,949 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:00,949 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,949 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:00,949 - DEBUG - on stmt: M = arg(1, name=M)
2025-07-23 17:16:00,949 - DEBUG - on stmt: indices_row_pos = arg(2, name=indices_row_pos)
2025-07-23 17:16:00,959 - DEBUG - on stmt: indptr = arg(3, name=indptr)
2025-07-23 17:16:00,959 - DEBUG - on stmt: pos = const(int, 0)
2025-07-23 17:16:00,959 - DEBUG - first assign: pos
2025-07-23 17:16:00,959 - DEBUG - replaced with: pos = const(int, 0)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $8load_global.1 = global(range: <class 'range'>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const18.3.2 = const(int, 2)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_mul22.5 = $const18.3.2 * M
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const26.6.3 = const(int, 1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_sub28.7 = $binop_mul22.5 - $const26.6.3
2025-07-23 17:16:00,959 - DEBUG - on stmt: $32call.8 = call $8load_global.1($binop_sub28.7, func=$8load_global.1, args=[Var($binop_sub28.7, _masked_model.py:424)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $40get_iter.9 = getiter(value=$32call.8)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $phi42.0 = $40get_iter.9
2025-07-23 17:16:00,959 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $phi46.1 = $42for_iter.2
2025-07-23 17:16:00,959 - DEBUG - on stmt: branch $42for_iter.3, 46, 148
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 46
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: i = $phi46.1
2025-07-23 17:16:00,959 - DEBUG - on stmt: $52compare_op.4 = i < M
2025-07-23 17:16:00,959 - DEBUG - on stmt: bool56 = global(bool: <class 'bool'>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $56pred = call bool56($52compare_op.4, func=bool56, args=(Var($52compare_op.4, _masked_model.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,959 - DEBUG - on stmt: branch $56pred, 58, 70
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 58
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const60.2.3 = const(int, 1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,959 - DEBUG - on stmt: pos = $binop_iadd62.3
2025-07-23 17:16:00,959 - DEBUG - replaced with: pos.1 = $binop_iadd62.3
2025-07-23 17:16:00,959 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $72load_global.2 = global(int: <class 'int'>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_sub88.7 = i - M
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const92.8.4 = const(int, 3)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $94build_tuple.9 = build_tuple(items=[Var($binop_sub88.7, _masked_model.py:428), Var($const92.8.4, _masked_model.py:428)])
2025-07-23 17:16:00,959 - DEBUG - on stmt: $96binary_subscr.10 = getitem(value=cluster_matrix, index=$94build_tuple.9, fn=<built-in function getitem>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $100call.11 = call $72load_global.2($96binary_subscr.10, func=$72load_global.2, args=[Var($96binary_subscr.10, _masked_model.py:428)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,959 - DEBUG - on stmt: pos = $binop_iadd108.12
2025-07-23 17:16:00,959 - DEBUG - replaced with: pos.2 = $binop_iadd108.12
2025-07-23 17:16:00,959 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 114
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const120.4.3 = const(int, 1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_add122.5 = i + $const120.4.3
2025-07-23 17:16:00,959 - DEBUG - on stmt: indptr[$binop_add122.5] = pos
2025-07-23 17:16:00,959 - DEBUG - on stmt: $134binary_subscr.8 = getitem(value=indptr, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: indices_row_pos[i] = $134binary_subscr.8
2025-07-23 17:16:00,959 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 148
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FF3920>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const150.2 = const(NoneType, None)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $150return_const.3 = cast(value=$const150.2)
2025-07-23 17:16:00,959 - DEBUG - on stmt: return $150return_const.3
2025-07-23 17:16:00,959 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F6E7FF3950>],
             58: [<numba.core.ir.Assign object at 0x000001F6E7FF3A70>],
             70: [<numba.core.ir.Assign object at 0x000001F6E7FF3C80>]})
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,959 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:00,959 - DEBUG - on stmt: M = arg(1, name=M)
2025-07-23 17:16:00,959 - DEBUG - on stmt: indices_row_pos = arg(2, name=indices_row_pos)
2025-07-23 17:16:00,959 - DEBUG - on stmt: indptr = arg(3, name=indptr)
2025-07-23 17:16:00,959 - DEBUG - on stmt: pos = const(int, 0)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $8load_global.1 = global(range: <class 'range'>)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const18.3.2 = const(int, 2)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_mul22.5 = $const18.3.2 * M
2025-07-23 17:16:00,959 - DEBUG - on stmt: $const26.6.3 = const(int, 1)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $binop_sub28.7 = $binop_mul22.5 - $const26.6.3
2025-07-23 17:16:00,959 - DEBUG - on stmt: $32call.8 = call $8load_global.1($binop_sub28.7, func=$8load_global.1, args=[Var($binop_sub28.7, _masked_model.py:424)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $40get_iter.9 = getiter(value=$32call.8)
2025-07-23 17:16:00,959 - DEBUG - on stmt: $phi42.0 = $40get_iter.9
2025-07-23 17:16:00,959 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,959 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:00,959 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,959 - DEBUG - on stmt: $42for_iter.1 = iternext(value=$phi42.0)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $phi46.1 = $42for_iter.2
2025-07-23 17:16:00,969 - DEBUG - on stmt: branch $42for_iter.3, 46, 148
2025-07-23 17:16:00,969 - DEBUG - ==== SSA block rewrite pass on 46
2025-07-23 17:16:00,969 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,969 - DEBUG - on stmt: i = $phi46.1
2025-07-23 17:16:00,969 - DEBUG - on stmt: $52compare_op.4 = i < M
2025-07-23 17:16:00,969 - DEBUG - on stmt: bool56 = global(bool: <class 'bool'>)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $56pred = call bool56($52compare_op.4, func=bool56, args=(Var($52compare_op.4, _masked_model.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,969 - DEBUG - on stmt: branch $56pred, 58, 70
2025-07-23 17:16:00,969 - DEBUG - ==== SSA block rewrite pass on 58
2025-07-23 17:16:00,969 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,969 - DEBUG - on stmt: $const60.2.3 = const(int, 1)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,969 - DEBUG - find_def var='pos' stmt=$binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,969 - DEBUG - find_def_from_top label 58
2025-07-23 17:16:00,969 - DEBUG - idom 46 from label 58
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 46
2025-07-23 17:16:00,969 - DEBUG - find_def_from_top label 46
2025-07-23 17:16:00,969 - DEBUG - idom 42 from label 46
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 42
2025-07-23 17:16:00,969 - DEBUG - find_def_from_top label 42
2025-07-23 17:16:00,969 - DEBUG - insert phi node pos.3 = phi(incoming_values=[], incoming_blocks=[]) at 42
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 0
2025-07-23 17:16:00,969 - DEBUG - incoming_def pos = const(int, 0)
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 114
2025-07-23 17:16:00,969 - DEBUG - find_def_from_top label 114
2025-07-23 17:16:00,969 - DEBUG - insert phi node pos.4 = phi(incoming_values=[], incoming_blocks=[]) at 114
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 58
2025-07-23 17:16:00,969 - DEBUG - incoming_def pos.1 = $binop_iadd62.3
2025-07-23 17:16:00,969 - DEBUG - find_def_from_bottom label 70
2025-07-23 17:16:00,969 - DEBUG - incoming_def pos.2 = $binop_iadd108.12
2025-07-23 17:16:00,969 - DEBUG - incoming_def pos.4 = phi(incoming_values=[Var(pos.1, _masked_model.py:426), Var(pos.2, _masked_model.py:428)], incoming_blocks=[58, 70])
2025-07-23 17:16:00,969 - DEBUG - replaced with: $binop_iadd62.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos.3, rhs=$const60.2.3, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,969 - DEBUG - on stmt: pos.1 = $binop_iadd62.3
2025-07-23 17:16:00,969 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,969 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:00,969 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,969 - DEBUG - on stmt: $72load_global.2 = global(int: <class 'int'>)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $binop_sub88.7 = i - M
2025-07-23 17:16:00,969 - DEBUG - on stmt: $const92.8.4 = const(int, 3)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $94build_tuple.9 = build_tuple(items=[Var($binop_sub88.7, _masked_model.py:428), Var($const92.8.4, _masked_model.py:428)])
2025-07-23 17:16:00,969 - DEBUG - on stmt: $96binary_subscr.10 = getitem(value=cluster_matrix, index=$94build_tuple.9, fn=<built-in function getitem>)
2025-07-23 17:16:00,969 - DEBUG - on stmt: $100call.11 = call $72load_global.2($96binary_subscr.10, func=$72load_global.2, args=[Var($96binary_subscr.10, _masked_model.py:428)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:00,974 - DEBUG - on stmt: $binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,974 - DEBUG - find_def var='pos' stmt=$binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,974 - DEBUG - find_def_from_top label 70
2025-07-23 17:16:00,974 - DEBUG - idom 46 from label 70
2025-07-23 17:16:00,974 - DEBUG - find_def_from_bottom label 46
2025-07-23 17:16:00,974 - DEBUG - find_def_from_top label 46
2025-07-23 17:16:00,974 - DEBUG - idom 42 from label 46
2025-07-23 17:16:00,974 - DEBUG - find_def_from_bottom label 42
2025-07-23 17:16:00,974 - DEBUG - replaced with: $binop_iadd108.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=pos.3, rhs=$100call.11, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:00,974 - DEBUG - on stmt: pos.2 = $binop_iadd108.12
2025-07-23 17:16:00,974 - DEBUG - on stmt: jump 114
2025-07-23 17:16:00,974 - DEBUG - ==== SSA block rewrite pass on 114
2025-07-23 17:16:00,974 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,974 - DEBUG - on stmt: $const120.4.3 = const(int, 1)
2025-07-23 17:16:00,974 - DEBUG - on stmt: $binop_add122.5 = i + $const120.4.3
2025-07-23 17:16:00,974 - DEBUG - on stmt: indptr[$binop_add122.5] = pos
2025-07-23 17:16:00,974 - DEBUG - find_def var='pos' stmt=indptr[$binop_add122.5] = pos
2025-07-23 17:16:00,974 - DEBUG - replaced with: indptr[$binop_add122.5] = pos.4
2025-07-23 17:16:00,974 - DEBUG - on stmt: $134binary_subscr.8 = getitem(value=indptr, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:00,974 - DEBUG - on stmt: indices_row_pos[i] = $134binary_subscr.8
2025-07-23 17:16:00,974 - DEBUG - on stmt: jump 42
2025-07-23 17:16:00,974 - DEBUG - ==== SSA block rewrite pass on 148
2025-07-23 17:16:00,974 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF3DD0>
2025-07-23 17:16:00,974 - DEBUG - on stmt: $const150.2 = const(NoneType, None)
2025-07-23 17:16:00,974 - DEBUG - on stmt: $150return_const.3 = cast(value=$const150.2)
2025-07-23 17:16:00,974 - DEBUG - on stmt: return $150return_const.3
2025-07-23 17:16:01,179 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=433)
           2	RESUME(arg=0, lineno=433)
           4	LOAD_FAST(arg=1, lineno=435)
           6	LOAD_FAST(arg=5, lineno=435)
           8	BINARY_SUBSCR(arg=None, lineno=435)
          12	STORE_FAST(arg=6, lineno=435)
          14	LOAD_FAST(arg=5, lineno=437)
          16	LOAD_FAST(arg=4, lineno=437)
          18	COMPARE_OP(arg=2, lineno=437)
          22	POP_JUMP_IF_FALSE(arg=6, lineno=437)
          24	LOAD_FAST(arg=5, lineno=438)
          26	LOAD_FAST(arg=3, lineno=438)
          28	LOAD_FAST(arg=6, lineno=438)
          30	STORE_SUBSCR(arg=None, lineno=438)
          34	RETURN_CONST(arg=0, lineno=439)
>         36	LOAD_GLOBAL(arg=1, lineno=441)
          46	LOAD_FAST(arg=0, lineno=441)
          48	LOAD_FAST(arg=5, lineno=441)
          50	LOAD_FAST(arg=4, lineno=441)
          52	BINARY_OP(arg=10, lineno=441)
          56	LOAD_CONST(arg=1, lineno=441)
          58	BUILD_TUPLE(arg=2, lineno=441)
          60	BINARY_SUBSCR(arg=None, lineno=441)
          64	CALL(arg=1, lineno=441)
          72	STORE_FAST(arg=7, lineno=441)
          74	LOAD_GLOBAL(arg=1, lineno=442)
          84	LOAD_FAST(arg=0, lineno=442)
          86	LOAD_FAST(arg=5, lineno=442)
          88	LOAD_FAST(arg=4, lineno=442)
          90	BINARY_OP(arg=10, lineno=442)
          94	LOAD_CONST(arg=2, lineno=442)
          96	BUILD_TUPLE(arg=2, lineno=442)
          98	BINARY_SUBSCR(arg=None, lineno=442)
         102	CALL(arg=1, lineno=442)
         110	STORE_FAST(arg=8, lineno=442)
         112	LOAD_FAST(arg=7, lineno=443)
         114	LOAD_FAST(arg=4, lineno=443)
         116	COMPARE_OP(arg=92, lineno=443)
         120	POP_JUMP_IF_FALSE(arg=19, lineno=443)
         122	LOAD_GLOBAL(arg=1, lineno=443)
         132	LOAD_FAST(arg=0, lineno=443)
         134	LOAD_FAST(arg=7, lineno=443)
         136	LOAD_FAST(arg=4, lineno=443)
         138	BINARY_OP(arg=10, lineno=443)
         142	LOAD_CONST(arg=3, lineno=443)
         144	BUILD_TUPLE(arg=2, lineno=443)
         146	BINARY_SUBSCR(arg=None, lineno=443)
         150	CALL(arg=1, lineno=443)
         158	JUMP_FORWARD(arg=1, lineno=443)
>        160	LOAD_CONST(arg=2, lineno=443)
>        162	STORE_FAST(arg=9, lineno=443)
         164	LOAD_FAST(arg=8, lineno=444)
         166	LOAD_FAST(arg=4, lineno=444)
         168	COMPARE_OP(arg=92, lineno=444)
         172	POP_JUMP_IF_FALSE(arg=19, lineno=444)
         174	LOAD_GLOBAL(arg=1, lineno=444)
         184	LOAD_FAST(arg=0, lineno=444)
         186	LOAD_FAST(arg=8, lineno=444)
         188	LOAD_FAST(arg=4, lineno=444)
         190	BINARY_OP(arg=10, lineno=444)
         194	LOAD_CONST(arg=3, lineno=444)
         196	BUILD_TUPLE(arg=2, lineno=444)
         198	BINARY_SUBSCR(arg=None, lineno=444)
         202	CALL(arg=1, lineno=444)
         210	JUMP_FORWARD(arg=1, lineno=444)
>        212	LOAD_CONST(arg=2, lineno=444)
>        214	STORE_FAST(arg=10, lineno=444)
         216	LOAD_FAST(arg=1, lineno=446)
         218	LOAD_FAST(arg=7, lineno=446)
         220	BINARY_SUBSCR(arg=None, lineno=446)
         224	STORE_FAST(arg=11, lineno=446)
         226	LOAD_FAST(arg=1, lineno=447)
         228	LOAD_FAST(arg=8, lineno=447)
         230	BINARY_SUBSCR(arg=None, lineno=447)
         234	STORE_FAST(arg=12, lineno=447)
         236	LOAD_GLOBAL(arg=3, lineno=449)
         246	LOAD_FAST(arg=0, lineno=449)
         248	LOAD_FAST(arg=1, lineno=449)
         250	LOAD_FAST(arg=2, lineno=449)
         252	LOAD_FAST(arg=3, lineno=449)
         254	LOAD_FAST(arg=4, lineno=449)
         256	LOAD_FAST(arg=7, lineno=449)
         258	CALL(arg=6, lineno=449)
         266	POP_TOP(arg=None, lineno=449)
         268	LOAD_FAST(arg=3, lineno=450)
         270	LOAD_FAST(arg=11, lineno=450)
         272	LOAD_FAST(arg=11, lineno=450)
         274	LOAD_FAST(arg=9, lineno=450)
         276	BINARY_OP(arg=0, lineno=450)
         280	BINARY_SLICE(arg=None, lineno=450)
         282	LOAD_FAST(arg=3, lineno=450)
         284	LOAD_FAST(arg=6, lineno=450)
         286	LOAD_FAST(arg=6, lineno=450)
         288	LOAD_FAST(arg=9, lineno=450)
         290	BINARY_OP(arg=0, lineno=450)
         294	STORE_SLICE(arg=None, lineno=450)
         296	LOAD_GLOBAL(arg=3, lineno=452)
         306	LOAD_FAST(arg=0, lineno=452)
         308	LOAD_FAST(arg=1, lineno=452)
         310	LOAD_FAST(arg=2, lineno=452)
         312	LOAD_FAST(arg=3, lineno=452)
         314	LOAD_FAST(arg=4, lineno=452)
         316	LOAD_FAST(arg=8, lineno=452)
         318	CALL(arg=6, lineno=452)
         326	POP_TOP(arg=None, lineno=452)
         328	LOAD_FAST(arg=3, lineno=453)
         330	LOAD_FAST(arg=12, lineno=453)
         332	LOAD_FAST(arg=12, lineno=453)
         334	LOAD_FAST(arg=10, lineno=453)
         336	BINARY_OP(arg=0, lineno=453)
         340	BINARY_SLICE(arg=None, lineno=453)
         342	LOAD_FAST(arg=3, lineno=453)
         344	LOAD_FAST(arg=6, lineno=453)
         346	LOAD_FAST(arg=9, lineno=453)
         348	BINARY_OP(arg=0, lineno=453)
         352	LOAD_FAST(arg=6, lineno=453)
         354	LOAD_FAST(arg=9, lineno=453)
         356	BINARY_OP(arg=0, lineno=453)
         360	LOAD_FAST(arg=10, lineno=453)
         362	BINARY_OP(arg=0, lineno=453)
         366	STORE_SLICE(arg=None, lineno=453)
         368	RETURN_CONST(arg=0, lineno=453)
2025-07-23 17:16:01,179 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:01,179 - DEBUG - stack: []
2025-07-23 17:16:01,179 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:01,179 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=433)
2025-07-23 17:16:01,179 - DEBUG - stack []
2025-07-23 17:16:01,179 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=433)
2025-07-23 17:16:01,179 - DEBUG - stack []
2025-07-23 17:16:01,179 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=435)
2025-07-23 17:16:01,185 - DEBUG - stack []
2025-07-23 17:16:01,185 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=5, lineno=435)
2025-07-23 17:16:01,185 - DEBUG - stack ['$indices_row_pos4.0']
2025-07-23 17:16:01,185 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-07-23 17:16:01,185 - DEBUG - stack ['$indices_row_pos4.0', '$ind6.1']
2025-07-23 17:16:01,186 - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=6, lineno=435)
2025-07-23 17:16:01,186 - DEBUG - stack ['$8binary_subscr.2']
2025-07-23 17:16:01,186 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=5, lineno=437)
2025-07-23 17:16:01,186 - DEBUG - stack []
2025-07-23 17:16:01,186 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=4, lineno=437)
2025-07-23 17:16:01,187 - DEBUG - stack ['$ind14.3']
2025-07-23 17:16:01,187 - DEBUG - dispatch pc=18, inst=COMPARE_OP(arg=2, lineno=437)
2025-07-23 17:16:01,187 - DEBUG - stack ['$ind14.3', '$M16.4']
2025-07-23 17:16:01,187 - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=6, lineno=437)
2025-07-23 17:16:01,187 - DEBUG - stack ['$18compare_op.5']
2025-07-23 17:16:01,188 - DEBUG - end state. edges=[Edge(pc=24, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:01,188 - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-07-23 17:16:01,188 - DEBUG - stack: []
2025-07-23 17:16:01,188 - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=0)
2025-07-23 17:16:01,188 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=438)
2025-07-23 17:16:01,188 - DEBUG - stack []
2025-07-23 17:16:01,189 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=438)
2025-07-23 17:16:01,189 - DEBUG - stack ['$ind24.0']
2025-07-23 17:16:01,189 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=438)
2025-07-23 17:16:01,189 - DEBUG - stack ['$ind24.0', '$indices26.1']
2025-07-23 17:16:01,189 - DEBUG - dispatch pc=30, inst=STORE_SUBSCR(arg=None, lineno=438)
2025-07-23 17:16:01,189 - DEBUG - stack ['$ind24.0', '$indices26.1', '$pos28.2']
2025-07-23 17:16:01,189 - DEBUG - dispatch pc=34, inst=RETURN_CONST(arg=0, lineno=439)
2025-07-23 17:16:01,189 - DEBUG - stack []
2025-07-23 17:16:01,189 - DEBUG - end state. edges=[]
2025-07-23 17:16:01,190 - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0)])
2025-07-23 17:16:01,190 - DEBUG - stack: []
2025-07-23 17:16:01,190 - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-07-23 17:16:01,190 - DEBUG - dispatch pc=36, inst=LOAD_GLOBAL(arg=1, lineno=441)
2025-07-23 17:16:01,190 - DEBUG - stack []
2025-07-23 17:16:01,190 - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=441)
2025-07-23 17:16:01,190 - DEBUG - stack ['$null$36.1', '$36load_global.0']
2025-07-23 17:16:01,191 - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=441)
2025-07-23 17:16:01,191 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2']
2025-07-23 17:16:01,191 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=4, lineno=441)
2025-07-23 17:16:01,191 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2', '$ind48.3']
2025-07-23 17:16:01,191 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=10, lineno=441)
2025-07-23 17:16:01,191 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2', '$ind48.3', '$M50.4']
2025-07-23 17:16:01,191 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=1, lineno=441)
2025-07-23 17:16:01,191 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2', '$binop_sub52.5']
2025-07-23 17:16:01,191 - DEBUG - dispatch pc=58, inst=BUILD_TUPLE(arg=2, lineno=441)
2025-07-23 17:16:01,191 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2', '$binop_sub52.5', '$const56.6.1']
2025-07-23 17:16:01,192 - DEBUG - dispatch pc=60, inst=BINARY_SUBSCR(arg=None, lineno=441)
2025-07-23 17:16:01,192 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$cluster_matrix46.2', '$58build_tuple.7']
2025-07-23 17:16:01,192 - DEBUG - dispatch pc=64, inst=CALL(arg=1, lineno=441)
2025-07-23 17:16:01,192 - DEBUG - stack ['$null$36.1', '$36load_global.0', '$60binary_subscr.8']
2025-07-23 17:16:01,192 - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=7, lineno=441)
2025-07-23 17:16:01,192 - DEBUG - stack ['$64call.9']
2025-07-23 17:16:01,192 - DEBUG - dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=442)
2025-07-23 17:16:01,192 - DEBUG - stack []
2025-07-23 17:16:01,192 - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=442)
2025-07-23 17:16:01,193 - DEBUG - stack ['$null$74.11', '$74load_global.10']
2025-07-23 17:16:01,193 - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=442)
2025-07-23 17:16:01,193 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12']
2025-07-23 17:16:01,193 - DEBUG - dispatch pc=88, inst=LOAD_FAST(arg=4, lineno=442)
2025-07-23 17:16:01,193 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12', '$ind86.13']
2025-07-23 17:16:01,193 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=442)
2025-07-23 17:16:01,193 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12', '$ind86.13', '$M88.14']
2025-07-23 17:16:01,193 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=442)
2025-07-23 17:16:01,194 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12', '$binop_sub90.15']
2025-07-23 17:16:01,194 - DEBUG - dispatch pc=96, inst=BUILD_TUPLE(arg=2, lineno=442)
2025-07-23 17:16:01,194 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12', '$binop_sub90.15', '$const94.16.2']
2025-07-23 17:16:01,194 - DEBUG - dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=442)
2025-07-23 17:16:01,194 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$cluster_matrix84.12', '$96build_tuple.17']
2025-07-23 17:16:01,194 - DEBUG - dispatch pc=102, inst=CALL(arg=1, lineno=442)
2025-07-23 17:16:01,194 - DEBUG - stack ['$null$74.11', '$74load_global.10', '$98binary_subscr.18']
2025-07-23 17:16:01,194 - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=8, lineno=442)
2025-07-23 17:16:01,194 - DEBUG - stack ['$102call.19']
2025-07-23 17:16:01,195 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=7, lineno=443)
2025-07-23 17:16:01,195 - DEBUG - stack []
2025-07-23 17:16:01,195 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=443)
2025-07-23 17:16:01,195 - DEBUG - stack ['$lind112.20']
2025-07-23 17:16:01,195 - DEBUG - dispatch pc=116, inst=COMPARE_OP(arg=92, lineno=443)
2025-07-23 17:16:01,195 - DEBUG - stack ['$lind112.20', '$M114.21']
2025-07-23 17:16:01,195 - DEBUG - dispatch pc=120, inst=POP_JUMP_IF_FALSE(arg=19, lineno=443)
2025-07-23 17:16:01,195 - DEBUG - stack ['$116compare_op.22']
2025-07-23 17:16:01,195 - DEBUG - end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=160, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:01,195 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=160 nstack_initial=0)])
2025-07-23 17:16:01,196 - DEBUG - stack: []
2025-07-23 17:16:01,196 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2025-07-23 17:16:01,196 - DEBUG - dispatch pc=122, inst=LOAD_GLOBAL(arg=1, lineno=443)
2025-07-23 17:16:01,196 - DEBUG - stack []
2025-07-23 17:16:01,196 - DEBUG - dispatch pc=132, inst=LOAD_FAST(arg=0, lineno=443)
2025-07-23 17:16:01,196 - DEBUG - stack ['$null$122.1', '$122load_global.0']
2025-07-23 17:16:01,196 - DEBUG - dispatch pc=134, inst=LOAD_FAST(arg=7, lineno=443)
2025-07-23 17:16:01,196 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2']
2025-07-23 17:16:01,196 - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=4, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2', '$lind134.3']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=138, inst=BINARY_OP(arg=10, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2', '$lind134.3', '$M136.4']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=3, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2', '$binop_sub138.5']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=144, inst=BUILD_TUPLE(arg=2, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2', '$binop_sub138.5', '$const142.6.3']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=146, inst=BINARY_SUBSCR(arg=None, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$cluster_matrix132.2', '$144build_tuple.7']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=150, inst=CALL(arg=1, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$null$122.1', '$122load_global.0', '$146binary_subscr.8']
2025-07-23 17:16:01,197 - DEBUG - dispatch pc=158, inst=JUMP_FORWARD(arg=1, lineno=443)
2025-07-23 17:16:01,197 - DEBUG - stack ['$150call.9']
2025-07-23 17:16:01,197 - DEBUG - end state. edges=[Edge(pc=162, stack=('$150call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:01,199 - DEBUG - pending: deque([State(pc_initial=160 nstack_initial=0), State(pc_initial=162 nstack_initial=1)])
2025-07-23 17:16:01,199 - DEBUG - stack: []
2025-07-23 17:16:01,199 - DEBUG - state.pc_initial: State(pc_initial=160 nstack_initial=0)
2025-07-23 17:16:01,199 - DEBUG - dispatch pc=160, inst=LOAD_CONST(arg=2, lineno=443)
2025-07-23 17:16:01,199 - DEBUG - stack []
2025-07-23 17:16:01,199 - DEBUG - end state. edges=[Edge(pc=162, stack=('$const160.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:01,199 - DEBUG - pending: deque([State(pc_initial=162 nstack_initial=1), State(pc_initial=162 nstack_initial=1)])
2025-07-23 17:16:01,199 - DEBUG - stack: ['$phi162.0']
2025-07-23 17:16:01,199 - DEBUG - state.pc_initial: State(pc_initial=162 nstack_initial=1)
2025-07-23 17:16:01,200 - DEBUG - dispatch pc=162, inst=STORE_FAST(arg=9, lineno=443)
2025-07-23 17:16:01,200 - DEBUG - stack ['$phi162.0']
2025-07-23 17:16:01,200 - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=8, lineno=444)
2025-07-23 17:16:01,200 - DEBUG - stack []
2025-07-23 17:16:01,200 - DEBUG - dispatch pc=166, inst=LOAD_FAST(arg=4, lineno=444)
2025-07-23 17:16:01,200 - DEBUG - stack ['$rind164.1']
2025-07-23 17:16:01,200 - DEBUG - dispatch pc=168, inst=COMPARE_OP(arg=92, lineno=444)
2025-07-23 17:16:01,200 - DEBUG - stack ['$rind164.1', '$M166.2']
2025-07-23 17:16:01,201 - DEBUG - dispatch pc=172, inst=POP_JUMP_IF_FALSE(arg=19, lineno=444)
2025-07-23 17:16:01,201 - DEBUG - stack ['$168compare_op.3']
2025-07-23 17:16:01,201 - DEBUG - end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:01,202 - DEBUG - pending: deque([State(pc_initial=162 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-23 17:16:01,202 - DEBUG - pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
2025-07-23 17:16:01,202 - DEBUG - stack: []
2025-07-23 17:16:01,202 - DEBUG - state.pc_initial: State(pc_initial=174 nstack_initial=0)
2025-07-23 17:16:01,202 - DEBUG - dispatch pc=174, inst=LOAD_GLOBAL(arg=1, lineno=444)
2025-07-23 17:16:01,202 - DEBUG - stack []
2025-07-23 17:16:01,202 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=0, lineno=444)
2025-07-23 17:16:01,203 - DEBUG - stack ['$null$174.1', '$174load_global.0']
2025-07-23 17:16:01,203 - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=8, lineno=444)
2025-07-23 17:16:01,203 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2']
2025-07-23 17:16:01,203 - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=4, lineno=444)
2025-07-23 17:16:01,203 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2', '$rind186.3']
2025-07-23 17:16:01,203 - DEBUG - dispatch pc=190, inst=BINARY_OP(arg=10, lineno=444)
2025-07-23 17:16:01,203 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2', '$rind186.3', '$M188.4']
2025-07-23 17:16:01,203 - DEBUG - dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=444)
2025-07-23 17:16:01,204 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2', '$binop_sub190.5']
2025-07-23 17:16:01,204 - DEBUG - dispatch pc=196, inst=BUILD_TUPLE(arg=2, lineno=444)
2025-07-23 17:16:01,204 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2', '$binop_sub190.5', '$const194.6.3']
2025-07-23 17:16:01,204 - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=444)
2025-07-23 17:16:01,204 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$cluster_matrix184.2', '$196build_tuple.7']
2025-07-23 17:16:01,204 - DEBUG - dispatch pc=202, inst=CALL(arg=1, lineno=444)
2025-07-23 17:16:01,204 - DEBUG - stack ['$null$174.1', '$174load_global.0', '$198binary_subscr.8']
2025-07-23 17:16:01,205 - DEBUG - dispatch pc=210, inst=JUMP_FORWARD(arg=1, lineno=444)
2025-07-23 17:16:01,205 - DEBUG - stack ['$202call.9']
2025-07-23 17:16:01,205 - DEBUG - end state. edges=[Edge(pc=214, stack=('$202call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:01,205 - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=214 nstack_initial=1)])
2025-07-23 17:16:01,205 - DEBUG - stack: []
2025-07-23 17:16:01,205 - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=0)
2025-07-23 17:16:01,205 - DEBUG - dispatch pc=212, inst=LOAD_CONST(arg=2, lineno=444)
2025-07-23 17:16:01,206 - DEBUG - stack []
2025-07-23 17:16:01,206 - DEBUG - end state. edges=[Edge(pc=214, stack=('$const212.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:01,206 - DEBUG - pending: deque([State(pc_initial=214 nstack_initial=1), State(pc_initial=214 nstack_initial=1)])
2025-07-23 17:16:01,206 - DEBUG - stack: ['$phi214.0']
2025-07-23 17:16:01,206 - DEBUG - state.pc_initial: State(pc_initial=214 nstack_initial=1)
2025-07-23 17:16:01,206 - DEBUG - dispatch pc=214, inst=STORE_FAST(arg=10, lineno=444)
2025-07-23 17:16:01,206 - DEBUG - stack ['$phi214.0']
2025-07-23 17:16:01,206 - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=1, lineno=446)
2025-07-23 17:16:01,207 - DEBUG - stack []
2025-07-23 17:16:01,207 - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=7, lineno=446)
2025-07-23 17:16:01,207 - DEBUG - stack ['$indices_row_pos216.1']
2025-07-23 17:16:01,207 - DEBUG - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=446)
2025-07-23 17:16:01,207 - DEBUG - stack ['$indices_row_pos216.1', '$lind218.2']
2025-07-23 17:16:01,207 - DEBUG - dispatch pc=224, inst=STORE_FAST(arg=11, lineno=446)
2025-07-23 17:16:01,207 - DEBUG - stack ['$220binary_subscr.3']
2025-07-23 17:16:01,207 - DEBUG - dispatch pc=226, inst=LOAD_FAST(arg=1, lineno=447)
2025-07-23 17:16:01,207 - DEBUG - stack []
2025-07-23 17:16:01,208 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=447)
2025-07-23 17:16:01,208 - DEBUG - stack ['$indices_row_pos226.4']
2025-07-23 17:16:01,208 - DEBUG - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=447)
2025-07-23 17:16:01,208 - DEBUG - stack ['$indices_row_pos226.4', '$rind228.5']
2025-07-23 17:16:01,208 - DEBUG - dispatch pc=234, inst=STORE_FAST(arg=12, lineno=447)
2025-07-23 17:16:01,208 - DEBUG - stack ['$230binary_subscr.6']
2025-07-23 17:16:01,208 - DEBUG - dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=449)
2025-07-23 17:16:01,208 - DEBUG - stack []
2025-07-23 17:16:01,208 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=0, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=250, inst=LOAD_FAST(arg=2, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9', '$indices_row_pos248.10']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=252, inst=LOAD_FAST(arg=3, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9', '$indices_row_pos248.10', '$indptr250.11']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=4, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9', '$indices_row_pos248.10', '$indptr250.11', '$indices252.12']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=449)
2025-07-23 17:16:01,209 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9', '$indices_row_pos248.10', '$indptr250.11', '$indices252.12', '$M254.13']
2025-07-23 17:16:01,209 - DEBUG - dispatch pc=258, inst=CALL(arg=6, lineno=449)
2025-07-23 17:16:01,210 - DEBUG - stack ['$null$236.8', '$236load_global.7', '$cluster_matrix246.9', '$indices_row_pos248.10', '$indptr250.11', '$indices252.12', '$M254.13', '$lind256.14']
2025-07-23 17:16:01,210 - DEBUG - dispatch pc=266, inst=POP_TOP(arg=None, lineno=449)
2025-07-23 17:16:01,210 - DEBUG - stack ['$258call.15']
2025-07-23 17:16:01,210 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=3, lineno=450)
2025-07-23 17:16:01,210 - DEBUG - stack []
2025-07-23 17:16:01,210 - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=11, lineno=450)
2025-07-23 17:16:01,210 - DEBUG - stack ['$indices268.16']
2025-07-23 17:16:01,211 - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=11, lineno=450)
2025-07-23 17:16:01,211 - DEBUG - stack ['$indices268.16', '$lpos270.17']
2025-07-23 17:16:01,211 - DEBUG - dispatch pc=274, inst=LOAD_FAST(arg=9, lineno=450)
2025-07-23 17:16:01,211 - DEBUG - stack ['$indices268.16', '$lpos270.17', '$lpos272.18']
2025-07-23 17:16:01,211 - DEBUG - dispatch pc=276, inst=BINARY_OP(arg=0, lineno=450)
2025-07-23 17:16:01,211 - DEBUG - stack ['$indices268.16', '$lpos270.17', '$lpos272.18', '$lind_size274.19']
2025-07-23 17:16:01,211 - DEBUG - dispatch pc=280, inst=BINARY_SLICE(arg=None, lineno=450)
2025-07-23 17:16:01,211 - DEBUG - stack ['$indices268.16', '$lpos270.17', '$binop_add276.20']
2025-07-23 17:16:01,212 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=3, lineno=450)
2025-07-23 17:16:01,212 - DEBUG - stack ['$280binary_slice.22']
2025-07-23 17:16:01,212 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=6, lineno=450)
2025-07-23 17:16:01,212 - DEBUG - stack ['$280binary_slice.22', '$indices282.24']
2025-07-23 17:16:01,212 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=6, lineno=450)
2025-07-23 17:16:01,212 - DEBUG - stack ['$280binary_slice.22', '$indices282.24', '$pos284.25']
2025-07-23 17:16:01,212 - DEBUG - dispatch pc=288, inst=LOAD_FAST(arg=9, lineno=450)
2025-07-23 17:16:01,212 - DEBUG - stack ['$280binary_slice.22', '$indices282.24', '$pos284.25', '$pos286.26']
2025-07-23 17:16:01,212 - DEBUG - dispatch pc=290, inst=BINARY_OP(arg=0, lineno=450)
2025-07-23 17:16:01,212 - DEBUG - stack ['$280binary_slice.22', '$indices282.24', '$pos284.25', '$pos286.26', '$lind_size288.27']
2025-07-23 17:16:01,213 - DEBUG - dispatch pc=294, inst=STORE_SLICE(arg=None, lineno=450)
2025-07-23 17:16:01,213 - DEBUG - stack ['$280binary_slice.22', '$indices282.24', '$pos284.25', '$binop_add290.28']
2025-07-23 17:16:01,213 - DEBUG - dispatch pc=296, inst=LOAD_GLOBAL(arg=3, lineno=452)
2025-07-23 17:16:01,213 - DEBUG - stack []
2025-07-23 17:16:01,213 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=0, lineno=452)
2025-07-23 17:16:01,213 - DEBUG - stack ['$null$296.32', '$296load_global.31']
2025-07-23 17:16:01,213 - DEBUG - dispatch pc=308, inst=LOAD_FAST(arg=1, lineno=452)
2025-07-23 17:16:01,213 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33']
2025-07-23 17:16:01,213 - DEBUG - dispatch pc=310, inst=LOAD_FAST(arg=2, lineno=452)
2025-07-23 17:16:01,214 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33', '$indices_row_pos308.34']
2025-07-23 17:16:01,214 - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=3, lineno=452)
2025-07-23 17:16:01,214 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33', '$indices_row_pos308.34', '$indptr310.35']
2025-07-23 17:16:01,214 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=4, lineno=452)
2025-07-23 17:16:01,214 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33', '$indices_row_pos308.34', '$indptr310.35', '$indices312.36']
2025-07-23 17:16:01,214 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=8, lineno=452)
2025-07-23 17:16:01,214 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33', '$indices_row_pos308.34', '$indptr310.35', '$indices312.36', '$M314.37']
2025-07-23 17:16:01,214 - DEBUG - dispatch pc=318, inst=CALL(arg=6, lineno=452)
2025-07-23 17:16:01,214 - DEBUG - stack ['$null$296.32', '$296load_global.31', '$cluster_matrix306.33', '$indices_row_pos308.34', '$indptr310.35', '$indices312.36', '$M314.37', '$rind316.38']
2025-07-23 17:16:01,215 - DEBUG - dispatch pc=326, inst=POP_TOP(arg=None, lineno=452)
2025-07-23 17:16:01,215 - DEBUG - stack ['$318call.39']
2025-07-23 17:16:01,215 - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=3, lineno=453)
2025-07-23 17:16:01,215 - DEBUG - stack []
2025-07-23 17:16:01,215 - DEBUG - dispatch pc=330, inst=LOAD_FAST(arg=12, lineno=453)
2025-07-23 17:16:01,215 - DEBUG - stack ['$indices328.40']
2025-07-23 17:16:01,215 - DEBUG - dispatch pc=332, inst=LOAD_FAST(arg=12, lineno=453)
2025-07-23 17:16:01,215 - DEBUG - stack ['$indices328.40', '$rpos330.41']
2025-07-23 17:16:01,215 - DEBUG - dispatch pc=334, inst=LOAD_FAST(arg=10, lineno=453)
2025-07-23 17:16:01,216 - DEBUG - stack ['$indices328.40', '$rpos330.41', '$rpos332.42']
2025-07-23 17:16:01,216 - DEBUG - dispatch pc=336, inst=BINARY_OP(arg=0, lineno=453)
2025-07-23 17:16:01,216 - DEBUG - stack ['$indices328.40', '$rpos330.41', '$rpos332.42', '$rind_size334.43']
2025-07-23 17:16:01,216 - DEBUG - dispatch pc=340, inst=BINARY_SLICE(arg=None, lineno=453)
2025-07-23 17:16:01,216 - DEBUG - stack ['$indices328.40', '$rpos330.41', '$binop_add336.44']
2025-07-23 17:16:01,216 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=3, lineno=453)
2025-07-23 17:16:01,216 - DEBUG - stack ['$340binary_slice.46']
2025-07-23 17:16:01,216 - DEBUG - dispatch pc=344, inst=LOAD_FAST(arg=6, lineno=453)
2025-07-23 17:16:01,216 - DEBUG - stack ['$340binary_slice.46', '$indices342.48']
2025-07-23 17:16:01,217 - DEBUG - dispatch pc=346, inst=LOAD_FAST(arg=9, lineno=453)
2025-07-23 17:16:01,217 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$pos344.49']
2025-07-23 17:16:01,218 - DEBUG - dispatch pc=348, inst=BINARY_OP(arg=0, lineno=453)
2025-07-23 17:16:01,218 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$pos344.49', '$lind_size346.50']
2025-07-23 17:16:01,218 - DEBUG - dispatch pc=352, inst=LOAD_FAST(arg=6, lineno=453)
2025-07-23 17:16:01,218 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51']
2025-07-23 17:16:01,218 - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=9, lineno=453)
2025-07-23 17:16:01,218 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51', '$pos352.52']
2025-07-23 17:16:01,218 - DEBUG - dispatch pc=356, inst=BINARY_OP(arg=0, lineno=453)
2025-07-23 17:16:01,219 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51', '$pos352.52', '$lind_size354.53']
2025-07-23 17:16:01,219 - DEBUG - dispatch pc=360, inst=LOAD_FAST(arg=10, lineno=453)
2025-07-23 17:16:01,219 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51', '$binop_add356.54']
2025-07-23 17:16:01,219 - DEBUG - dispatch pc=362, inst=BINARY_OP(arg=0, lineno=453)
2025-07-23 17:16:01,219 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51', '$binop_add356.54', '$rind_size360.55']
2025-07-23 17:16:01,219 - DEBUG - dispatch pc=366, inst=STORE_SLICE(arg=None, lineno=453)
2025-07-23 17:16:01,219 - DEBUG - stack ['$340binary_slice.46', '$indices342.48', '$binop_add348.51', '$binop_add362.56']
2025-07-23 17:16:01,219 - DEBUG - dispatch pc=368, inst=RETURN_CONST(arg=0, lineno=453)
2025-07-23 17:16:01,219 - DEBUG - stack []
2025-07-23 17:16:01,219 - DEBUG - end state. edges=[]
2025-07-23 17:16:01,219 - DEBUG - pending: deque([State(pc_initial=214 nstack_initial=1)])
2025-07-23 17:16:01,219 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:01,219 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=160 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=1): {'$phi162.0'},
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=1): {'$phi214.0'}})
2025-07-23 17:16:01,219 - DEBUG - defmap: {'$phi162.0': State(pc_initial=122 nstack_initial=0),
 '$phi214.0': State(pc_initial=212 nstack_initial=0)}
2025-07-23 17:16:01,219 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$150call.9',
                            State(pc_initial=122 nstack_initial=0)),
                           ('$const160.0.2',
                            State(pc_initial=160 nstack_initial=0))},
             '$phi214.0': {('$202call.9',
                            State(pc_initial=174 nstack_initial=0)),
                           ('$const212.0.2',
                            State(pc_initial=212 nstack_initial=0))}})
2025-07-23 17:16:01,219 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$150call.9',
                            State(pc_initial=122 nstack_initial=0)),
                           ('$const160.0.2',
                            State(pc_initial=160 nstack_initial=0))},
             '$phi214.0': {('$202call.9',
                            State(pc_initial=174 nstack_initial=0)),
                           ('$const212.0.2',
                            State(pc_initial=212 nstack_initial=0))}})
2025-07-23 17:16:01,219 - DEBUG - keep phismap: {'$phi162.0': {('$150call.9', State(pc_initial=122 nstack_initial=0)),
               ('$const160.0.2', State(pc_initial=160 nstack_initial=0))},
 '$phi214.0': {('$202call.9', State(pc_initial=174 nstack_initial=0)),
               ('$const212.0.2', State(pc_initial=212 nstack_initial=0))}}
2025-07-23 17:16:01,219 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=122 nstack_initial=0): {'$phi162.0': '$150call.9'},
             State(pc_initial=160 nstack_initial=0): {'$phi162.0': '$const160.0.2'},
             State(pc_initial=174 nstack_initial=0): {'$phi214.0': '$202call.9'},
             State(pc_initial=212 nstack_initial=0): {'$phi214.0': '$const212.0.2'}})
2025-07-23 17:16:01,219 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices_row_pos4.0'}), (6, {'res': '$ind6.1'}), (8, {'index': '$ind6.1', 'target': '$indices_row_pos4.0', 'res': '$8binary_subscr.2'}), (12, {'value': '$8binary_subscr.2'}), (14, {'res': '$ind14.3'}), (16, {'res': '$M16.4'}), (18, {'lhs': '$ind14.3', 'rhs': '$M16.4', 'res': '$18compare_op.5'}), (22, {'pred': '$18compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: (), 36: ()})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=24 nstack_initial=0):
AdaptBlockInfo(insts=((24, {'res': '$ind24.0'}), (26, {'res': '$indices26.1'}), (28, {'res': '$pos28.2'}), (30, {'target': '$indices26.1', 'index': '$pos28.2', 'value': '$ind24.0'}), (34, {'retval': '$const34.3', 'castval': '$34return_const.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 0, 'res': '$36load_global.0'}), (46, {'res': '$cluster_matrix46.2'}), (48, {'res': '$ind48.3'}), (50, {'res': '$M50.4'}), (52, {'op': '-', 'lhs': '$ind48.3', 'rhs': '$M50.4', 'res': '$binop_sub52.5'}), (56, {'res': '$const56.6.1'}), (58, {'items': ['$binop_sub52.5', '$const56.6.1'], 'res': '$58build_tuple.7'}), (60, {'index': '$58build_tuple.7', 'target': '$cluster_matrix46.2', 'res': '$60binary_subscr.8'}), (64, {'func': '$36load_global.0', 'args': ['$60binary_subscr.8'], 'kw_names': None, 'res': '$64call.9'}), (72, {'value': '$64call.9'}), (74, {'idx': 0, 'res': '$74load_global.10'}), (84, {'res': '$cluster_matrix84.12'}), (86, {'res': '$ind86.13'}), (88, {'res': '$M88.14'}), (90, {'op': '-', 'lhs': '$ind86.13', 'rhs': '$M88.14', 'res': '$binop_sub90.15'}), (94, {'res': '$const94.16.2'}), (96, {'items': ['$binop_sub90.15', '$const94.16.2'], 'res': '$96build_tuple.17'}), (98, {'index': '$96build_tuple.17', 'target': '$cluster_matrix84.12', 'res': '$98binary_subscr.18'}), (102, {'func': '$74load_global.10', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$102call.19'}), (110, {'value': '$102call.19'}), (112, {'res': '$lind112.20'}), (114, {'res': '$M114.21'}), (116, {'lhs': '$lind112.20', 'rhs': '$M114.21', 'res': '$116compare_op.22'}), (120, {'pred': '$116compare_op.22'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 160: ()})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 0, 'res': '$122load_global.0'}), (132, {'res': '$cluster_matrix132.2'}), (134, {'res': '$lind134.3'}), (136, {'res': '$M136.4'}), (138, {'op': '-', 'lhs': '$lind134.3', 'rhs': '$M136.4', 'res': '$binop_sub138.5'}), (142, {'res': '$const142.6.3'}), (144, {'items': ['$binop_sub138.5', '$const142.6.3'], 'res': '$144build_tuple.7'}), (146, {'index': '$144build_tuple.7', 'target': '$cluster_matrix132.2', 'res': '$146binary_subscr.8'}), (150, {'func': '$122load_global.0', 'args': ['$146binary_subscr.8'], 'kw_names': None, 'res': '$150call.9'}), (158, {})), outgoing_phis={'$phi162.0': '$150call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: ('$150call.9',)})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=160 nstack_initial=0):
AdaptBlockInfo(insts=((160, {'res': '$const160.0.2'}),), outgoing_phis={'$phi162.0': '$const160.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: ('$const160.0.2',)})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=162 nstack_initial=1):
AdaptBlockInfo(insts=((162, {'value': '$phi162.0'}), (164, {'res': '$rind164.1'}), (166, {'res': '$M166.2'}), (168, {'lhs': '$rind164.1', 'rhs': '$M166.2', 'res': '$168compare_op.3'}), (172, {'pred': '$168compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 212: ()})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'idx': 0, 'res': '$174load_global.0'}), (184, {'res': '$cluster_matrix184.2'}), (186, {'res': '$rind186.3'}), (188, {'res': '$M188.4'}), (190, {'op': '-', 'lhs': '$rind186.3', 'rhs': '$M188.4', 'res': '$binop_sub190.5'}), (194, {'res': '$const194.6.3'}), (196, {'items': ['$binop_sub190.5', '$const194.6.3'], 'res': '$196build_tuple.7'}), (198, {'index': '$196build_tuple.7', 'target': '$cluster_matrix184.2', 'res': '$198binary_subscr.8'}), (202, {'func': '$174load_global.0', 'args': ['$198binary_subscr.8'], 'kw_names': None, 'res': '$202call.9'}), (210, {})), outgoing_phis={'$phi214.0': '$202call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: ('$202call.9',)})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$const212.0.2'}),), outgoing_phis={'$phi214.0': '$const212.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={214: ('$const212.0.2',)})
2025-07-23 17:16:01,219 - DEBUG - block_infos State(pc_initial=214 nstack_initial=1):
AdaptBlockInfo(insts=((214, {'value': '$phi214.0'}), (216, {'res': '$indices_row_pos216.1'}), (218, {'res': '$lind218.2'}), (220, {'index': '$lind218.2', 'target': '$indices_row_pos216.1', 'res': '$220binary_subscr.3'}), (224, {'value': '$220binary_subscr.3'}), (226, {'res': '$indices_row_pos226.4'}), (228, {'res': '$rind228.5'}), (230, {'index': '$rind228.5', 'target': '$indices_row_pos226.4', 'res': '$230binary_subscr.6'}), (234, {'value': '$230binary_subscr.6'}), (236, {'idx': 1, 'res': '$236load_global.7'}), (246, {'res': '$cluster_matrix246.9'}), (248, {'res': '$indices_row_pos248.10'}), (250, {'res': '$indptr250.11'}), (252, {'res': '$indices252.12'}), (254, {'res': '$M254.13'}), (256, {'res': '$lind256.14'}), (258, {'func': '$236load_global.7', 'args': ['$cluster_matrix246.9', '$indices_row_pos248.10', '$indptr250.11', '$indices252.12', '$M254.13', '$lind256.14'], 'kw_names': None, 'res': '$258call.15'}), (268, {'res': '$indices268.16'}), (270, {'res': '$lpos270.17'}), (272, {'res': '$lpos272.18'}), (274, {'res': '$lind_size274.19'}), (276, {'op': '+', 'lhs': '$lpos272.18', 'rhs': '$lind_size274.19', 'res': '$binop_add276.20'}), (280, {'start': '$lpos270.17', 'end': '$binop_add276.20', 'container': '$indices268.16', 'res': '$280binary_slice.22', 'slicevar': '$280binary_slice.23', 'temp_res': '$280binary_slice.21'}), (282, {'res': '$indices282.24'}), (284, {'res': '$pos284.25'}), (286, {'res': '$pos286.26'}), (288, {'res': '$lind_size288.27'}), (290, {'op': '+', 'lhs': '$pos286.26', 'rhs': '$lind_size288.27', 'res': '$binop_add290.28'}), (294, {'start': '$pos284.25', 'end': '$binop_add290.28', 'container': '$indices282.24', 'value': '$280binary_slice.22', 'res': '$294store_slice.30', 'slicevar': '$294store_slice.29'}), (296, {'idx': 1, 'res': '$296load_global.31'}), (306, {'res': '$cluster_matrix306.33'}), (308, {'res': '$indices_row_pos308.34'}), (310, {'res': '$indptr310.35'}), (312, {'res': '$indices312.36'}), (314, {'res': '$M314.37'}), (316, {'res': '$rind316.38'}), (318, {'func': '$296load_global.31', 'args': ['$cluster_matrix306.33', '$indices_row_pos308.34', '$indptr310.35', '$indices312.36', '$M314.37', '$rind316.38'], 'kw_names': None, 'res': '$318call.39'}), (328, {'res': '$indices328.40'}), (330, {'res': '$rpos330.41'}), (332, {'res': '$rpos332.42'}), (334, {'res': '$rind_size334.43'}), (336, {'op': '+', 'lhs': '$rpos332.42', 'rhs': '$rind_size334.43', 'res': '$binop_add336.44'}), (340, {'start': '$rpos330.41', 'end': '$binop_add336.44', 'container': '$indices328.40', 'res': '$340binary_slice.46', 'slicevar': '$340binary_slice.47', 'temp_res': '$340binary_slice.45'}), (342, {'res': '$indices342.48'}), (344, {'res': '$pos344.49'}), (346, {'res': '$lind_size346.50'}), (348, {'op': '+', 'lhs': '$pos344.49', 'rhs': '$lind_size346.50', 'res': '$binop_add348.51'}), (352, {'res': '$pos352.52'}), (354, {'res': '$lind_size354.53'}), (356, {'op': '+', 'lhs': '$pos352.52', 'rhs': '$lind_size354.53', 'res': '$binop_add356.54'}), (360, {'res': '$rind_size360.55'}), (362, {'op': '+', 'lhs': '$binop_add356.54', 'rhs': '$rind_size360.55', 'res': '$binop_add362.56'}), (366, {'start': '$binop_add348.51', 'end': '$binop_add362.56', 'container': '$indices342.48', 'value': '$340binary_slice.46', 'res': '$366store_slice.58', 'slicevar': '$366store_slice.57'}), (368, {'retval': '$const368.59', 'castval': '$368return_const.60'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:01,219 - DEBUG - label 0:
    cluster_matrix = arg(0, name=cluster_matrix) ['cluster_matrix']
    indices_row_pos = arg(1, name=indices_row_pos) ['indices_row_pos']
    indptr = arg(2, name=indptr)             ['indptr']
    indices = arg(3, name=indices)           ['indices']
    M = arg(4, name=M)                       ['M']
    ind = arg(5, name=ind)                   ['ind']
    pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>) ['ind', 'indices_row_pos', 'pos']
    $18compare_op.5 = ind < M                ['$18compare_op.5', 'M', 'ind']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.5', '$22pred', 'bool22']
    branch $22pred, 24, 36                   ['$22pred']
label 24:
    indices[pos] = ind                       ['ind', 'indices', 'pos']
    $const34.3 = const(NoneType, None)       ['$const34.3']
    $34return_const.4 = cast(value=$const34.3) ['$34return_const.4', '$const34.3']
    return $34return_const.4                 ['$34return_const.4']
label 36:
    $36load_global.0 = global(int: <class 'int'>) ['$36load_global.0']
    $binop_sub52.5 = ind - M                 ['$binop_sub52.5', 'M', 'ind']
    $const56.6.1 = const(int, 0)             ['$const56.6.1']
    $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)]) ['$58build_tuple.7', '$binop_sub52.5', '$const56.6.1']
    $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>) ['$58build_tuple.7', '$60binary_subscr.8', 'cluster_matrix']
    lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$60binary_subscr.8', 'lind']
    $74load_global.10 = global(int: <class 'int'>) ['$74load_global.10']
    $binop_sub90.15 = ind - M                ['$binop_sub90.15', 'M', 'ind']
    $const94.16.2 = const(int, 1)            ['$const94.16.2']
    $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)]) ['$96build_tuple.17', '$binop_sub90.15', '$const94.16.2']
    $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>) ['$96build_tuple.17', '$98binary_subscr.18', 'cluster_matrix']
    rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.10', '$98binary_subscr.18', 'rind']
    $116compare_op.22 = lind >= M            ['$116compare_op.22', 'M', 'lind']
    bool120 = global(bool: <class 'bool'>)   ['bool120']
    $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None) ['$116compare_op.22', '$120pred', 'bool120']
    branch $120pred, 122, 160                ['$120pred']
label 122:
    $122load_global.0 = global(int: <class 'int'>) ['$122load_global.0']
    $binop_sub138.5 = lind - M               ['$binop_sub138.5', 'M', 'lind']
    $const142.6.3 = const(int, 3)            ['$const142.6.3']
    $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)]) ['$144build_tuple.7', '$binop_sub138.5', '$const142.6.3']
    $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>) ['$144build_tuple.7', '$146binary_subscr.8', 'cluster_matrix']
    $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$146binary_subscr.8', '$150call.9']
    $phi162.0 = $150call.9                   ['$150call.9', '$phi162.0']
    jump 162                                 []
label 160:
    $const160.0.2 = const(int, 1)            ['$const160.0.2']
    $phi162.0 = $const160.0.2                ['$const160.0.2', '$phi162.0']
    jump 162                                 []
label 162:
    lind_size = $phi162.0                    ['$phi162.0', 'lind_size']
    $168compare_op.3 = rind >= M             ['$168compare_op.3', 'M', 'rind']
    bool172 = global(bool: <class 'bool'>)   ['bool172']
    $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.3', '$172pred', 'bool172']
    branch $172pred, 174, 212                ['$172pred']
label 174:
    $174load_global.0 = global(int: <class 'int'>) ['$174load_global.0']
    $binop_sub190.5 = rind - M               ['$binop_sub190.5', 'M', 'rind']
    $const194.6.3 = const(int, 3)            ['$const194.6.3']
    $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)]) ['$196build_tuple.7', '$binop_sub190.5', '$const194.6.3']
    $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>) ['$196build_tuple.7', '$198binary_subscr.8', 'cluster_matrix']
    $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None) ['$174load_global.0', '$198binary_subscr.8', '$202call.9']
    $phi214.0 = $202call.9                   ['$202call.9', '$phi214.0']
    jump 214                                 []
label 212:
    $const212.0.2 = const(int, 1)            ['$const212.0.2']
    $phi214.0 = $const212.0.2                ['$const212.0.2', '$phi214.0']
    jump 214                                 []
label 214:
    rind_size = $phi214.0                    ['$phi214.0', 'rind_size']
    lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>) ['indices_row_pos', 'lind', 'lpos']
    rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>) ['indices_row_pos', 'rind', 'rpos']
    $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)) ['$236load_global.7']
    $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None) ['$236load_global.7', '$258call.15', 'M', 'cluster_matrix', 'indices', 'indices_row_pos', 'indptr', 'lind']
    $binop_add276.20 = lpos + lind_size      ['$binop_add276.20', 'lind_size', 'lpos']
    $280binary_slice.23 = global(slice: <class 'slice'>) ['$280binary_slice.23']
    $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None) ['$280binary_slice.21', '$280binary_slice.23', '$binop_add276.20', 'lpos']
    $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>) ['$280binary_slice.21', '$280binary_slice.22', 'indices']
    $binop_add290.28 = pos + lind_size       ['$binop_add290.28', 'lind_size', 'pos']
    $294store_slice.29 = global(slice: <class 'slice'>) ['$294store_slice.29']
    $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None) ['$294store_slice.29', '$294store_slice.30', '$binop_add290.28', 'pos']
    indices[$294store_slice.30] = $280binary_slice.22 ['$280binary_slice.22', '$294store_slice.30', 'indices']
    $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)) ['$296load_global.31']
    $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None) ['$296load_global.31', '$318call.39', 'M', 'cluster_matrix', 'indices', 'indices_row_pos', 'indptr', 'rind']
    $binop_add336.44 = rpos + rind_size      ['$binop_add336.44', 'rind_size', 'rpos']
    $340binary_slice.47 = global(slice: <class 'slice'>) ['$340binary_slice.47']
    $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None) ['$340binary_slice.45', '$340binary_slice.47', '$binop_add336.44', 'rpos']
    $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>) ['$340binary_slice.45', '$340binary_slice.46', 'indices']
    $binop_add348.51 = pos + lind_size       ['$binop_add348.51', 'lind_size', 'pos']
    $binop_add356.54 = pos + lind_size       ['$binop_add356.54', 'lind_size', 'pos']
    $binop_add362.56 = $binop_add356.54 + rind_size ['$binop_add356.54', '$binop_add362.56', 'rind_size']
    $366store_slice.57 = global(slice: <class 'slice'>) ['$366store_slice.57']
    $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None) ['$366store_slice.57', '$366store_slice.58', '$binop_add348.51', '$binop_add362.56']
    indices[$366store_slice.58] = $340binary_slice.46 ['$340binary_slice.46', '$366store_slice.58', 'indices']
    $const368.59 = const(NoneType, None)     ['$const368.59']
    $368return_const.60 = cast(value=$const368.59) ['$368return_const.60', '$const368.59']
    return $368return_const.60               ['$368return_const.60']

2025-07-23 17:16:01,289 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:01,289 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,289 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:01,289 - DEBUG - on stmt: indices_row_pos = arg(1, name=indices_row_pos)
2025-07-23 17:16:01,289 - DEBUG - on stmt: indptr = arg(2, name=indptr)
2025-07-23 17:16:01,289 - DEBUG - on stmt: indices = arg(3, name=indices)
2025-07-23 17:16:01,289 - DEBUG - on stmt: M = arg(4, name=M)
2025-07-23 17:16:01,289 - DEBUG - on stmt: ind = arg(5, name=ind)
2025-07-23 17:16:01,289 - DEBUG - on stmt: pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $18compare_op.5 = ind < M
2025-07-23 17:16:01,289 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,289 - DEBUG - on stmt: branch $22pred, 24, 36
2025-07-23 17:16:01,289 - DEBUG - ==== SSA block analysis pass on 24
2025-07-23 17:16:01,289 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,289 - DEBUG - on stmt: indices[pos] = ind
2025-07-23 17:16:01,289 - DEBUG - on stmt: $const34.3 = const(NoneType, None)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $34return_const.4 = cast(value=$const34.3)
2025-07-23 17:16:01,289 - DEBUG - on stmt: return $34return_const.4
2025-07-23 17:16:01,289 - DEBUG - ==== SSA block analysis pass on 36
2025-07-23 17:16:01,289 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,289 - DEBUG - on stmt: $36load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $binop_sub52.5 = ind - M
2025-07-23 17:16:01,289 - DEBUG - on stmt: $const56.6.1 = const(int, 0)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)])
2025-07-23 17:16:01,289 - DEBUG - on stmt: $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $74load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $binop_sub90.15 = ind - M
2025-07-23 17:16:01,289 - DEBUG - on stmt: $const94.16.2 = const(int, 1)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)])
2025-07-23 17:16:01,289 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $116compare_op.22 = lind >= M
2025-07-23 17:16:01,289 - DEBUG - on stmt: bool120 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,289 - DEBUG - on stmt: branch $120pred, 122, 160
2025-07-23 17:16:01,289 - DEBUG - ==== SSA block analysis pass on 122
2025-07-23 17:16:01,289 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,289 - DEBUG - on stmt: $122load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $binop_sub138.5 = lind - M
2025-07-23 17:16:01,289 - DEBUG - on stmt: $const142.6.3 = const(int, 3)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)])
2025-07-23 17:16:01,289 - DEBUG - on stmt: $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,289 - DEBUG - on stmt: $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,297 - DEBUG - on stmt: $phi162.0 = $150call.9
2025-07-23 17:16:01,297 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,297 - DEBUG - ==== SSA block analysis pass on 160
2025-07-23 17:16:01,297 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,297 - DEBUG - on stmt: $const160.0.2 = const(int, 1)
2025-07-23 17:16:01,297 - DEBUG - on stmt: $phi162.0 = $const160.0.2
2025-07-23 17:16:01,297 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,297 - DEBUG - ==== SSA block analysis pass on 162
2025-07-23 17:16:01,297 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,297 - DEBUG - on stmt: lind_size = $phi162.0
2025-07-23 17:16:01,297 - DEBUG - on stmt: $168compare_op.3 = rind >= M
2025-07-23 17:16:01,297 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,297 - DEBUG - on stmt: $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: branch $172pred, 174, 212
2025-07-23 17:16:01,299 - DEBUG - ==== SSA block analysis pass on 174
2025-07-23 17:16:01,299 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,299 - DEBUG - on stmt: $174load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_sub190.5 = rind - M
2025-07-23 17:16:01,299 - DEBUG - on stmt: $const194.6.3 = const(int, 3)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)])
2025-07-23 17:16:01,299 - DEBUG - on stmt: $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $phi214.0 = $202call.9
2025-07-23 17:16:01,299 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,299 - DEBUG - ==== SSA block analysis pass on 212
2025-07-23 17:16:01,299 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,299 - DEBUG - on stmt: $const212.0.2 = const(int, 1)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $phi214.0 = $const212.0.2
2025-07-23 17:16:01,299 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,299 - DEBUG - ==== SSA block analysis pass on 214
2025-07-23 17:16:01,299 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E7FF39E0>
2025-07-23 17:16:01,299 - DEBUG - on stmt: rind_size = $phi214.0
2025-07-23 17:16:01,299 - DEBUG - on stmt: lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,299 - DEBUG - on stmt: $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add276.20 = lpos + lind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $280binary_slice.23 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add290.28 = pos + lind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $294store_slice.29 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: indices[$294store_slice.30] = $280binary_slice.22
2025-07-23 17:16:01,299 - DEBUG - on stmt: $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,299 - DEBUG - on stmt: $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add336.44 = rpos + rind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $340binary_slice.47 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add348.51 = pos + lind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add356.54 = pos + lind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $binop_add362.56 = $binop_add356.54 + rind_size
2025-07-23 17:16:01,299 - DEBUG - on stmt: $366store_slice.57 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: indices[$366store_slice.58] = $340binary_slice.46
2025-07-23 17:16:01,299 - DEBUG - on stmt: $const368.59 = const(NoneType, None)
2025-07-23 17:16:01,299 - DEBUG - on stmt: $368return_const.60 = cast(value=$const368.59)
2025-07-23 17:16:01,299 - DEBUG - on stmt: return $368return_const.60
2025-07-23 17:16:01,299 - DEBUG - defs defaultdict(<class 'list'>,
            {'$116compare_op.22': [(<numba.core.ir.Assign object at 0x000001F6E7F79220>,
                                    36)],
             '$120pred': [(<numba.core.ir.Assign object at 0x000001F6E7F79490>,
                           36)],
             '$122load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E7F78530>,
                                    122)],
             '$144build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E7F799D0>,
                                    122)],
             '$146binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E7F79B50>,
                                      122)],
             '$150call.9': [(<numba.core.ir.Assign object at 0x000001F6E7F79CD0>,
                             122)],
             '$168compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E7F7A3F0>,
                                   162)],
             '$172pred': [(<numba.core.ir.Assign object at 0x000001F6E7F7A660>,
                           162)],
             '$174load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E7F7A7E0>,
                                    174)],
             '$18compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6E7F8EFF0>,
                                  0)],
             '$196build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E7F7AEA0>,
                                    174)],
             '$198binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E7F7B020>,
                                      174)],
             '$202call.9': [(<numba.core.ir.Assign object at 0x000001F6E7F7B1A0>,
                             174)],
             '$22pred': [(<numba.core.ir.Assign object at 0x000001F6E7F8F290>,
                          0)],
             '$236load_global.7': [(<numba.core.ir.Assign object at 0x000001F6E7F7B830>,
                                    214)],
             '$258call.15': [(<numba.core.ir.Assign object at 0x000001F6E7F7BF50>,
                              214)],
             '$280binary_slice.21': [(<numba.core.ir.Assign object at 0x000001F6E801C6E0>,
                                      214)],
             '$280binary_slice.22': [(<numba.core.ir.Assign object at 0x000001F6E801C800>,
                                      214)],
             '$280binary_slice.23': [(<numba.core.ir.Assign object at 0x000001F6E801C5C0>,
                                      214)],
             '$294store_slice.29': [(<numba.core.ir.Assign object at 0x000001F6E801CE30>,
                                     214)],
             '$294store_slice.30': [(<numba.core.ir.Assign object at 0x000001F6E801CF50>,
                                     214)],
             '$296load_global.31': [(<numba.core.ir.Assign object at 0x000001F6E801D0D0>,
                                     214)],
             '$318call.39': [(<numba.core.ir.Assign object at 0x000001F6E801D820>,
                              214)],
             '$340binary_slice.45': [(<numba.core.ir.Assign object at 0x000001F6E801DF70>,
                                      214)],
             '$340binary_slice.46': [(<numba.core.ir.Assign object at 0x000001F6E801E090>,
                                      214)],
             '$340binary_slice.47': [(<numba.core.ir.Assign object at 0x000001F6E801DE50>,
                                      214)],
             '$34return_const.4': [(<numba.core.ir.Assign object at 0x000001F6E7F8F740>,
                                    24)],
             '$366store_slice.57': [(<numba.core.ir.Assign object at 0x000001F6E801EB40>,
                                     214)],
             '$366store_slice.58': [(<numba.core.ir.Assign object at 0x000001F6E801EC60>,
                                     214)],
             '$368return_const.60': [(<numba.core.ir.Assign object at 0x000001F6E801EF00>,
                                      214)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E7F8F830>,
                                   36)],
             '$58build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E7F8FEF0>,
                                   36)],
             '$60binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E7F780B0>,
                                     36)],
             '$74load_global.10': [(<numba.core.ir.Assign object at 0x000001F6E7F78440>,
                                    36)],
             '$96build_tuple.17': [(<numba.core.ir.Assign object at 0x000001F6E7F78B00>,
                                    36)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x000001F6E7F78C80>,
                                      36)],
             '$binop_add276.20': [(<numba.core.ir.Assign object at 0x000001F6E801C4A0>,
                                   214)],
             '$binop_add290.28': [(<numba.core.ir.Assign object at 0x000001F6E801CD40>,
                                   214)],
             '$binop_add336.44': [(<numba.core.ir.Assign object at 0x000001F6E801DD30>,
                                   214)],
             '$binop_add348.51': [(<numba.core.ir.Assign object at 0x000001F6E801E4E0>,
                                   214)],
             '$binop_add356.54': [(<numba.core.ir.Assign object at 0x000001F6E801E7E0>,
                                   214)],
             '$binop_add362.56': [(<numba.core.ir.Assign object at 0x000001F6E801EA20>,
                                   214)],
             '$binop_sub138.5': [(<numba.core.ir.Assign object at 0x000001F6E7F79760>,
                                  122)],
             '$binop_sub190.5': [(<numba.core.ir.Assign object at 0x000001F6E7F7AC30>,
                                  174)],
             '$binop_sub52.5': [(<numba.core.ir.Assign object at 0x000001F6E7F8FC80>,
                                 36)],
             '$binop_sub90.15': [(<numba.core.ir.Assign object at 0x000001F6E7F78890>,
                                  36)],
             '$const142.6.3': [(<numba.core.ir.Assign object at 0x000001F6E7F79880>,
                                122)],
             '$const160.0.2': [(<numba.core.ir.Assign object at 0x000001F6E7F79E80>,
                                160)],
             '$const194.6.3': [(<numba.core.ir.Assign object at 0x000001F6E7F7AD50>,
                                174)],
             '$const212.0.2': [(<numba.core.ir.Assign object at 0x000001F6E7F7B350>,
                                212)],
             '$const34.3': [(<numba.core.ir.Assign object at 0x000001F6E7F8F620>,
                             24)],
             '$const368.59': [(<numba.core.ir.Assign object at 0x000001F6E801EDE0>,
                               214)],
             '$const56.6.1': [(<numba.core.ir.Assign object at 0x000001F6E7F8FDA0>,
                               36)],
             '$const94.16.2': [(<numba.core.ir.Assign object at 0x000001F6E7F789B0>,
                                36)],
             '$phi162.0': [(<numba.core.ir.Assign object at 0x000001F6E7F78EC0>,
                            122),
                           (<numba.core.ir.Assign object at 0x000001F6E7F8FA40>,
                            160)],
             '$phi214.0': [(<numba.core.ir.Assign object at 0x000001F6E7F7A9C0>,
                            174),
                           (<numba.core.ir.Assign object at 0x000001F6E7F7A2A0>,
                            212)],
             'M': [(<numba.core.ir.Assign object at 0x000001F6E7F8E720>, 0)],
             'bool120': [(<numba.core.ir.Assign object at 0x000001F6E7F79370>,
                          36)],
             'bool172': [(<numba.core.ir.Assign object at 0x000001F6E7F7A540>,
                          162)],
             'bool22': [(<numba.core.ir.Assign object at 0x000001F6E7F8F140>,
                         0)],
             'cluster_matrix': [(<numba.core.ir.Assign object at 0x000001F6E80066C0>,
                                 0)],
             'ind': [(<numba.core.ir.Assign object at 0x000001F6E7F8E840>, 0)],
             'indices': [(<numba.core.ir.Assign object at 0x000001F6E7F8E600>,
                          0)],
             'indices_row_pos': [(<numba.core.ir.Assign object at 0x000001F6E7F8E360>,
                                  0)],
             'indptr': [(<numba.core.ir.Assign object at 0x000001F6E7F8E4E0>,
                         0)],
             'lind': [(<numba.core.ir.Assign object at 0x000001F6E7F78230>,
                       36)],
             'lind_size': [(<numba.core.ir.Assign object at 0x000001F6E7F7A090>,
                            162)],
             'lpos': [(<numba.core.ir.Assign object at 0x000001F6E7FF3CB0>,
                       214)],
             'pos': [(<numba.core.ir.Assign object at 0x000001F6E7F8EBD0>, 0)],
             'rind': [(<numba.core.ir.Assign object at 0x000001F6E7F78E00>,
                       36)],
             'rind_size': [(<numba.core.ir.Assign object at 0x000001F6E7FF2540>,
                            214)],
             'rpos': [(<numba.core.ir.Assign object at 0x000001F6E7F7B620>,
                       214)]})
2025-07-23 17:16:01,299 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E7FE2A20>
2025-07-23 17:16:01,299 - DEBUG - Fix SSA violator on var $phi162.0
2025-07-23 17:16:01,299 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:01,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,309 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:01,309 - DEBUG - on stmt: indices_row_pos = arg(1, name=indices_row_pos)
2025-07-23 17:16:01,309 - DEBUG - on stmt: indptr = arg(2, name=indptr)
2025-07-23 17:16:01,309 - DEBUG - on stmt: indices = arg(3, name=indices)
2025-07-23 17:16:01,309 - DEBUG - on stmt: M = arg(4, name=M)
2025-07-23 17:16:01,309 - DEBUG - on stmt: ind = arg(5, name=ind)
2025-07-23 17:16:01,309 - DEBUG - on stmt: pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>)
2025-07-23 17:16:01,309 - DEBUG - on stmt: $18compare_op.5 = ind < M
2025-07-23 17:16:01,309 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,309 - DEBUG - on stmt: $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,309 - DEBUG - on stmt: branch $22pred, 24, 36
2025-07-23 17:16:01,309 - DEBUG - ==== SSA block rewrite pass on 24
2025-07-23 17:16:01,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,309 - DEBUG - on stmt: indices[pos] = ind
2025-07-23 17:16:01,309 - DEBUG - on stmt: $const34.3 = const(NoneType, None)
2025-07-23 17:16:01,309 - DEBUG - on stmt: $34return_const.4 = cast(value=$const34.3)
2025-07-23 17:16:01,309 - DEBUG - on stmt: return $34return_const.4
2025-07-23 17:16:01,309 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:16:01,309 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,309 - DEBUG - on stmt: $36load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,309 - DEBUG - on stmt: $binop_sub52.5 = ind - M
2025-07-23 17:16:01,309 - DEBUG - on stmt: $const56.6.1 = const(int, 0)
2025-07-23 17:16:01,309 - DEBUG - on stmt: $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)])
2025-07-23 17:16:01,309 - DEBUG - on stmt: $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,309 - DEBUG - on stmt: lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $74load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $binop_sub90.15 = ind - M
2025-07-23 17:16:01,312 - DEBUG - on stmt: $const94.16.2 = const(int, 1)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)])
2025-07-23 17:16:01,312 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $116compare_op.22 = lind >= M
2025-07-23 17:16:01,312 - DEBUG - on stmt: bool120 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: branch $120pred, 122, 160
2025-07-23 17:16:01,312 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:01,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,312 - DEBUG - on stmt: $122load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $binop_sub138.5 = lind - M
2025-07-23 17:16:01,312 - DEBUG - on stmt: $const142.6.3 = const(int, 3)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)])
2025-07-23 17:16:01,312 - DEBUG - on stmt: $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $phi162.0 = $150call.9
2025-07-23 17:16:01,312 - DEBUG - first assign: $phi162.0
2025-07-23 17:16:01,312 - DEBUG - replaced with: $phi162.0 = $150call.9
2025-07-23 17:16:01,312 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,312 - DEBUG - ==== SSA block rewrite pass on 160
2025-07-23 17:16:01,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,312 - DEBUG - on stmt: $const160.0.2 = const(int, 1)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $phi162.0 = $const160.0.2
2025-07-23 17:16:01,312 - DEBUG - replaced with: $phi162.0.1 = $const160.0.2
2025-07-23 17:16:01,312 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,312 - DEBUG - ==== SSA block rewrite pass on 162
2025-07-23 17:16:01,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,312 - DEBUG - on stmt: lind_size = $phi162.0
2025-07-23 17:16:01,312 - DEBUG - on stmt: $168compare_op.3 = rind >= M
2025-07-23 17:16:01,312 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: branch $172pred, 174, 212
2025-07-23 17:16:01,312 - DEBUG - ==== SSA block rewrite pass on 174
2025-07-23 17:16:01,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,312 - DEBUG - on stmt: $174load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $binop_sub190.5 = rind - M
2025-07-23 17:16:01,312 - DEBUG - on stmt: $const194.6.3 = const(int, 3)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)])
2025-07-23 17:16:01,312 - DEBUG - on stmt: $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $phi214.0 = $202call.9
2025-07-23 17:16:01,312 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,312 - DEBUG - ==== SSA block rewrite pass on 212
2025-07-23 17:16:01,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,312 - DEBUG - on stmt: $const212.0.2 = const(int, 1)
2025-07-23 17:16:01,312 - DEBUG - on stmt: $phi214.0 = $const212.0.2
2025-07-23 17:16:01,312 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,319 - DEBUG - ==== SSA block rewrite pass on 214
2025-07-23 17:16:01,319 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,319 - DEBUG - on stmt: rind_size = $phi214.0
2025-07-23 17:16:01,319 - DEBUG - on stmt: lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,319 - DEBUG - on stmt: $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add276.20 = lpos + lind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $280binary_slice.23 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add290.28 = pos + lind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $294store_slice.29 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: indices[$294store_slice.30] = $280binary_slice.22
2025-07-23 17:16:01,319 - DEBUG - on stmt: $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,319 - DEBUG - on stmt: $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add336.44 = rpos + rind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $340binary_slice.47 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add348.51 = pos + lind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add356.54 = pos + lind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_add362.56 = $binop_add356.54 + rind_size
2025-07-23 17:16:01,319 - DEBUG - on stmt: $366store_slice.57 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: indices[$366store_slice.58] = $340binary_slice.46
2025-07-23 17:16:01,319 - DEBUG - on stmt: $const368.59 = const(NoneType, None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $368return_const.60 = cast(value=$const368.59)
2025-07-23 17:16:01,319 - DEBUG - on stmt: return $368return_const.60
2025-07-23 17:16:01,319 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {122: [<numba.core.ir.Assign object at 0x000001F6E7FE32C0>],
             160: [<numba.core.ir.Assign object at 0x000001F6E7FE1910>]})
2025-07-23 17:16:01,319 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:01,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,319 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:01,319 - DEBUG - on stmt: indices_row_pos = arg(1, name=indices_row_pos)
2025-07-23 17:16:01,319 - DEBUG - on stmt: indptr = arg(2, name=indptr)
2025-07-23 17:16:01,319 - DEBUG - on stmt: indices = arg(3, name=indices)
2025-07-23 17:16:01,319 - DEBUG - on stmt: M = arg(4, name=M)
2025-07-23 17:16:01,319 - DEBUG - on stmt: ind = arg(5, name=ind)
2025-07-23 17:16:01,319 - DEBUG - on stmt: pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $18compare_op.5 = ind < M
2025-07-23 17:16:01,319 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: branch $22pred, 24, 36
2025-07-23 17:16:01,319 - DEBUG - ==== SSA block rewrite pass on 24
2025-07-23 17:16:01,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,319 - DEBUG - on stmt: indices[pos] = ind
2025-07-23 17:16:01,319 - DEBUG - on stmt: $const34.3 = const(NoneType, None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $34return_const.4 = cast(value=$const34.3)
2025-07-23 17:16:01,319 - DEBUG - on stmt: return $34return_const.4
2025-07-23 17:16:01,319 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:16:01,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,319 - DEBUG - on stmt: $36load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_sub52.5 = ind - M
2025-07-23 17:16:01,319 - DEBUG - on stmt: $const56.6.1 = const(int, 0)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)])
2025-07-23 17:16:01,319 - DEBUG - on stmt: $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $74load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $binop_sub90.15 = ind - M
2025-07-23 17:16:01,319 - DEBUG - on stmt: $const94.16.2 = const(int, 1)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)])
2025-07-23 17:16:01,319 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:01,319 - DEBUG - on stmt: rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,319 - DEBUG - on stmt: $116compare_op.22 = lind >= M
2025-07-23 17:16:01,328 - DEBUG - on stmt: bool120 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,328 - DEBUG - on stmt: $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,328 - DEBUG - on stmt: branch $120pred, 122, 160
2025-07-23 17:16:01,328 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: $122load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_sub138.5 = lind - M
2025-07-23 17:16:01,329 - DEBUG - on stmt: $const142.6.3 = const(int, 3)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)])
2025-07-23 17:16:01,329 - DEBUG - on stmt: $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $phi162.0 = $150call.9
2025-07-23 17:16:01,329 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,329 - DEBUG - ==== SSA block rewrite pass on 160
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: $const160.0.2 = const(int, 1)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $phi162.0.1 = $const160.0.2
2025-07-23 17:16:01,329 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,329 - DEBUG - ==== SSA block rewrite pass on 162
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: lind_size = $phi162.0
2025-07-23 17:16:01,329 - DEBUG - find_def var='$phi162.0' stmt=lind_size = $phi162.0
2025-07-23 17:16:01,329 - DEBUG - find_def_from_top label 162
2025-07-23 17:16:01,329 - DEBUG - insert phi node $phi162.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 162
2025-07-23 17:16:01,329 - DEBUG - find_def_from_bottom label 160
2025-07-23 17:16:01,329 - DEBUG - incoming_def $phi162.0.1 = $const160.0.2
2025-07-23 17:16:01,329 - DEBUG - find_def_from_bottom label 122
2025-07-23 17:16:01,329 - DEBUG - incoming_def $phi162.0 = $150call.9
2025-07-23 17:16:01,329 - DEBUG - replaced with: lind_size = $phi162.0.2
2025-07-23 17:16:01,329 - DEBUG - on stmt: $168compare_op.3 = rind >= M
2025-07-23 17:16:01,329 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: branch $172pred, 174, 212
2025-07-23 17:16:01,329 - DEBUG - ==== SSA block rewrite pass on 174
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: $174load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_sub190.5 = rind - M
2025-07-23 17:16:01,329 - DEBUG - on stmt: $const194.6.3 = const(int, 3)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)])
2025-07-23 17:16:01,329 - DEBUG - on stmt: $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $phi214.0 = $202call.9
2025-07-23 17:16:01,329 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,329 - DEBUG - ==== SSA block rewrite pass on 212
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: $const212.0.2 = const(int, 1)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $phi214.0 = $const212.0.2
2025-07-23 17:16:01,329 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,329 - DEBUG - ==== SSA block rewrite pass on 214
2025-07-23 17:16:01,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FE3E90>
2025-07-23 17:16:01,329 - DEBUG - on stmt: rind_size = $phi214.0
2025-07-23 17:16:01,329 - DEBUG - on stmt: lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,329 - DEBUG - on stmt: $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add276.20 = lpos + lind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $280binary_slice.23 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add290.28 = pos + lind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $294store_slice.29 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: indices[$294store_slice.30] = $280binary_slice.22
2025-07-23 17:16:01,329 - DEBUG - on stmt: $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,329 - DEBUG - on stmt: $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add336.44 = rpos + rind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $340binary_slice.47 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add348.51 = pos + lind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add356.54 = pos + lind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $binop_add362.56 = $binop_add356.54 + rind_size
2025-07-23 17:16:01,329 - DEBUG - on stmt: $366store_slice.57 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: indices[$366store_slice.58] = $340binary_slice.46
2025-07-23 17:16:01,329 - DEBUG - on stmt: $const368.59 = const(NoneType, None)
2025-07-23 17:16:01,329 - DEBUG - on stmt: $368return_const.60 = cast(value=$const368.59)
2025-07-23 17:16:01,329 - DEBUG - on stmt: return $368return_const.60
2025-07-23 17:16:01,339 - DEBUG - Fix SSA violator on var $phi214.0
2025-07-23 17:16:01,339 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:01,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,339 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:01,339 - DEBUG - on stmt: indices_row_pos = arg(1, name=indices_row_pos)
2025-07-23 17:16:01,339 - DEBUG - on stmt: indptr = arg(2, name=indptr)
2025-07-23 17:16:01,339 - DEBUG - on stmt: indices = arg(3, name=indices)
2025-07-23 17:16:01,339 - DEBUG - on stmt: M = arg(4, name=M)
2025-07-23 17:16:01,339 - DEBUG - on stmt: ind = arg(5, name=ind)
2025-07-23 17:16:01,339 - DEBUG - on stmt: pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $18compare_op.5 = ind < M
2025-07-23 17:16:01,339 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,339 - DEBUG - on stmt: branch $22pred, 24, 36
2025-07-23 17:16:01,339 - DEBUG - ==== SSA block rewrite pass on 24
2025-07-23 17:16:01,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,339 - DEBUG - on stmt: indices[pos] = ind
2025-07-23 17:16:01,339 - DEBUG - on stmt: $const34.3 = const(NoneType, None)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $34return_const.4 = cast(value=$const34.3)
2025-07-23 17:16:01,339 - DEBUG - on stmt: return $34return_const.4
2025-07-23 17:16:01,339 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:16:01,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,339 - DEBUG - on stmt: $36load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $binop_sub52.5 = ind - M
2025-07-23 17:16:01,339 - DEBUG - on stmt: $const56.6.1 = const(int, 0)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)])
2025-07-23 17:16:01,339 - DEBUG - on stmt: $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $74load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $binop_sub90.15 = ind - M
2025-07-23 17:16:01,339 - DEBUG - on stmt: $const94.16.2 = const(int, 1)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)])
2025-07-23 17:16:01,339 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $116compare_op.22 = lind >= M
2025-07-23 17:16:01,339 - DEBUG - on stmt: bool120 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,339 - DEBUG - on stmt: branch $120pred, 122, 160
2025-07-23 17:16:01,339 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:01,339 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,339 - DEBUG - on stmt: $122load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,339 - DEBUG - on stmt: $binop_sub138.5 = lind - M
2025-07-23 17:16:01,344 - DEBUG - on stmt: $const142.6.3 = const(int, 3)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)])
2025-07-23 17:16:01,344 - DEBUG - on stmt: $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $phi162.0 = $150call.9
2025-07-23 17:16:01,344 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,344 - DEBUG - ==== SSA block rewrite pass on 160
2025-07-23 17:16:01,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,344 - DEBUG - on stmt: $const160.0.2 = const(int, 1)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $phi162.0.1 = $const160.0.2
2025-07-23 17:16:01,344 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,344 - DEBUG - ==== SSA block rewrite pass on 162
2025-07-23 17:16:01,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,344 - DEBUG - on stmt: $phi162.0.2 = phi(incoming_values=[Var($phi162.0.1, _masked_model.py:443), Var($phi162.0, _masked_model.py:443)], incoming_blocks=[160, 122])
2025-07-23 17:16:01,344 - DEBUG - on stmt: lind_size = $phi162.0.2
2025-07-23 17:16:01,344 - DEBUG - on stmt: $168compare_op.3 = rind >= M
2025-07-23 17:16:01,344 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,344 - DEBUG - on stmt: branch $172pred, 174, 212
2025-07-23 17:16:01,344 - DEBUG - ==== SSA block rewrite pass on 174
2025-07-23 17:16:01,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,344 - DEBUG - on stmt: $174load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $binop_sub190.5 = rind - M
2025-07-23 17:16:01,344 - DEBUG - on stmt: $const194.6.3 = const(int, 3)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)])
2025-07-23 17:16:01,344 - DEBUG - on stmt: $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $phi214.0 = $202call.9
2025-07-23 17:16:01,344 - DEBUG - first assign: $phi214.0
2025-07-23 17:16:01,344 - DEBUG - replaced with: $phi214.0 = $202call.9
2025-07-23 17:16:01,344 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,344 - DEBUG - ==== SSA block rewrite pass on 212
2025-07-23 17:16:01,344 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,344 - DEBUG - on stmt: $const212.0.2 = const(int, 1)
2025-07-23 17:16:01,344 - DEBUG - on stmt: $phi214.0 = $const212.0.2
2025-07-23 17:16:01,344 - DEBUG - replaced with: $phi214.0.1 = $const212.0.2
2025-07-23 17:16:01,344 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,349 - DEBUG - ==== SSA block rewrite pass on 214
2025-07-23 17:16:01,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E7F7BB00>
2025-07-23 17:16:01,349 - DEBUG - on stmt: rind_size = $phi214.0
2025-07-23 17:16:01,349 - DEBUG - on stmt: lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,349 - DEBUG - on stmt: $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add276.20 = lpos + lind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $280binary_slice.23 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add290.28 = pos + lind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $294store_slice.29 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: indices[$294store_slice.30] = $280binary_slice.22
2025-07-23 17:16:01,349 - DEBUG - on stmt: $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,349 - DEBUG - on stmt: $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add336.44 = rpos + rind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $340binary_slice.47 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add348.51 = pos + lind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add356.54 = pos + lind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $binop_add362.56 = $binop_add356.54 + rind_size
2025-07-23 17:16:01,349 - DEBUG - on stmt: $366store_slice.57 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: indices[$366store_slice.58] = $340binary_slice.46
2025-07-23 17:16:01,349 - DEBUG - on stmt: $const368.59 = const(NoneType, None)
2025-07-23 17:16:01,349 - DEBUG - on stmt: $368return_const.60 = cast(value=$const368.59)
2025-07-23 17:16:01,349 - DEBUG - on stmt: return $368return_const.60
2025-07-23 17:16:01,349 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x000001F6E7FE2690>],
             212: [<numba.core.ir.Assign object at 0x000001F6E801D1C0>]})
2025-07-23 17:16:01,354 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:01,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,354 - DEBUG - on stmt: cluster_matrix = arg(0, name=cluster_matrix)
2025-07-23 17:16:01,354 - DEBUG - on stmt: indices_row_pos = arg(1, name=indices_row_pos)
2025-07-23 17:16:01,354 - DEBUG - on stmt: indptr = arg(2, name=indptr)
2025-07-23 17:16:01,354 - DEBUG - on stmt: indices = arg(3, name=indices)
2025-07-23 17:16:01,354 - DEBUG - on stmt: M = arg(4, name=M)
2025-07-23 17:16:01,354 - DEBUG - on stmt: ind = arg(5, name=ind)
2025-07-23 17:16:01,354 - DEBUG - on stmt: pos = getitem(value=indices_row_pos, index=ind, fn=<built-in function getitem>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $18compare_op.5 = ind < M
2025-07-23 17:16:01,354 - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $22pred = call bool22($18compare_op.5, func=bool22, args=(Var($18compare_op.5, _masked_model.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,354 - DEBUG - on stmt: branch $22pred, 24, 36
2025-07-23 17:16:01,354 - DEBUG - ==== SSA block rewrite pass on 24
2025-07-23 17:16:01,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,354 - DEBUG - on stmt: indices[pos] = ind
2025-07-23 17:16:01,354 - DEBUG - on stmt: $const34.3 = const(NoneType, None)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $34return_const.4 = cast(value=$const34.3)
2025-07-23 17:16:01,354 - DEBUG - on stmt: return $34return_const.4
2025-07-23 17:16:01,354 - DEBUG - ==== SSA block rewrite pass on 36
2025-07-23 17:16:01,354 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,354 - DEBUG - on stmt: $36load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $binop_sub52.5 = ind - M
2025-07-23 17:16:01,354 - DEBUG - on stmt: $const56.6.1 = const(int, 0)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $58build_tuple.7 = build_tuple(items=[Var($binop_sub52.5, _masked_model.py:441), Var($const56.6.1, _masked_model.py:441)])
2025-07-23 17:16:01,354 - DEBUG - on stmt: $60binary_subscr.8 = getitem(value=cluster_matrix, index=$58build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: lind = call $36load_global.0($60binary_subscr.8, func=$36load_global.0, args=[Var($60binary_subscr.8, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $74load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $binop_sub90.15 = ind - M
2025-07-23 17:16:01,354 - DEBUG - on stmt: $const94.16.2 = const(int, 1)
2025-07-23 17:16:01,354 - DEBUG - on stmt: $96build_tuple.17 = build_tuple(items=[Var($binop_sub90.15, _masked_model.py:442), Var($const94.16.2, _masked_model.py:442)])
2025-07-23 17:16:01,354 - DEBUG - on stmt: $98binary_subscr.18 = getitem(value=cluster_matrix, index=$96build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:01,354 - DEBUG - on stmt: rind = call $74load_global.10($98binary_subscr.18, func=$74load_global.10, args=[Var($98binary_subscr.18, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,359 - DEBUG - on stmt: $116compare_op.22 = lind >= M
2025-07-23 17:16:01,359 - DEBUG - on stmt: bool120 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,359 - DEBUG - on stmt: $120pred = call bool120($116compare_op.22, func=bool120, args=(Var($116compare_op.22, _masked_model.py:443),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,359 - DEBUG - on stmt: branch $120pred, 122, 160
2025-07-23 17:16:01,359 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:01,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,359 - DEBUG - on stmt: $122load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,359 - DEBUG - on stmt: $binop_sub138.5 = lind - M
2025-07-23 17:16:01,360 - DEBUG - on stmt: $const142.6.3 = const(int, 3)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $144build_tuple.7 = build_tuple(items=[Var($binop_sub138.5, _masked_model.py:443), Var($const142.6.3, _masked_model.py:443)])
2025-07-23 17:16:01,360 - DEBUG - on stmt: $146binary_subscr.8 = getitem(value=cluster_matrix, index=$144build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $150call.9 = call $122load_global.0($146binary_subscr.8, func=$122load_global.0, args=[Var($146binary_subscr.8, _masked_model.py:443)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $phi162.0 = $150call.9
2025-07-23 17:16:01,360 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,360 - DEBUG - ==== SSA block rewrite pass on 160
2025-07-23 17:16:01,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,360 - DEBUG - on stmt: $const160.0.2 = const(int, 1)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $phi162.0.1 = $const160.0.2
2025-07-23 17:16:01,360 - DEBUG - on stmt: jump 162
2025-07-23 17:16:01,360 - DEBUG - ==== SSA block rewrite pass on 162
2025-07-23 17:16:01,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,360 - DEBUG - on stmt: $phi162.0.2 = phi(incoming_values=[Var($phi162.0.1, _masked_model.py:443), Var($phi162.0, _masked_model.py:443)], incoming_blocks=[160, 122])
2025-07-23 17:16:01,360 - DEBUG - on stmt: lind_size = $phi162.0.2
2025-07-23 17:16:01,360 - DEBUG - on stmt: $168compare_op.3 = rind >= M
2025-07-23 17:16:01,360 - DEBUG - on stmt: bool172 = global(bool: <class 'bool'>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $172pred = call bool172($168compare_op.3, func=bool172, args=(Var($168compare_op.3, _masked_model.py:444),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: branch $172pred, 174, 212
2025-07-23 17:16:01,360 - DEBUG - ==== SSA block rewrite pass on 174
2025-07-23 17:16:01,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,360 - DEBUG - on stmt: $174load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $binop_sub190.5 = rind - M
2025-07-23 17:16:01,360 - DEBUG - on stmt: $const194.6.3 = const(int, 3)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $196build_tuple.7 = build_tuple(items=[Var($binop_sub190.5, _masked_model.py:444), Var($const194.6.3, _masked_model.py:444)])
2025-07-23 17:16:01,360 - DEBUG - on stmt: $198binary_subscr.8 = getitem(value=cluster_matrix, index=$196build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $202call.9 = call $174load_global.0($198binary_subscr.8, func=$174load_global.0, args=[Var($198binary_subscr.8, _masked_model.py:444)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $phi214.0 = $202call.9
2025-07-23 17:16:01,360 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,360 - DEBUG - ==== SSA block rewrite pass on 212
2025-07-23 17:16:01,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,360 - DEBUG - on stmt: $const212.0.2 = const(int, 1)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $phi214.0.1 = $const212.0.2
2025-07-23 17:16:01,360 - DEBUG - on stmt: jump 214
2025-07-23 17:16:01,360 - DEBUG - ==== SSA block rewrite pass on 214
2025-07-23 17:16:01,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E7FF0620>
2025-07-23 17:16:01,360 - DEBUG - on stmt: rind_size = $phi214.0
2025-07-23 17:16:01,360 - DEBUG - find_def var='$phi214.0' stmt=rind_size = $phi214.0
2025-07-23 17:16:01,360 - DEBUG - find_def_from_top label 214
2025-07-23 17:16:01,360 - DEBUG - insert phi node $phi214.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 214
2025-07-23 17:16:01,360 - DEBUG - find_def_from_bottom label 212
2025-07-23 17:16:01,360 - DEBUG - incoming_def $phi214.0.1 = $const212.0.2
2025-07-23 17:16:01,360 - DEBUG - find_def_from_bottom label 174
2025-07-23 17:16:01,360 - DEBUG - incoming_def $phi214.0 = $202call.9
2025-07-23 17:16:01,360 - DEBUG - replaced with: rind_size = $phi214.0.2
2025-07-23 17:16:01,360 - DEBUG - on stmt: lpos = getitem(value=indices_row_pos, index=lind, fn=<built-in function getitem>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: rpos = getitem(value=indices_row_pos, index=rind, fn=<built-in function getitem>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $236load_global.7 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,360 - DEBUG - on stmt: $258call.15 = call $236load_global.7(cluster_matrix, indices_row_pos, indptr, indices, M, lind, func=$236load_global.7, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(lind, _masked_model.py:441)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $binop_add276.20 = lpos + lind_size
2025-07-23 17:16:01,360 - DEBUG - on stmt: $280binary_slice.23 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $280binary_slice.21 = call $280binary_slice.23(lpos, $binop_add276.20, func=$280binary_slice.23, args=(Var(lpos, _masked_model.py:446), Var($binop_add276.20, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $280binary_slice.22 = getitem(value=indices, index=$280binary_slice.21, fn=<built-in function getitem>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $binop_add290.28 = pos + lind_size
2025-07-23 17:16:01,360 - DEBUG - on stmt: $294store_slice.29 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,360 - DEBUG - on stmt: $294store_slice.30 = call $294store_slice.29(pos, $binop_add290.28, func=$294store_slice.29, args=(Var(pos, _masked_model.py:435), Var($binop_add290.28, _masked_model.py:450)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,360 - DEBUG - on stmt: indices[$294store_slice.30] = $280binary_slice.22
2025-07-23 17:16:01,369 - DEBUG - on stmt: $296load_global.31 = global(_rec_fill_masks: CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))
2025-07-23 17:16:01,369 - DEBUG - on stmt: $318call.39 = call $296load_global.31(cluster_matrix, indices_row_pos, indptr, indices, M, rind, func=$296load_global.31, args=[Var(cluster_matrix, _masked_model.py:433), Var(indices_row_pos, _masked_model.py:433), Var(indptr, _masked_model.py:433), Var(indices, _masked_model.py:433), Var(M, _masked_model.py:433), Var(rind, _masked_model.py:442)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $binop_add336.44 = rpos + rind_size
2025-07-23 17:16:01,369 - DEBUG - on stmt: $340binary_slice.47 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $340binary_slice.45 = call $340binary_slice.47(rpos, $binop_add336.44, func=$340binary_slice.47, args=(Var(rpos, _masked_model.py:447), Var($binop_add336.44, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $340binary_slice.46 = getitem(value=indices, index=$340binary_slice.45, fn=<built-in function getitem>)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $binop_add348.51 = pos + lind_size
2025-07-23 17:16:01,369 - DEBUG - on stmt: $binop_add356.54 = pos + lind_size
2025-07-23 17:16:01,369 - DEBUG - on stmt: $binop_add362.56 = $binop_add356.54 + rind_size
2025-07-23 17:16:01,369 - DEBUG - on stmt: $366store_slice.57 = global(slice: <class 'slice'>)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $366store_slice.58 = call $366store_slice.57($binop_add348.51, $binop_add362.56, func=$366store_slice.57, args=(Var($binop_add348.51, _masked_model.py:453), Var($binop_add362.56, _masked_model.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:01,369 - DEBUG - on stmt: indices[$366store_slice.58] = $340binary_slice.46
2025-07-23 17:16:01,369 - DEBUG - on stmt: $const368.59 = const(NoneType, None)
2025-07-23 17:16:01,369 - DEBUG - on stmt: $368return_const.60 = cast(value=$const368.59)
2025-07-23 17:16:01,369 - DEBUG - on stmt: return $368return_const.60
2025-07-23 17:16:01,412 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,424 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,440 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,449 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,484 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,489 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,509 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,512 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,551 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,557 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,573 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,579 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,605 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,612 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:01,629 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (449)
[0m
2025-07-23 17:16:01,635 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) with parameters (array(float64, 2d, C), array(int64, 1d, C), array(int64, 1d, C), array(int64, 1d, C), int64, int64)
No type info available for recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function _rec_fill_masks at 0x000001F6C9BBA660>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\utils\_masked_model.py (452)
[0m
2025-07-23 17:16:02,419 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:03,594 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:16:03,621 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:05,855 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:05,857 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:08,072 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:08,144 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:16:10,409 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:10,479 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:12,699 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:12,704 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:16:15,105 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:15,107 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:17,309 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:17,313 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>፦ 300 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:19,879 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:19,879 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:22,442 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:22,445 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 '<mask> <mask> <mask>፦ 300 <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:24,897 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:24,902 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:27,427 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:27,431 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:16:29,678 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:29,678 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:31,844 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:31,847 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask>ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:16:34,164 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:34,169 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask>100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:16:36,438 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:36,438 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስ <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ን <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:16:38,628 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:38,638 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስ <mask>ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:16:40,973 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:16:40,978 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=719)
           2	RESUME(arg=0, lineno=719)
           4	LOAD_FAST(arg=0, lineno=721)
           6	LOAD_FAST(arg=2, lineno=721)
           8	COMPARE_OP(arg=2, lineno=721)
          12	POP_JUMP_IF_FALSE(arg=14, lineno=721)
          14	LOAD_FAST(arg=3, lineno=722)
          16	LOAD_FAST(arg=0, lineno=722)
          18	COPY(arg=2, lineno=722)
          20	COPY(arg=2, lineno=722)
          22	BINARY_SUBSCR(arg=None, lineno=722)
          26	LOAD_FAST(arg=1, lineno=722)
          28	BINARY_OP(arg=13, lineno=722)
          32	SWAP(arg=3, lineno=722)
          34	SWAP(arg=2, lineno=722)
          36	STORE_SUBSCR(arg=None, lineno=722)
          40	RETURN_CONST(arg=0, lineno=723)
>         42	LOAD_GLOBAL(arg=1, lineno=724)
          52	LOAD_FAST(arg=4, lineno=724)
          54	LOAD_FAST(arg=0, lineno=724)
          56	LOAD_FAST(arg=2, lineno=724)
          58	BINARY_OP(arg=10, lineno=724)
          62	LOAD_CONST(arg=1, lineno=724)
          64	BUILD_TUPLE(arg=2, lineno=724)
          66	BINARY_SUBSCR(arg=None, lineno=724)
          70	CALL(arg=1, lineno=724)
          78	STORE_FAST(arg=5, lineno=724)
          80	LOAD_GLOBAL(arg=1, lineno=725)
          90	LOAD_FAST(arg=4, lineno=725)
          92	LOAD_FAST(arg=0, lineno=725)
          94	LOAD_FAST(arg=2, lineno=725)
          96	BINARY_OP(arg=10, lineno=725)
         100	LOAD_CONST(arg=2, lineno=725)
         102	BUILD_TUPLE(arg=2, lineno=725)
         104	BINARY_SUBSCR(arg=None, lineno=725)
         108	CALL(arg=1, lineno=725)
         116	STORE_FAST(arg=6, lineno=725)
         118	LOAD_GLOBAL(arg=1, lineno=726)
         128	LOAD_FAST(arg=4, lineno=726)
         130	LOAD_FAST(arg=0, lineno=726)
         132	LOAD_FAST(arg=2, lineno=726)
         134	BINARY_OP(arg=10, lineno=726)
         138	LOAD_CONST(arg=3, lineno=726)
         140	BUILD_TUPLE(arg=2, lineno=726)
         142	BINARY_SUBSCR(arg=None, lineno=726)
         146	CALL(arg=1, lineno=726)
         154	STORE_FAST(arg=7, lineno=726)
         156	LOAD_FAST(arg=5, lineno=727)
         158	LOAD_FAST(arg=2, lineno=727)
         160	COMPARE_OP(arg=92, lineno=727)
         164	POP_JUMP_IF_FALSE(arg=19, lineno=727)
         166	LOAD_GLOBAL(arg=1, lineno=727)
         176	LOAD_FAST(arg=4, lineno=727)
         178	LOAD_FAST(arg=5, lineno=727)
         180	LOAD_FAST(arg=2, lineno=727)
         182	BINARY_OP(arg=10, lineno=727)
         186	LOAD_CONST(arg=3, lineno=727)
         188	BUILD_TUPLE(arg=2, lineno=727)
         190	BINARY_SUBSCR(arg=None, lineno=727)
         194	CALL(arg=1, lineno=727)
         202	JUMP_FORWARD(arg=1, lineno=727)
>        204	LOAD_CONST(arg=2, lineno=727)
>        206	STORE_FAST(arg=8, lineno=727)
         208	LOAD_FAST(arg=6, lineno=728)
         210	LOAD_FAST(arg=2, lineno=728)
         212	COMPARE_OP(arg=92, lineno=728)
         216	POP_JUMP_IF_FALSE(arg=19, lineno=728)
         218	LOAD_GLOBAL(arg=1, lineno=728)
         228	LOAD_FAST(arg=4, lineno=728)
         230	LOAD_FAST(arg=6, lineno=728)
         232	LOAD_FAST(arg=2, lineno=728)
         234	BINARY_OP(arg=10, lineno=728)
         238	LOAD_CONST(arg=3, lineno=728)
         240	BUILD_TUPLE(arg=2, lineno=728)
         242	BINARY_SUBSCR(arg=None, lineno=728)
         246	CALL(arg=1, lineno=728)
         254	JUMP_FORWARD(arg=1, lineno=728)
>        256	LOAD_CONST(arg=2, lineno=728)
>        258	STORE_FAST(arg=9, lineno=728)
         260	LOAD_FAST(arg=8, lineno=729)
         262	LOAD_FAST(arg=9, lineno=729)
         264	BINARY_OP(arg=0, lineno=729)
         268	LOAD_FAST(arg=7, lineno=729)
         270	COMPARE_OP(arg=40, lineno=729)
         274	POP_JUMP_IF_TRUE(arg=2, lineno=729)
         276	LOAD_ASSERTION_ERROR(arg=None, lineno=729)
         278	RAISE_VARARGS(arg=1, lineno=729)
>        280	LOAD_FAST(arg=3, lineno=730)
         282	LOAD_FAST(arg=0, lineno=730)
         284	COPY(arg=2, lineno=730)
         286	COPY(arg=2, lineno=730)
         288	BINARY_SUBSCR(arg=None, lineno=730)
         292	LOAD_FAST(arg=1, lineno=730)
         294	BINARY_OP(arg=13, lineno=730)
         298	SWAP(arg=3, lineno=730)
         300	SWAP(arg=2, lineno=730)
         302	STORE_SUBSCR(arg=None, lineno=730)
         306	LOAD_GLOBAL(arg=3, lineno=731)
         316	LOAD_FAST(arg=5, lineno=731)
         318	LOAD_FAST(arg=3, lineno=731)
         320	LOAD_FAST(arg=0, lineno=731)
         322	BINARY_SUBSCR(arg=None, lineno=731)
         326	LOAD_FAST(arg=8, lineno=731)
         328	BINARY_OP(arg=5, lineno=731)
         332	LOAD_FAST(arg=7, lineno=731)
         334	BINARY_OP(arg=11, lineno=731)
         338	LOAD_FAST(arg=2, lineno=731)
         340	LOAD_FAST(arg=3, lineno=731)
         342	LOAD_FAST(arg=4, lineno=731)
         344	CALL(arg=5, lineno=731)
         352	POP_TOP(arg=None, lineno=731)
         354	LOAD_GLOBAL(arg=3, lineno=732)
         364	LOAD_FAST(arg=6, lineno=732)
         366	LOAD_FAST(arg=3, lineno=732)
         368	LOAD_FAST(arg=0, lineno=732)
         370	BINARY_SUBSCR(arg=None, lineno=732)
         374	LOAD_FAST(arg=9, lineno=732)
         376	BINARY_OP(arg=5, lineno=732)
         380	LOAD_FAST(arg=7, lineno=732)
         382	BINARY_OP(arg=11, lineno=732)
         386	LOAD_FAST(arg=2, lineno=732)
         388	LOAD_FAST(arg=3, lineno=732)
         390	LOAD_FAST(arg=4, lineno=732)
         392	CALL(arg=5, lineno=732)
         400	POP_TOP(arg=None, lineno=732)
         402	RETURN_CONST(arg=0, lineno=732)
2025-07-23 17:16:40,978 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:40,978 - DEBUG - stack: []
2025-07-23 17:16:40,978 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=719)
2025-07-23 17:16:40,978 - DEBUG - stack []
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=719)
2025-07-23 17:16:40,978 - DEBUG - stack []
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=721)
2025-07-23 17:16:40,978 - DEBUG - stack []
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=721)
2025-07-23 17:16:40,978 - DEBUG - stack ['$i4.0']
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=721)
2025-07-23 17:16:40,978 - DEBUG - stack ['$i4.0', '$M6.1']
2025-07-23 17:16:40,978 - DEBUG - dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=14, lineno=721)
2025-07-23 17:16:40,978 - DEBUG - stack ['$8compare_op.2']
2025-07-23 17:16:40,978 - DEBUG - end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:40,978 - DEBUG - pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:16:40,983 - DEBUG - stack: []
2025-07-23 17:16:40,983 - DEBUG - state.pc_initial: State(pc_initial=14 nstack_initial=0)
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack []
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=18, inst=COPY(arg=2, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=20, inst=COPY(arg=2, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1', '$values14.0']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1', '$values14.0', '$i16.1']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1', '$22binary_subscr.2']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=13, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1', '$22binary_subscr.2', '$value26.3']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=32, inst=SWAP(arg=3, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$values14.0', '$i16.1', '$binop_iadd28.4']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=34, inst=SWAP(arg=2, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$binop_iadd28.4', '$i16.1', '$values14.0']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=36, inst=STORE_SUBSCR(arg=None, lineno=722)
2025-07-23 17:16:40,983 - DEBUG - stack ['$binop_iadd28.4', '$values14.0', '$i16.1']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=40, inst=RETURN_CONST(arg=0, lineno=723)
2025-07-23 17:16:40,983 - DEBUG - stack []
2025-07-23 17:16:40,983 - DEBUG - end state. edges=[]
2025-07-23 17:16:40,983 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:16:40,983 - DEBUG - stack: []
2025-07-23 17:16:40,983 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=1, lineno=724)
2025-07-23 17:16:40,983 - DEBUG - stack []
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=724)
2025-07-23 17:16:40,983 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=724)
2025-07-23 17:16:40,983 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2']
2025-07-23 17:16:40,983 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=724)
2025-07-23 17:16:40,983 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$i54.3']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=58, inst=BINARY_OP(arg=10, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$i54.3', '$M56.4']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$binop_sub58.5']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$binop_sub58.5', '$const62.6.1']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$64build_tuple.7']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=70, inst=CALL(arg=1, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$66binary_subscr.8']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=78, inst=STORE_FAST(arg=5, lineno=724)
2025-07-23 17:16:40,988 - DEBUG - stack ['$70call.9']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=80, inst=LOAD_GLOBAL(arg=1, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack []
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=0, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=2, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$i92.13']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=10, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$i92.13', '$M94.14']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=2, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$binop_sub96.15']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=102, inst=BUILD_TUPLE(arg=2, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$binop_sub96.15', '$const100.16.2']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$102build_tuple.17']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=108, inst=CALL(arg=1, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$104binary_subscr.18']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=116, inst=STORE_FAST(arg=6, lineno=725)
2025-07-23 17:16:40,988 - DEBUG - stack ['$108call.19']
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=726)
2025-07-23 17:16:40,988 - DEBUG - stack []
2025-07-23 17:16:40,988 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=4, lineno=726)
2025-07-23 17:16:40,988 - DEBUG - stack ['$null$118.21', '$118load_global.20']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=0, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=132, inst=LOAD_FAST(arg=2, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$i130.23']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=134, inst=BINARY_OP(arg=10, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$i130.23', '$M132.24']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=3, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$binop_sub134.25']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=140, inst=BUILD_TUPLE(arg=2, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$binop_sub134.25', '$const138.26.3']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$140build_tuple.27']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=146, inst=CALL(arg=1, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$142binary_subscr.28']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=154, inst=STORE_FAST(arg=7, lineno=726)
2025-07-23 17:16:40,993 - DEBUG - stack ['$146call.29']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=5, lineno=727)
2025-07-23 17:16:40,993 - DEBUG - stack []
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=2, lineno=727)
2025-07-23 17:16:40,993 - DEBUG - stack ['$li156.30']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=160, inst=COMPARE_OP(arg=92, lineno=727)
2025-07-23 17:16:40,993 - DEBUG - stack ['$li156.30', '$M158.31']
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=164, inst=POP_JUMP_IF_FALSE(arg=19, lineno=727)
2025-07-23 17:16:40,993 - DEBUG - stack ['$160compare_op.32']
2025-07-23 17:16:40,993 - DEBUG - end state. edges=[Edge(pc=166, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:40,993 - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-07-23 17:16:40,993 - DEBUG - stack: []
2025-07-23 17:16:40,993 - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=0)
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=166, inst=LOAD_GLOBAL(arg=1, lineno=727)
2025-07-23 17:16:40,993 - DEBUG - stack []
2025-07-23 17:16:40,993 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=5, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$li178.3']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=182, inst=BINARY_OP(arg=10, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$li178.3', '$M180.4']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=3, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$binop_sub182.5']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=188, inst=BUILD_TUPLE(arg=2, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$binop_sub182.5', '$const186.6.3']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$188build_tuple.7']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=194, inst=CALL(arg=1, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$190binary_subscr.8']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=202, inst=JUMP_FORWARD(arg=1, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$194call.9']
2025-07-23 17:16:40,998 - DEBUG - end state. edges=[Edge(pc=206, stack=('$194call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:40,998 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=206 nstack_initial=1)])
2025-07-23 17:16:40,998 - DEBUG - stack: []
2025-07-23 17:16:40,998 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=2, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack []
2025-07-23 17:16:40,998 - DEBUG - end state. edges=[Edge(pc=206, stack=('$const204.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:40,998 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=206 nstack_initial=1)])
2025-07-23 17:16:40,998 - DEBUG - stack: ['$phi206.0']
2025-07-23 17:16:40,998 - DEBUG - state.pc_initial: State(pc_initial=206 nstack_initial=1)
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=206, inst=STORE_FAST(arg=8, lineno=727)
2025-07-23 17:16:40,998 - DEBUG - stack ['$phi206.0']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=6, lineno=728)
2025-07-23 17:16:40,998 - DEBUG - stack []
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=2, lineno=728)
2025-07-23 17:16:40,998 - DEBUG - stack ['$ri208.1']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=212, inst=COMPARE_OP(arg=92, lineno=728)
2025-07-23 17:16:40,998 - DEBUG - stack ['$ri208.1', '$M210.2']
2025-07-23 17:16:40,998 - DEBUG - dispatch pc=216, inst=POP_JUMP_IF_FALSE(arg=19, lineno=728)
2025-07-23 17:16:40,998 - DEBUG - stack ['$212compare_op.3']
2025-07-23 17:16:40,998 - DEBUG - end state. edges=[Edge(pc=218, stack=(), blockstack=(), npush=0), Edge(pc=256, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:40,998 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=218 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-07-23 17:16:40,998 - DEBUG - pending: deque([State(pc_initial=218 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-07-23 17:16:40,998 - DEBUG - stack: []
2025-07-23 17:16:41,003 - DEBUG - state.pc_initial: State(pc_initial=218 nstack_initial=0)
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack []
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=4, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=6, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=2, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$ri230.3']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$ri230.3', '$M232.4']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=238, inst=LOAD_CONST(arg=3, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$binop_sub234.5']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=240, inst=BUILD_TUPLE(arg=2, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$binop_sub234.5', '$const238.6.3']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=242, inst=BINARY_SUBSCR(arg=None, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$240build_tuple.7']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=246, inst=CALL(arg=1, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$242binary_subscr.8']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=254, inst=JUMP_FORWARD(arg=1, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$246call.9']
2025-07-23 17:16:41,003 - DEBUG - end state. edges=[Edge(pc=258, stack=('$246call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:41,003 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=258 nstack_initial=1)])
2025-07-23 17:16:41,003 - DEBUG - stack: []
2025-07-23 17:16:41,003 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=0)
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=256, inst=LOAD_CONST(arg=2, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack []
2025-07-23 17:16:41,003 - DEBUG - end state. edges=[Edge(pc=258, stack=('$const256.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:41,003 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2025-07-23 17:16:41,003 - DEBUG - stack: ['$phi258.0']
2025-07-23 17:16:41,003 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=9, lineno=728)
2025-07-23 17:16:41,003 - DEBUG - stack ['$phi258.0']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=8, lineno=729)
2025-07-23 17:16:41,003 - DEBUG - stack []
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=9, lineno=729)
2025-07-23 17:16:41,003 - DEBUG - stack ['$lsize260.1']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=729)
2025-07-23 17:16:41,003 - DEBUG - stack ['$lsize260.1', '$rsize262.2']
2025-07-23 17:16:41,003 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=7, lineno=729)
2025-07-23 17:16:41,003 - DEBUG - stack ['$binop_add264.3']
2025-07-23 17:16:41,008 - DEBUG - dispatch pc=270, inst=COMPARE_OP(arg=40, lineno=729)
2025-07-23 17:16:41,008 - DEBUG - stack ['$binop_add264.3', '$group_size268.4']
2025-07-23 17:16:41,008 - DEBUG - dispatch pc=274, inst=POP_JUMP_IF_TRUE(arg=2, lineno=729)
2025-07-23 17:16:41,008 - DEBUG - stack ['$270compare_op.5']
2025-07-23 17:16:41,008 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0), Edge(pc=280, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:41,008 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=276 nstack_initial=0), State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,008 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,008 - DEBUG - stack: []
2025-07-23 17:16:41,009 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=276, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=729)
2025-07-23 17:16:41,009 - DEBUG - stack []
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=278, inst=RAISE_VARARGS(arg=1, lineno=729)
2025-07-23 17:16:41,009 - DEBUG - stack ['$assertion_error276.0']
2025-07-23 17:16:41,009 - DEBUG - end state. edges=[]
2025-07-23 17:16:41,009 - DEBUG - pending: deque([State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,009 - DEBUG - stack: []
2025-07-23 17:16:41,009 - DEBUG - state.pc_initial: State(pc_initial=280 nstack_initial=0)
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=3, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack []
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=0, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=284, inst=COPY(arg=2, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=286, inst=COPY(arg=2, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1', '$values280.0']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1', '$values280.0', '$i282.1']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=1, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1', '$288binary_subscr.2']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=294, inst=BINARY_OP(arg=13, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1', '$288binary_subscr.2', '$value292.3']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=298, inst=SWAP(arg=3, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$values280.0', '$i282.1', '$binop_iadd294.4']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=300, inst=SWAP(arg=2, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$binop_iadd294.4', '$i282.1', '$values280.0']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=302, inst=STORE_SUBSCR(arg=None, lineno=730)
2025-07-23 17:16:41,009 - DEBUG - stack ['$binop_iadd294.4', '$values280.0', '$i282.1']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=306, inst=LOAD_GLOBAL(arg=3, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack []
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=5, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=318, inst=LOAD_FAST(arg=3, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=320, inst=LOAD_FAST(arg=0, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$values318.8']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$values318.8', '$i320.9']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=326, inst=LOAD_FAST(arg=8, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$322binary_subscr.10']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=328, inst=BINARY_OP(arg=5, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$322binary_subscr.10', '$lsize326.11']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=332, inst=LOAD_FAST(arg=7, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_mul328.12']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=334, inst=BINARY_OP(arg=11, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_mul328.12', '$group_size332.13']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=338, inst=LOAD_FAST(arg=2, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14']
2025-07-23 17:16:41,009 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=3, lineno=731)
2025-07-23 17:16:41,009 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=4, lineno=731)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=344, inst=CALL(arg=5, lineno=731)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16', '$clustering342.17']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=352, inst=POP_TOP(arg=None, lineno=731)
2025-07-23 17:16:41,018 - DEBUG - stack ['$344call.18']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=354, inst=LOAD_GLOBAL(arg=3, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack []
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=364, inst=LOAD_FAST(arg=6, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=366, inst=LOAD_FAST(arg=3, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=368, inst=LOAD_FAST(arg=0, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$values366.22']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=370, inst=BINARY_SUBSCR(arg=None, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$values366.22', '$i368.23']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=374, inst=LOAD_FAST(arg=9, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$370binary_subscr.24']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=376, inst=BINARY_OP(arg=5, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$370binary_subscr.24', '$rsize374.25']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=7, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_mul376.26']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=382, inst=BINARY_OP(arg=11, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_mul376.26', '$group_size380.27']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=386, inst=LOAD_FAST(arg=2, lineno=732)
2025-07-23 17:16:41,018 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28']
2025-07-23 17:16:41,018 - DEBUG - dispatch pc=388, inst=LOAD_FAST(arg=3, lineno=732)
2025-07-23 17:16:41,023 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29']
2025-07-23 17:16:41,023 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=4, lineno=732)
2025-07-23 17:16:41,023 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30']
2025-07-23 17:16:41,023 - DEBUG - dispatch pc=392, inst=CALL(arg=5, lineno=732)
2025-07-23 17:16:41,023 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30', '$clustering390.31']
2025-07-23 17:16:41,023 - DEBUG - dispatch pc=400, inst=POP_TOP(arg=None, lineno=732)
2025-07-23 17:16:41,023 - DEBUG - stack ['$392call.32']
2025-07-23 17:16:41,023 - DEBUG - dispatch pc=402, inst=RETURN_CONST(arg=0, lineno=732)
2025-07-23 17:16:41,023 - DEBUG - stack []
2025-07-23 17:16:41,023 - DEBUG - end state. edges=[]
2025-07-23 17:16:41,023 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:41,023 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=166 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=1): {'$phi206.0'},
             State(pc_initial=218 nstack_initial=0): set(),
             State(pc_initial=256 nstack_initial=0): set(),
             State(pc_initial=258 nstack_initial=1): {'$phi258.0'},
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=280 nstack_initial=0): set()})
2025-07-23 17:16:41,025 - DEBUG - defmap: {'$phi206.0': State(pc_initial=166 nstack_initial=0),
 '$phi258.0': State(pc_initial=256 nstack_initial=0)}
2025-07-23 17:16:41,025 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi206.0': {('$194call.9',
                            State(pc_initial=166 nstack_initial=0)),
                           ('$const204.0.2',
                            State(pc_initial=204 nstack_initial=0))},
             '$phi258.0': {('$246call.9',
                            State(pc_initial=218 nstack_initial=0)),
                           ('$const256.0.2',
                            State(pc_initial=256 nstack_initial=0))}})
2025-07-23 17:16:41,025 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi206.0': {('$194call.9',
                            State(pc_initial=166 nstack_initial=0)),
                           ('$const204.0.2',
                            State(pc_initial=204 nstack_initial=0))},
             '$phi258.0': {('$246call.9',
                            State(pc_initial=218 nstack_initial=0)),
                           ('$const256.0.2',
                            State(pc_initial=256 nstack_initial=0))}})
2025-07-23 17:16:41,025 - DEBUG - keep phismap: {'$phi206.0': {('$194call.9', State(pc_initial=166 nstack_initial=0)),
               ('$const204.0.2', State(pc_initial=204 nstack_initial=0))},
 '$phi258.0': {('$246call.9', State(pc_initial=218 nstack_initial=0)),
               ('$const256.0.2', State(pc_initial=256 nstack_initial=0))}}
2025-07-23 17:16:41,025 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=166 nstack_initial=0): {'$phi206.0': '$194call.9'},
             State(pc_initial=204 nstack_initial=0): {'$phi206.0': '$const204.0.2'},
             State(pc_initial=218 nstack_initial=0): {'$phi258.0': '$246call.9'},
             State(pc_initial=256 nstack_initial=0): {'$phi258.0': '$const256.0.2'}})
2025-07-23 17:16:41,025 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:41,025 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$i4.0'}), (6, {'res': '$M6.1'}), (8, {'lhs': '$i4.0', 'rhs': '$M6.1', 'res': '$8compare_op.2'}), (12, {'pred': '$8compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 42: ()})
2025-07-23 17:16:41,025 - DEBUG - block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$values14.0'}), (16, {'res': '$i16.1'}), (22, {'index': '$i16.1', 'target': '$values14.0', 'res': '$22binary_subscr.2'}), (26, {'res': '$value26.3'}), (28, {'op': '+=', 'lhs': '$22binary_subscr.2', 'rhs': '$value26.3', 'res': '$binop_iadd28.4'}), (36, {'target': '$values14.0', 'index': '$i16.1', 'value': '$binop_iadd28.4'}), (40, {'retval': '$const40.5', 'castval': '$40return_const.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,025 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 0, 'res': '$42load_global.0'}), (52, {'res': '$clustering52.2'}), (54, {'res': '$i54.3'}), (56, {'res': '$M56.4'}), (58, {'op': '-', 'lhs': '$i54.3', 'rhs': '$M56.4', 'res': '$binop_sub58.5'}), (62, {'res': '$const62.6.1'}), (64, {'items': ['$binop_sub58.5', '$const62.6.1'], 'res': '$64build_tuple.7'}), (66, {'index': '$64build_tuple.7', 'target': '$clustering52.2', 'res': '$66binary_subscr.8'}), (70, {'func': '$42load_global.0', 'args': ['$66binary_subscr.8'], 'kw_names': None, 'res': '$70call.9'}), (78, {'value': '$70call.9'}), (80, {'idx': 0, 'res': '$80load_global.10'}), (90, {'res': '$clustering90.12'}), (92, {'res': '$i92.13'}), (94, {'res': '$M94.14'}), (96, {'op': '-', 'lhs': '$i92.13', 'rhs': '$M94.14', 'res': '$binop_sub96.15'}), (100, {'res': '$const100.16.2'}), (102, {'items': ['$binop_sub96.15', '$const100.16.2'], 'res': '$102build_tuple.17'}), (104, {'index': '$102build_tuple.17', 'target': '$clustering90.12', 'res': '$104binary_subscr.18'}), (108, {'func': '$80load_global.10', 'args': ['$104binary_subscr.18'], 'kw_names': None, 'res': '$108call.19'}), (116, {'value': '$108call.19'}), (118, {'idx': 0, 'res': '$118load_global.20'}), (128, {'res': '$clustering128.22'}), (130, {'res': '$i130.23'}), (132, {'res': '$M132.24'}), (134, {'op': '-', 'lhs': '$i130.23', 'rhs': '$M132.24', 'res': '$binop_sub134.25'}), (138, {'res': '$const138.26.3'}), (140, {'items': ['$binop_sub134.25', '$const138.26.3'], 'res': '$140build_tuple.27'}), (142, {'index': '$140build_tuple.27', 'target': '$clustering128.22', 'res': '$142binary_subscr.28'}), (146, {'func': '$118load_global.20', 'args': ['$142binary_subscr.28'], 'kw_names': None, 'res': '$146call.29'}), (154, {'value': '$146call.29'}), (156, {'res': '$li156.30'}), (158, {'res': '$M158.31'}), (160, {'lhs': '$li156.30', 'rhs': '$M158.31', 'res': '$160compare_op.32'}), (164, {'pred': '$160compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: (), 204: ()})
2025-07-23 17:16:41,025 - DEBUG - block_infos State(pc_initial=166 nstack_initial=0):
AdaptBlockInfo(insts=((166, {'idx': 0, 'res': '$166load_global.0'}), (176, {'res': '$clustering176.2'}), (178, {'res': '$li178.3'}), (180, {'res': '$M180.4'}), (182, {'op': '-', 'lhs': '$li178.3', 'rhs': '$M180.4', 'res': '$binop_sub182.5'}), (186, {'res': '$const186.6.3'}), (188, {'items': ['$binop_sub182.5', '$const186.6.3'], 'res': '$188build_tuple.7'}), (190, {'index': '$188build_tuple.7', 'target': '$clustering176.2', 'res': '$190binary_subscr.8'}), (194, {'func': '$166load_global.0', 'args': ['$190binary_subscr.8'], 'kw_names': None, 'res': '$194call.9'}), (202, {})), outgoing_phis={'$phi206.0': '$194call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ('$194call.9',)})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'res': '$const204.0.2'}),), outgoing_phis={'$phi206.0': '$const204.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ('$const204.0.2',)})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=206 nstack_initial=1):
AdaptBlockInfo(insts=((206, {'value': '$phi206.0'}), (208, {'res': '$ri208.1'}), (210, {'res': '$M210.2'}), (212, {'lhs': '$ri208.1', 'rhs': '$M210.2', 'res': '$212compare_op.3'}), (216, {'pred': '$212compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={218: (), 256: ()})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=218 nstack_initial=0):
AdaptBlockInfo(insts=((218, {'idx': 0, 'res': '$218load_global.0'}), (228, {'res': '$clustering228.2'}), (230, {'res': '$ri230.3'}), (232, {'res': '$M232.4'}), (234, {'op': '-', 'lhs': '$ri230.3', 'rhs': '$M232.4', 'res': '$binop_sub234.5'}), (238, {'res': '$const238.6.3'}), (240, {'items': ['$binop_sub234.5', '$const238.6.3'], 'res': '$240build_tuple.7'}), (242, {'index': '$240build_tuple.7', 'target': '$clustering228.2', 'res': '$242binary_subscr.8'}), (246, {'func': '$218load_global.0', 'args': ['$242binary_subscr.8'], 'kw_names': None, 'res': '$246call.9'}), (254, {})), outgoing_phis={'$phi258.0': '$246call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$246call.9',)})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=256 nstack_initial=0):
AdaptBlockInfo(insts=((256, {'res': '$const256.0.2'}),), outgoing_phis={'$phi258.0': '$const256.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$const256.0.2',)})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'value': '$phi258.0'}), (260, {'res': '$lsize260.1'}), (262, {'res': '$rsize262.2'}), (264, {'op': '+', 'lhs': '$lsize260.1', 'rhs': '$rsize262.2', 'res': '$binop_add264.3'}), (268, {'res': '$group_size268.4'}), (270, {'lhs': '$binop_add264.3', 'rhs': '$group_size268.4', 'res': '$270compare_op.5'}), (274, {'pred': '$270compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: (), 280: ()})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$assertion_error276.0'}), (278, {'exc': '$assertion_error276.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,028 - DEBUG - block_infos State(pc_initial=280 nstack_initial=0):
AdaptBlockInfo(insts=((280, {'res': '$values280.0'}), (282, {'res': '$i282.1'}), (288, {'index': '$i282.1', 'target': '$values280.0', 'res': '$288binary_subscr.2'}), (292, {'res': '$value292.3'}), (294, {'op': '+=', 'lhs': '$288binary_subscr.2', 'rhs': '$value292.3', 'res': '$binop_iadd294.4'}), (302, {'target': '$values280.0', 'index': '$i282.1', 'value': '$binop_iadd294.4'}), (306, {'idx': 1, 'res': '$306load_global.5'}), (316, {'res': '$li316.7'}), (318, {'res': '$values318.8'}), (320, {'res': '$i320.9'}), (322, {'index': '$i320.9', 'target': '$values318.8', 'res': '$322binary_subscr.10'}), (326, {'res': '$lsize326.11'}), (328, {'op': '*', 'lhs': '$322binary_subscr.10', 'rhs': '$lsize326.11', 'res': '$binop_mul328.12'}), (332, {'res': '$group_size332.13'}), (334, {'op': '/', 'lhs': '$binop_mul328.12', 'rhs': '$group_size332.13', 'res': '$binop_truediv334.14'}), (338, {'res': '$M338.15'}), (340, {'res': '$values340.16'}), (342, {'res': '$clustering342.17'}), (344, {'func': '$306load_global.5', 'args': ['$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16', '$clustering342.17'], 'kw_names': None, 'res': '$344call.18'}), (354, {'idx': 1, 'res': '$354load_global.19'}), (364, {'res': '$ri364.21'}), (366, {'res': '$values366.22'}), (368, {'res': '$i368.23'}), (370, {'index': '$i368.23', 'target': '$values366.22', 'res': '$370binary_subscr.24'}), (374, {'res': '$rsize374.25'}), (376, {'op': '*', 'lhs': '$370binary_subscr.24', 'rhs': '$rsize374.25', 'res': '$binop_mul376.26'}), (380, {'res': '$group_size380.27'}), (382, {'op': '/', 'lhs': '$binop_mul376.26', 'rhs': '$group_size380.27', 'res': '$binop_truediv382.28'}), (386, {'res': '$M386.29'}), (388, {'res': '$values388.30'}), (390, {'res': '$clustering390.31'}), (392, {'func': '$354load_global.19', 'args': ['$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30', '$clustering390.31'], 'kw_names': None, 'res': '$392call.32'}), (402, {'retval': '$const402.33', 'castval': '$402return_const.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,028 - DEBUG - label 0:
    i = arg(0, name=i)                       ['i']
    value = arg(1, name=value)               ['value']
    M = arg(2, name=M)                       ['M']
    values = arg(3, name=values)             ['values']
    clustering = arg(4, name=clustering)     ['clustering']
    $8compare_op.2 = i < M                   ['$8compare_op.2', 'M', 'i']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None) ['$12pred', '$8compare_op.2', 'bool12']
    branch $12pred, 14, 42                   ['$12pred']
label 14:
    $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$22binary_subscr.2', 'i', 'values']
    $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined) ['$22binary_subscr.2', '$binop_iadd28.4', 'value']
    values[i] = $binop_iadd28.4              ['$binop_iadd28.4', 'i', 'values']
    $const40.5 = const(NoneType, None)       ['$const40.5']
    $40return_const.6 = cast(value=$const40.5) ['$40return_const.6', '$const40.5']
    return $40return_const.6                 ['$40return_const.6']
label 42:
    $42load_global.0 = global(int: <class 'int'>) ['$42load_global.0']
    $binop_sub58.5 = i - M                   ['$binop_sub58.5', 'M', 'i']
    $const62.6.1 = const(int, 0)             ['$const62.6.1']
    $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)]) ['$64build_tuple.7', '$binop_sub58.5', '$const62.6.1']
    $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>) ['$64build_tuple.7', '$66binary_subscr.8', 'clustering']
    li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$66binary_subscr.8', 'li']
    $80load_global.10 = global(int: <class 'int'>) ['$80load_global.10']
    $binop_sub96.15 = i - M                  ['$binop_sub96.15', 'M', 'i']
    $const100.16.2 = const(int, 1)           ['$const100.16.2']
    $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)]) ['$102build_tuple.17', '$binop_sub96.15', '$const100.16.2']
    $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>) ['$102build_tuple.17', '$104binary_subscr.18', 'clustering']
    ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None) ['$104binary_subscr.18', '$80load_global.10', 'ri']
    $118load_global.20 = global(int: <class 'int'>) ['$118load_global.20']
    $binop_sub134.25 = i - M                 ['$binop_sub134.25', 'M', 'i']
    $const138.26.3 = const(int, 3)           ['$const138.26.3']
    $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)]) ['$140build_tuple.27', '$binop_sub134.25', '$const138.26.3']
    $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>) ['$140build_tuple.27', '$142binary_subscr.28', 'clustering']
    group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None) ['$118load_global.20', '$142binary_subscr.28', 'group_size']
    $160compare_op.32 = li >= M              ['$160compare_op.32', 'M', 'li']
    bool164 = global(bool: <class 'bool'>)   ['bool164']
    $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None) ['$160compare_op.32', '$164pred', 'bool164']
    branch $164pred, 166, 204                ['$164pred']
label 166:
    $166load_global.0 = global(int: <class 'int'>) ['$166load_global.0']
    $binop_sub182.5 = li - M                 ['$binop_sub182.5', 'M', 'li']
    $const186.6.3 = const(int, 3)            ['$const186.6.3']
    $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)]) ['$188build_tuple.7', '$binop_sub182.5', '$const186.6.3']
    $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>) ['$188build_tuple.7', '$190binary_subscr.8', 'clustering']
    $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_global.0', '$190binary_subscr.8', '$194call.9']
    $phi206.0 = $194call.9                   ['$194call.9', '$phi206.0']
    jump 206                                 []
label 204:
    $const204.0.2 = const(int, 1)            ['$const204.0.2']
    $phi206.0 = $const204.0.2                ['$const204.0.2', '$phi206.0']
    jump 206                                 []
label 206:
    lsize = $phi206.0                        ['$phi206.0', 'lsize']
    $212compare_op.3 = ri >= M               ['$212compare_op.3', 'M', 'ri']
    bool216 = global(bool: <class 'bool'>)   ['bool216']
    $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None) ['$212compare_op.3', '$216pred', 'bool216']
    branch $216pred, 218, 256                ['$216pred']
label 218:
    $218load_global.0 = global(int: <class 'int'>) ['$218load_global.0']
    $binop_sub234.5 = ri - M                 ['$binop_sub234.5', 'M', 'ri']
    $const238.6.3 = const(int, 3)            ['$const238.6.3']
    $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)]) ['$240build_tuple.7', '$binop_sub234.5', '$const238.6.3']
    $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>) ['$240build_tuple.7', '$242binary_subscr.8', 'clustering']
    $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.0', '$242binary_subscr.8', '$246call.9']
    $phi258.0 = $246call.9                   ['$246call.9', '$phi258.0']
    jump 258                                 []
label 256:
    $const256.0.2 = const(int, 1)            ['$const256.0.2']
    $phi258.0 = $const256.0.2                ['$const256.0.2', '$phi258.0']
    jump 258                                 []
label 258:
    rsize = $phi258.0                        ['$phi258.0', 'rsize']
    $binop_add264.3 = lsize + rsize          ['$binop_add264.3', 'lsize', 'rsize']
    $270compare_op.5 = $binop_add264.3 == group_size ['$270compare_op.5', '$binop_add264.3', 'group_size']
    bool274 = global(bool: <class 'bool'>)   ['bool274']
    $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None) ['$270compare_op.5', '$274pred', 'bool274']
    branch $274pred, 280, 276                ['$274pred']
label 276:
    $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error276.0']
    raise $assertion_error276.0              ['$assertion_error276.0']
label 280:
    $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$288binary_subscr.2', 'i', 'values']
    $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined) ['$288binary_subscr.2', '$binop_iadd294.4', 'value']
    values[i] = $binop_iadd294.4             ['$binop_iadd294.4', 'i', 'values']
    $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)) ['$306load_global.5']
    $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$322binary_subscr.10', 'i', 'values']
    $binop_mul328.12 = $322binary_subscr.10 * lsize ['$322binary_subscr.10', '$binop_mul328.12', 'lsize']
    $binop_truediv334.14 = $binop_mul328.12 / group_size ['$binop_mul328.12', '$binop_truediv334.14', 'group_size']
    $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None) ['$306load_global.5', '$344call.18', '$binop_truediv334.14', 'M', 'clustering', 'li', 'values']
    $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)) ['$354load_global.19']
    $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$370binary_subscr.24', 'i', 'values']
    $binop_mul376.26 = $370binary_subscr.24 * rsize ['$370binary_subscr.24', '$binop_mul376.26', 'rsize']
    $binop_truediv382.28 = $binop_mul376.26 / group_size ['$binop_mul376.26', '$binop_truediv382.28', 'group_size']
    $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None) ['$354load_global.19', '$392call.32', '$binop_truediv382.28', 'M', 'clustering', 'ri', 'values']
    $const402.33 = const(NoneType, None)     ['$const402.33']
    $402return_const.34 = cast(value=$const402.33) ['$402return_const.34', '$const402.33']
    return $402return_const.34               ['$402return_const.34']

2025-07-23 17:16:41,213 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:41,213 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,213 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,213 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,213 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,213 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,213 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,213 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,213 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,213 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,213 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,213 - DEBUG - ==== SSA block analysis pass on 14
2025-07-23 17:16:41,213 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,213 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,218 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,218 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,218 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:16:41,218 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,218 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,218 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,218 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,218 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,218 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,218 - DEBUG - ==== SSA block analysis pass on 166
2025-07-23 17:16:41,218 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,218 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,218 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,218 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,218 - DEBUG - ==== SSA block analysis pass on 204
2025-07-23 17:16:41,218 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,218 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,218 - DEBUG - on stmt: $phi206.0 = $const204.0.2
2025-07-23 17:16:41,218 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,218 - DEBUG - ==== SSA block analysis pass on 206
2025-07-23 17:16:41,218 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,218 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,218 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,228 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,228 - DEBUG - ==== SSA block analysis pass on 218
2025-07-23 17:16:41,228 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,228 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,228 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,228 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,228 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,228 - DEBUG - ==== SSA block analysis pass on 256
2025-07-23 17:16:41,228 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,228 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,228 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,228 - DEBUG - ==== SSA block analysis pass on 258
2025-07-23 17:16:41,228 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,228 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,228 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,228 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,228 - DEBUG - ==== SSA block analysis pass on 276
2025-07-23 17:16:41,228 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,228 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,228 - DEBUG - ==== SSA block analysis pass on 280
2025-07-23 17:16:41,228 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8306A20>
2025-07-23 17:16:41,228 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,228 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,228 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,228 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,228 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,228 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,228 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,228 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,228 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,228 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,228 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_tuple.17': [(<numba.core.ir.Assign object at 0x000001F6E8311730>,
                                     42)],
             '$104binary_subscr.18': [(<numba.core.ir.Assign object at 0x000001F6E83118B0>,
                                       42)],
             '$118load_global.20': [(<numba.core.ir.Assign object at 0x000001F6E8311C40>,
                                     42)],
             '$12pred': [(<numba.core.ir.Assign object at 0x000001F6E8307B00>,
                          0)],
             '$140build_tuple.27': [(<numba.core.ir.Assign object at 0x000001F6E8312300>,
                                     42)],
             '$142binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001F6E8312450>,
                                       42)],
             '$160compare_op.32': [(<numba.core.ir.Assign object at 0x000001F6E83129F0>,
                                    42)],
             '$164pred': [(<numba.core.ir.Assign object at 0x000001F6E8312C60>,
                           42)],
             '$166load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E8311160>,
                                    166)],
             '$188build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E8313020>,
                                    166)],
             '$190binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E83131A0>,
                                      166)],
             '$194call.9': [(<numba.core.ir.Assign object at 0x000001F6E8313320>,
                             166)],
             '$212compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E83139E0>,
                                   206)],
             '$216pred': [(<numba.core.ir.Assign object at 0x000001F6E8313C50>,
                           206)],
             '$218load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E8306660>,
                                    218)],
             '$22binary_subscr.2': [(<numba.core.ir.Assign object at 0x000001F6E8307E90>,
                                     14)],
             '$240build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E7F78EC0>,
                                    218)],
             '$242binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E8313890>,
                                      218)],
             '$246call.9': [(<numba.core.ir.Assign object at 0x000001F6E8313E30>,
                             218)],
             '$270compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6E831C7D0>,
                                   258)],
             '$274pred': [(<numba.core.ir.Assign object at 0x000001F6E831CA10>,
                           258)],
             '$288binary_subscr.2': [(<numba.core.ir.Assign object at 0x000001F6E831CF50>,
                                      280)],
             '$306load_global.5': [(<numba.core.ir.Assign object at 0x000001F6E831D310>,
                                    280)],
             '$322binary_subscr.10': [(<numba.core.ir.Assign object at 0x000001F6E831D760>,
                                       280)],
             '$344call.18': [(<numba.core.ir.Assign object at 0x000001F6E831E030>,
                              280)],
             '$354load_global.19': [(<numba.core.ir.Assign object at 0x000001F6E831E150>,
                                     280)],
             '$370binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001F6E831E5A0>,
                                       280)],
             '$392call.32': [(<numba.core.ir.Assign object at 0x000001F6E831EE70>,
                              280)],
             '$402return_const.34': [(<numba.core.ir.Assign object at 0x000001F6E831F0B0>,
                                      280)],
             '$40return_const.6': [(<numba.core.ir.Assign object at 0x000001F6E83103B0>,
                                    14)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E83104A0>,
                                   42)],
             '$64build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E8310B60>,
                                   42)],
             '$66binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E8310CE0>,
                                     42)],
             '$80load_global.10': [(<numba.core.ir.Assign object at 0x000001F6E8311070>,
                                    42)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E8307860>,
                                 0)],
             '$assertion_error276.0': [(<numba.core.ir.Assign object at 0x000001F6E831CB30>,
                                        276)],
             '$binop_add264.3': [(<numba.core.ir.Assign object at 0x000001F6E831C590>,
                                  258)],
             '$binop_iadd28.4': [(<numba.core.ir.Assign object at 0x000001F6E8310110>,
                                  14)],
             '$binop_iadd294.4': [(<numba.core.ir.Assign object at 0x000001F6E831D190>,
                                   280)],
             '$binop_mul328.12': [(<numba.core.ir.Assign object at 0x000001F6E831D9A0>,
                                   280)],
             '$binop_mul376.26': [(<numba.core.ir.Assign object at 0x000001F6E831E7E0>,
                                   280)],
             '$binop_sub134.25': [(<numba.core.ir.Assign object at 0x000001F6E8312090>,
                                   42)],
             '$binop_sub182.5': [(<numba.core.ir.Assign object at 0x000001F6E8312DB0>,
                                  166)],
             '$binop_sub234.5': [(<numba.core.ir.Assign object at 0x000001F6E8305F40>,
                                  218)],
             '$binop_sub58.5': [(<numba.core.ir.Assign object at 0x000001F6E83108F0>,
                                 42)],
             '$binop_sub96.15': [(<numba.core.ir.Assign object at 0x000001F6E83114C0>,
                                  42)],
             '$binop_truediv334.14': [(<numba.core.ir.Assign object at 0x000001F6E831DBE0>,
                                       280)],
             '$binop_truediv382.28': [(<numba.core.ir.Assign object at 0x000001F6E831EA20>,
                                       280)],
             '$const100.16.2': [(<numba.core.ir.Assign object at 0x000001F6E83115E0>,
                                 42)],
             '$const138.26.3': [(<numba.core.ir.Assign object at 0x000001F6E83121B0>,
                                 42)],
             '$const186.6.3': [(<numba.core.ir.Assign object at 0x000001F6E8312ED0>,
                                166)],
             '$const204.0.2': [(<numba.core.ir.Assign object at 0x000001F6E83134A0>,
                                204)],
             '$const238.6.3': [(<numba.core.ir.Assign object at 0x000001F6E8305E20>,
                                218)],
             '$const256.0.2': [(<numba.core.ir.Assign object at 0x000001F6E8313FE0>,
                                256)],
             '$const40.5': [(<numba.core.ir.Assign object at 0x000001F6E8310290>,
                             14)],
             '$const402.33': [(<numba.core.ir.Assign object at 0x000001F6E831EF90>,
                               280)],
             '$const62.6.1': [(<numba.core.ir.Assign object at 0x000001F6E8310A10>,
                               42)],
             '$phi206.0': [(<numba.core.ir.Assign object at 0x000001F6E8311AF0>,
                            166),
                           (<numba.core.ir.Assign object at 0x000001F6E8310680>,
                            204)],
             '$phi258.0': [(<numba.core.ir.Assign object at 0x000001F6E8306480>,
                            218),
                           (<numba.core.ir.Assign object at 0x000001F6E83067E0>,
                            256)],
             'M': [(<numba.core.ir.Assign object at 0x000001F6E8307290>, 0)],
             'bool12': [(<numba.core.ir.Assign object at 0x000001F6E83079B0>,
                         0)],
             'bool164': [(<numba.core.ir.Assign object at 0x000001F6E8312B40>,
                          42)],
             'bool216': [(<numba.core.ir.Assign object at 0x000001F6E8313B30>,
                          206)],
             'bool274': [(<numba.core.ir.Assign object at 0x000001F6E831C8F0>,
                          258)],
             'clustering': [(<numba.core.ir.Assign object at 0x000001F6E83074D0>,
                             0)],
             'group_size': [(<numba.core.ir.Assign object at 0x000001F6E83125D0>,
                             42)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E83071D0>, 0)],
             'li': [(<numba.core.ir.Assign object at 0x000001F6E8310E60>, 42)],
             'lsize': [(<numba.core.ir.Assign object at 0x000001F6E83136B0>,
                        206)],
             'ri': [(<numba.core.ir.Assign object at 0x000001F6E8311A30>, 42)],
             'rsize': [(<numba.core.ir.Assign object at 0x000001F6E831C230>,
                        258)],
             'value': [(<numba.core.ir.Assign object at 0x000001F6E8307170>,
                        0)],
             'values': [(<numba.core.ir.Assign object at 0x000001F6E83073B0>,
                         0)]})
2025-07-23 17:16:41,238 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E8306A20>
2025-07-23 17:16:41,238 - DEBUG - Fix SSA violator on var $phi206.0
2025-07-23 17:16:41,238 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,238 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,238 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,238 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,238 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,238 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,238 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,238 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,238 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,238 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,238 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,238 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,238 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,238 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,238 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,238 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,238 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,238 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,238 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,238 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,238 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,238 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,238 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,238 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,244 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,244 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,244 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,244 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,244 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,245 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,245 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,245 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,245 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,245 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,245 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,245 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,245 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,245 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,245 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,246 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,246 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,246 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,246 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,246 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,246 - DEBUG - first assign: $phi206.0
2025-07-23 17:16:41,246 - DEBUG - replaced with: $phi206.0 = $194call.9
2025-07-23 17:16:41,246 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,246 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,246 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,247 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,247 - DEBUG - on stmt: $phi206.0 = $const204.0.2
2025-07-23 17:16:41,247 - DEBUG - replaced with: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,247 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,247 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,247 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,247 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,247 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,247 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,247 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,247 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,247 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,247 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,247 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,247 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,248 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,248 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,248 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,248 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,248 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,248 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,248 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,248 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,248 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,249 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,249 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,249 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,249 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,249 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,249 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,249 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,249 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,249 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,250 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,250 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,250 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,251 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,251 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,251 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,251 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E83303B0>
2025-07-23 17:16:41,251 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,251 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,251 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,251 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,251 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,251 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,251 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,251 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,252 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,252 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,252 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,252 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,252 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,252 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,252 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,252 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,253 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {166: [<numba.core.ir.Assign object at 0x000001F6E83323C0>],
             204: [<numba.core.ir.Assign object at 0x000001F6E83329C0>]})
2025-07-23 17:16:41,253 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,253 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,253 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,253 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,253 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,254 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,254 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,254 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,254 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,254 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,254 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,254 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,254 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,255 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,255 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,255 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,255 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,255 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,255 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,255 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,255 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,255 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,256 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,256 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,256 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,256 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,256 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,256 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,256 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,256 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,256 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,257 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,257 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,257 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,257 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,257 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,257 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,257 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,257 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,258 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,258 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,258 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,258 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,258 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,258 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,258 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,259 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,259 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,259 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,259 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,259 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,259 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,259 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,260 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,260 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,260 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,260 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,260 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,260 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,260 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,260 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,260 - DEBUG - find_def var='$phi206.0' stmt=lsize = $phi206.0
2025-07-23 17:16:41,260 - DEBUG - find_def_from_top label 206
2025-07-23 17:16:41,261 - DEBUG - insert phi node $phi206.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 206
2025-07-23 17:16:41,261 - DEBUG - find_def_from_bottom label 204
2025-07-23 17:16:41,261 - DEBUG - incoming_def $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,261 - DEBUG - find_def_from_bottom label 166
2025-07-23 17:16:41,261 - DEBUG - incoming_def $phi206.0 = $194call.9
2025-07-23 17:16:41,261 - DEBUG - replaced with: lsize = $phi206.0.2
2025-07-23 17:16:41,261 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,261 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,261 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,262 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,262 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,262 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,262 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,262 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,262 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,262 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,262 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,263 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,263 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,263 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,263 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,263 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,263 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,263 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,263 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,263 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,264 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,264 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,264 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,264 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,264 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,264 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,264 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,264 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,265 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,265 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,265 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,265 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,265 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E83303B0>
2025-07-23 17:16:41,265 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,265 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,265 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,265 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,266 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,266 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,266 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,266 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,266 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,266 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,266 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,267 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,267 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,267 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,267 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,267 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,267 - DEBUG - Fix SSA violator on var $phi258.0
2025-07-23 17:16:41,267 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,268 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,268 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,268 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,268 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,269 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,269 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,269 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,269 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,269 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,269 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,269 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,269 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,269 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,269 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,269 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $phi206.0.2 = phi(incoming_values=[Var($phi206.0.1, _partition.py:727), Var($phi206.0, _partition.py:727)], incoming_blocks=[204, 166])
2025-07-23 17:16:41,269 - DEBUG - on stmt: lsize = $phi206.0.2
2025-07-23 17:16:41,269 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,269 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,269 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,269 - DEBUG - first assign: $phi258.0
2025-07-23 17:16:41,269 - DEBUG - replaced with: $phi258.0 = $246call.9
2025-07-23 17:16:41,269 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,269 - DEBUG - replaced with: $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,269 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,269 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,269 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,269 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,269 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,269 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,269 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,278 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,278 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,278 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,278 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,278 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,278 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,278 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8331850>
2025-07-23 17:16:41,278 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,278 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,278 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,278 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,278 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,278 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,278 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,278 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,278 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,278 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,278 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {218: [<numba.core.ir.Assign object at 0x000001F6E83317C0>],
             256: [<numba.core.ir.Assign object at 0x000001F6E8332270>]})
2025-07-23 17:16:41,278 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,278 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,278 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,278 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,278 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,278 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,278 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,278 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,278 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,278 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,282 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,282 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,282 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,282 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,282 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,282 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,282 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,282 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,282 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,282 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,282 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,282 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,282 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,282 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,282 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,282 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,282 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,282 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,282 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,282 - DEBUG - on stmt: $phi206.0.2 = phi(incoming_values=[Var($phi206.0.1, _partition.py:727), Var($phi206.0, _partition.py:727)], incoming_blocks=[204, 166])
2025-07-23 17:16:41,282 - DEBUG - on stmt: lsize = $phi206.0.2
2025-07-23 17:16:41,282 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,289 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,289 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,289 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,289 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,289 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,289 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,289 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,289 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,289 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,289 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,289 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,289 - DEBUG - find_def var='$phi258.0' stmt=rsize = $phi258.0
2025-07-23 17:16:41,289 - DEBUG - find_def_from_top label 258
2025-07-23 17:16:41,289 - DEBUG - insert phi node $phi258.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 258
2025-07-23 17:16:41,289 - DEBUG - find_def_from_bottom label 256
2025-07-23 17:16:41,289 - DEBUG - incoming_def $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,289 - DEBUG - find_def_from_bottom label 218
2025-07-23 17:16:41,289 - DEBUG - incoming_def $phi258.0 = $246call.9
2025-07-23 17:16:41,289 - DEBUG - replaced with: rsize = $phi258.0.2
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,289 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,289 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,289 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,289 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,289 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,289 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331B50>
2025-07-23 17:16:41,289 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,289 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,289 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,289 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,289 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,289 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,289 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,289 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,289 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,289 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,314 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=719)
           2	RESUME(arg=0, lineno=719)
           4	LOAD_FAST(arg=0, lineno=721)
           6	LOAD_FAST(arg=2, lineno=721)
           8	COMPARE_OP(arg=2, lineno=721)
          12	POP_JUMP_IF_FALSE(arg=14, lineno=721)
          14	LOAD_FAST(arg=3, lineno=722)
          16	LOAD_FAST(arg=0, lineno=722)
          18	COPY(arg=2, lineno=722)
          20	COPY(arg=2, lineno=722)
          22	BINARY_SUBSCR(arg=None, lineno=722)
          26	LOAD_FAST(arg=1, lineno=722)
          28	BINARY_OP(arg=13, lineno=722)
          32	SWAP(arg=3, lineno=722)
          34	SWAP(arg=2, lineno=722)
          36	STORE_SUBSCR(arg=None, lineno=722)
          40	RETURN_CONST(arg=0, lineno=723)
>         42	LOAD_GLOBAL(arg=1, lineno=724)
          52	LOAD_FAST(arg=4, lineno=724)
          54	LOAD_FAST(arg=0, lineno=724)
          56	LOAD_FAST(arg=2, lineno=724)
          58	BINARY_OP(arg=10, lineno=724)
          62	LOAD_CONST(arg=1, lineno=724)
          64	BUILD_TUPLE(arg=2, lineno=724)
          66	BINARY_SUBSCR(arg=None, lineno=724)
          70	CALL(arg=1, lineno=724)
          78	STORE_FAST(arg=5, lineno=724)
          80	LOAD_GLOBAL(arg=1, lineno=725)
          90	LOAD_FAST(arg=4, lineno=725)
          92	LOAD_FAST(arg=0, lineno=725)
          94	LOAD_FAST(arg=2, lineno=725)
          96	BINARY_OP(arg=10, lineno=725)
         100	LOAD_CONST(arg=2, lineno=725)
         102	BUILD_TUPLE(arg=2, lineno=725)
         104	BINARY_SUBSCR(arg=None, lineno=725)
         108	CALL(arg=1, lineno=725)
         116	STORE_FAST(arg=6, lineno=725)
         118	LOAD_GLOBAL(arg=1, lineno=726)
         128	LOAD_FAST(arg=4, lineno=726)
         130	LOAD_FAST(arg=0, lineno=726)
         132	LOAD_FAST(arg=2, lineno=726)
         134	BINARY_OP(arg=10, lineno=726)
         138	LOAD_CONST(arg=3, lineno=726)
         140	BUILD_TUPLE(arg=2, lineno=726)
         142	BINARY_SUBSCR(arg=None, lineno=726)
         146	CALL(arg=1, lineno=726)
         154	STORE_FAST(arg=7, lineno=726)
         156	LOAD_FAST(arg=5, lineno=727)
         158	LOAD_FAST(arg=2, lineno=727)
         160	COMPARE_OP(arg=92, lineno=727)
         164	POP_JUMP_IF_FALSE(arg=19, lineno=727)
         166	LOAD_GLOBAL(arg=1, lineno=727)
         176	LOAD_FAST(arg=4, lineno=727)
         178	LOAD_FAST(arg=5, lineno=727)
         180	LOAD_FAST(arg=2, lineno=727)
         182	BINARY_OP(arg=10, lineno=727)
         186	LOAD_CONST(arg=3, lineno=727)
         188	BUILD_TUPLE(arg=2, lineno=727)
         190	BINARY_SUBSCR(arg=None, lineno=727)
         194	CALL(arg=1, lineno=727)
         202	JUMP_FORWARD(arg=1, lineno=727)
>        204	LOAD_CONST(arg=2, lineno=727)
>        206	STORE_FAST(arg=8, lineno=727)
         208	LOAD_FAST(arg=6, lineno=728)
         210	LOAD_FAST(arg=2, lineno=728)
         212	COMPARE_OP(arg=92, lineno=728)
         216	POP_JUMP_IF_FALSE(arg=19, lineno=728)
         218	LOAD_GLOBAL(arg=1, lineno=728)
         228	LOAD_FAST(arg=4, lineno=728)
         230	LOAD_FAST(arg=6, lineno=728)
         232	LOAD_FAST(arg=2, lineno=728)
         234	BINARY_OP(arg=10, lineno=728)
         238	LOAD_CONST(arg=3, lineno=728)
         240	BUILD_TUPLE(arg=2, lineno=728)
         242	BINARY_SUBSCR(arg=None, lineno=728)
         246	CALL(arg=1, lineno=728)
         254	JUMP_FORWARD(arg=1, lineno=728)
>        256	LOAD_CONST(arg=2, lineno=728)
>        258	STORE_FAST(arg=9, lineno=728)
         260	LOAD_FAST(arg=8, lineno=729)
         262	LOAD_FAST(arg=9, lineno=729)
         264	BINARY_OP(arg=0, lineno=729)
         268	LOAD_FAST(arg=7, lineno=729)
         270	COMPARE_OP(arg=40, lineno=729)
         274	POP_JUMP_IF_TRUE(arg=2, lineno=729)
         276	LOAD_ASSERTION_ERROR(arg=None, lineno=729)
         278	RAISE_VARARGS(arg=1, lineno=729)
>        280	LOAD_FAST(arg=3, lineno=730)
         282	LOAD_FAST(arg=0, lineno=730)
         284	COPY(arg=2, lineno=730)
         286	COPY(arg=2, lineno=730)
         288	BINARY_SUBSCR(arg=None, lineno=730)
         292	LOAD_FAST(arg=1, lineno=730)
         294	BINARY_OP(arg=13, lineno=730)
         298	SWAP(arg=3, lineno=730)
         300	SWAP(arg=2, lineno=730)
         302	STORE_SUBSCR(arg=None, lineno=730)
         306	LOAD_GLOBAL(arg=3, lineno=731)
         316	LOAD_FAST(arg=5, lineno=731)
         318	LOAD_FAST(arg=3, lineno=731)
         320	LOAD_FAST(arg=0, lineno=731)
         322	BINARY_SUBSCR(arg=None, lineno=731)
         326	LOAD_FAST(arg=8, lineno=731)
         328	BINARY_OP(arg=5, lineno=731)
         332	LOAD_FAST(arg=7, lineno=731)
         334	BINARY_OP(arg=11, lineno=731)
         338	LOAD_FAST(arg=2, lineno=731)
         340	LOAD_FAST(arg=3, lineno=731)
         342	LOAD_FAST(arg=4, lineno=731)
         344	CALL(arg=5, lineno=731)
         352	POP_TOP(arg=None, lineno=731)
         354	LOAD_GLOBAL(arg=3, lineno=732)
         364	LOAD_FAST(arg=6, lineno=732)
         366	LOAD_FAST(arg=3, lineno=732)
         368	LOAD_FAST(arg=0, lineno=732)
         370	BINARY_SUBSCR(arg=None, lineno=732)
         374	LOAD_FAST(arg=9, lineno=732)
         376	BINARY_OP(arg=5, lineno=732)
         380	LOAD_FAST(arg=7, lineno=732)
         382	BINARY_OP(arg=11, lineno=732)
         386	LOAD_FAST(arg=2, lineno=732)
         388	LOAD_FAST(arg=3, lineno=732)
         390	LOAD_FAST(arg=4, lineno=732)
         392	CALL(arg=5, lineno=732)
         400	POP_TOP(arg=None, lineno=732)
         402	RETURN_CONST(arg=0, lineno=732)
2025-07-23 17:16:41,314 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:41,318 - DEBUG - stack: []
2025-07-23 17:16:41,318 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=719)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=719)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=721)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=721)
2025-07-23 17:16:41,318 - DEBUG - stack ['$i4.0']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=721)
2025-07-23 17:16:41,318 - DEBUG - stack ['$i4.0', '$M6.1']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=14, lineno=721)
2025-07-23 17:16:41,318 - DEBUG - stack ['$8compare_op.2']
2025-07-23 17:16:41,318 - DEBUG - end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:41,318 - DEBUG - pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:16:41,318 - DEBUG - stack: []
2025-07-23 17:16:41,318 - DEBUG - state.pc_initial: State(pc_initial=14 nstack_initial=0)
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=18, inst=COPY(arg=2, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=20, inst=COPY(arg=2, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1', '$values14.0']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1', '$values14.0', '$i16.1']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1', '$22binary_subscr.2']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=28, inst=BINARY_OP(arg=13, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1', '$22binary_subscr.2', '$value26.3']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=32, inst=SWAP(arg=3, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$values14.0', '$i16.1', '$binop_iadd28.4']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=34, inst=SWAP(arg=2, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$binop_iadd28.4', '$i16.1', '$values14.0']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=36, inst=STORE_SUBSCR(arg=None, lineno=722)
2025-07-23 17:16:41,318 - DEBUG - stack ['$binop_iadd28.4', '$values14.0', '$i16.1']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=40, inst=RETURN_CONST(arg=0, lineno=723)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - end state. edges=[]
2025-07-23 17:16:41,318 - DEBUG - pending: deque([State(pc_initial=42 nstack_initial=0)])
2025-07-23 17:16:41,318 - DEBUG - stack: []
2025-07-23 17:16:41,318 - DEBUG - state.pc_initial: State(pc_initial=42 nstack_initial=0)
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=1, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$i54.3']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=58, inst=BINARY_OP(arg=10, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$i54.3', '$M56.4']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$binop_sub58.5']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$binop_sub58.5', '$const62.6.1']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$clustering52.2', '$64build_tuple.7']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=70, inst=CALL(arg=1, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$42.1', '$42load_global.0', '$66binary_subscr.8']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=78, inst=STORE_FAST(arg=5, lineno=724)
2025-07-23 17:16:41,318 - DEBUG - stack ['$70call.9']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=80, inst=LOAD_GLOBAL(arg=1, lineno=725)
2025-07-23 17:16:41,318 - DEBUG - stack []
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=725)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$80.11', '$80load_global.10']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=0, lineno=725)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=2, lineno=725)
2025-07-23 17:16:41,318 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$i92.13']
2025-07-23 17:16:41,318 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=10, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$i92.13', '$M94.14']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=2, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$binop_sub96.15']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=102, inst=BUILD_TUPLE(arg=2, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$binop_sub96.15', '$const100.16.2']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$clustering90.12', '$102build_tuple.17']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=108, inst=CALL(arg=1, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$80.11', '$80load_global.10', '$104binary_subscr.18']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=116, inst=STORE_FAST(arg=6, lineno=725)
2025-07-23 17:16:41,328 - DEBUG - stack ['$108call.19']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=726)
2025-07-23 17:16:41,328 - DEBUG - stack []
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=4, lineno=726)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$118.21', '$118load_global.20']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=0, lineno=726)
2025-07-23 17:16:41,328 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22']
2025-07-23 17:16:41,328 - DEBUG - dispatch pc=132, inst=LOAD_FAST(arg=2, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$i130.23']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=134, inst=BINARY_OP(arg=10, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$i130.23', '$M132.24']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=138, inst=LOAD_CONST(arg=3, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$binop_sub134.25']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=140, inst=BUILD_TUPLE(arg=2, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$binop_sub134.25', '$const138.26.3']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$clustering128.22', '$140build_tuple.27']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=146, inst=CALL(arg=1, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$118.21', '$118load_global.20', '$142binary_subscr.28']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=154, inst=STORE_FAST(arg=7, lineno=726)
2025-07-23 17:16:41,330 - DEBUG - stack ['$146call.29']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=5, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack []
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=2, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$li156.30']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=160, inst=COMPARE_OP(arg=92, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$li156.30', '$M158.31']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=164, inst=POP_JUMP_IF_FALSE(arg=19, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$160compare_op.32']
2025-07-23 17:16:41,330 - DEBUG - end state. edges=[Edge(pc=166, stack=(), blockstack=(), npush=0), Edge(pc=204, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:41,330 - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=0), State(pc_initial=204 nstack_initial=0)])
2025-07-23 17:16:41,330 - DEBUG - stack: []
2025-07-23 17:16:41,330 - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=0)
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=166, inst=LOAD_GLOBAL(arg=1, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack []
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=5, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$li178.3']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=182, inst=BINARY_OP(arg=10, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$li178.3', '$M180.4']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=3, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$binop_sub182.5']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=188, inst=BUILD_TUPLE(arg=2, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$binop_sub182.5', '$const186.6.3']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$clustering176.2', '$188build_tuple.7']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=194, inst=CALL(arg=1, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$null$166.1', '$166load_global.0', '$190binary_subscr.8']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=202, inst=JUMP_FORWARD(arg=1, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$194call.9']
2025-07-23 17:16:41,330 - DEBUG - end state. edges=[Edge(pc=206, stack=('$194call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:41,330 - DEBUG - pending: deque([State(pc_initial=204 nstack_initial=0), State(pc_initial=206 nstack_initial=1)])
2025-07-23 17:16:41,330 - DEBUG - stack: []
2025-07-23 17:16:41,330 - DEBUG - state.pc_initial: State(pc_initial=204 nstack_initial=0)
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=2, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack []
2025-07-23 17:16:41,330 - DEBUG - end state. edges=[Edge(pc=206, stack=('$const204.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:41,330 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=206 nstack_initial=1)])
2025-07-23 17:16:41,330 - DEBUG - stack: ['$phi206.0']
2025-07-23 17:16:41,330 - DEBUG - state.pc_initial: State(pc_initial=206 nstack_initial=1)
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=206, inst=STORE_FAST(arg=8, lineno=727)
2025-07-23 17:16:41,330 - DEBUG - stack ['$phi206.0']
2025-07-23 17:16:41,330 - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=6, lineno=728)
2025-07-23 17:16:41,330 - DEBUG - stack []
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=2, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$ri208.1']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=212, inst=COMPARE_OP(arg=92, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$ri208.1', '$M210.2']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=216, inst=POP_JUMP_IF_FALSE(arg=19, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$212compare_op.3']
2025-07-23 17:16:41,338 - DEBUG - end state. edges=[Edge(pc=218, stack=(), blockstack=(), npush=0), Edge(pc=256, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=218 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=218 nstack_initial=0), State(pc_initial=256 nstack_initial=0)])
2025-07-23 17:16:41,338 - DEBUG - stack: []
2025-07-23 17:16:41,338 - DEBUG - state.pc_initial: State(pc_initial=218 nstack_initial=0)
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack []
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=4, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=6, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=2, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$ri230.3']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$ri230.3', '$M232.4']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=238, inst=LOAD_CONST(arg=3, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$binop_sub234.5']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=240, inst=BUILD_TUPLE(arg=2, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$binop_sub234.5', '$const238.6.3']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=242, inst=BINARY_SUBSCR(arg=None, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$clustering228.2', '$240build_tuple.7']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=246, inst=CALL(arg=1, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$null$218.1', '$218load_global.0', '$242binary_subscr.8']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=254, inst=JUMP_FORWARD(arg=1, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$246call.9']
2025-07-23 17:16:41,338 - DEBUG - end state. edges=[Edge(pc=258, stack=('$246call.9',), blockstack=(), npush=0)]
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=256 nstack_initial=0), State(pc_initial=258 nstack_initial=1)])
2025-07-23 17:16:41,338 - DEBUG - stack: []
2025-07-23 17:16:41,338 - DEBUG - state.pc_initial: State(pc_initial=256 nstack_initial=0)
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=256, inst=LOAD_CONST(arg=2, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack []
2025-07-23 17:16:41,338 - DEBUG - end state. edges=[Edge(pc=258, stack=('$const256.0.2',), blockstack=(), npush=0)]
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=258 nstack_initial=1)])
2025-07-23 17:16:41,338 - DEBUG - stack: ['$phi258.0']
2025-07-23 17:16:41,338 - DEBUG - state.pc_initial: State(pc_initial=258 nstack_initial=1)
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=9, lineno=728)
2025-07-23 17:16:41,338 - DEBUG - stack ['$phi258.0']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=8, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack []
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=9, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$lsize260.1']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=264, inst=BINARY_OP(arg=0, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$lsize260.1', '$rsize262.2']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=268, inst=LOAD_FAST(arg=7, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$binop_add264.3']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=270, inst=COMPARE_OP(arg=40, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$binop_add264.3', '$group_size268.4']
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=274, inst=POP_JUMP_IF_TRUE(arg=2, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$270compare_op.5']
2025-07-23 17:16:41,338 - DEBUG - end state. edges=[Edge(pc=276, stack=(), blockstack=(), npush=0), Edge(pc=280, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=276 nstack_initial=0), State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=276 nstack_initial=0), State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,338 - DEBUG - stack: []
2025-07-23 17:16:41,338 - DEBUG - state.pc_initial: State(pc_initial=276 nstack_initial=0)
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=276, inst=LOAD_ASSERTION_ERROR(arg=None, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack []
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=278, inst=RAISE_VARARGS(arg=1, lineno=729)
2025-07-23 17:16:41,338 - DEBUG - stack ['$assertion_error276.0']
2025-07-23 17:16:41,338 - DEBUG - end state. edges=[]
2025-07-23 17:16:41,338 - DEBUG - pending: deque([State(pc_initial=280 nstack_initial=0)])
2025-07-23 17:16:41,338 - DEBUG - stack: []
2025-07-23 17:16:41,338 - DEBUG - state.pc_initial: State(pc_initial=280 nstack_initial=0)
2025-07-23 17:16:41,338 - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=3, lineno=730)
2025-07-23 17:16:41,338 - DEBUG - stack []
2025-07-23 17:16:41,346 - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=0, lineno=730)
2025-07-23 17:16:41,346 - DEBUG - stack ['$values280.0']
2025-07-23 17:16:41,346 - DEBUG - dispatch pc=284, inst=COPY(arg=2, lineno=730)
2025-07-23 17:16:41,347 - DEBUG - stack ['$values280.0', '$i282.1']
2025-07-23 17:16:41,347 - DEBUG - dispatch pc=286, inst=COPY(arg=2, lineno=730)
2025-07-23 17:16:41,347 - DEBUG - stack ['$values280.0', '$i282.1', '$values280.0']
2025-07-23 17:16:41,347 - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=730)
2025-07-23 17:16:41,347 - DEBUG - stack ['$values280.0', '$i282.1', '$values280.0', '$i282.1']
2025-07-23 17:16:41,347 - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=1, lineno=730)
2025-07-23 17:16:41,348 - DEBUG - stack ['$values280.0', '$i282.1', '$288binary_subscr.2']
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=294, inst=BINARY_OP(arg=13, lineno=730)
2025-07-23 17:16:41,348 - DEBUG - stack ['$values280.0', '$i282.1', '$288binary_subscr.2', '$value292.3']
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=298, inst=SWAP(arg=3, lineno=730)
2025-07-23 17:16:41,348 - DEBUG - stack ['$values280.0', '$i282.1', '$binop_iadd294.4']
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=300, inst=SWAP(arg=2, lineno=730)
2025-07-23 17:16:41,348 - DEBUG - stack ['$binop_iadd294.4', '$i282.1', '$values280.0']
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=302, inst=STORE_SUBSCR(arg=None, lineno=730)
2025-07-23 17:16:41,348 - DEBUG - stack ['$binop_iadd294.4', '$values280.0', '$i282.1']
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=306, inst=LOAD_GLOBAL(arg=3, lineno=731)
2025-07-23 17:16:41,348 - DEBUG - stack []
2025-07-23 17:16:41,348 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=5, lineno=731)
2025-07-23 17:16:41,348 - DEBUG - stack ['$null$306.6', '$306load_global.5']
2025-07-23 17:16:41,349 - DEBUG - dispatch pc=318, inst=LOAD_FAST(arg=3, lineno=731)
2025-07-23 17:16:41,349 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7']
2025-07-23 17:16:41,349 - DEBUG - dispatch pc=320, inst=LOAD_FAST(arg=0, lineno=731)
2025-07-23 17:16:41,349 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$values318.8']
2025-07-23 17:16:41,349 - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=731)
2025-07-23 17:16:41,351 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$values318.8', '$i320.9']
2025-07-23 17:16:41,351 - DEBUG - dispatch pc=326, inst=LOAD_FAST(arg=8, lineno=731)
2025-07-23 17:16:41,351 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$322binary_subscr.10']
2025-07-23 17:16:41,351 - DEBUG - dispatch pc=328, inst=BINARY_OP(arg=5, lineno=731)
2025-07-23 17:16:41,351 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$322binary_subscr.10', '$lsize326.11']
2025-07-23 17:16:41,352 - DEBUG - dispatch pc=332, inst=LOAD_FAST(arg=7, lineno=731)
2025-07-23 17:16:41,352 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_mul328.12']
2025-07-23 17:16:41,352 - DEBUG - dispatch pc=334, inst=BINARY_OP(arg=11, lineno=731)
2025-07-23 17:16:41,352 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_mul328.12', '$group_size332.13']
2025-07-23 17:16:41,352 - DEBUG - dispatch pc=338, inst=LOAD_FAST(arg=2, lineno=731)
2025-07-23 17:16:41,352 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14']
2025-07-23 17:16:41,352 - DEBUG - dispatch pc=340, inst=LOAD_FAST(arg=3, lineno=731)
2025-07-23 17:16:41,353 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15']
2025-07-23 17:16:41,353 - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=4, lineno=731)
2025-07-23 17:16:41,353 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16']
2025-07-23 17:16:41,353 - DEBUG - dispatch pc=344, inst=CALL(arg=5, lineno=731)
2025-07-23 17:16:41,353 - DEBUG - stack ['$null$306.6', '$306load_global.5', '$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16', '$clustering342.17']
2025-07-23 17:16:41,353 - DEBUG - dispatch pc=352, inst=POP_TOP(arg=None, lineno=731)
2025-07-23 17:16:41,354 - DEBUG - stack ['$344call.18']
2025-07-23 17:16:41,354 - DEBUG - dispatch pc=354, inst=LOAD_GLOBAL(arg=3, lineno=732)
2025-07-23 17:16:41,354 - DEBUG - stack []
2025-07-23 17:16:41,354 - DEBUG - dispatch pc=364, inst=LOAD_FAST(arg=6, lineno=732)
2025-07-23 17:16:41,354 - DEBUG - stack ['$null$354.20', '$354load_global.19']
2025-07-23 17:16:41,354 - DEBUG - dispatch pc=366, inst=LOAD_FAST(arg=3, lineno=732)
2025-07-23 17:16:41,354 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21']
2025-07-23 17:16:41,355 - DEBUG - dispatch pc=368, inst=LOAD_FAST(arg=0, lineno=732)
2025-07-23 17:16:41,355 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$values366.22']
2025-07-23 17:16:41,355 - DEBUG - dispatch pc=370, inst=BINARY_SUBSCR(arg=None, lineno=732)
2025-07-23 17:16:41,355 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$values366.22', '$i368.23']
2025-07-23 17:16:41,355 - DEBUG - dispatch pc=374, inst=LOAD_FAST(arg=9, lineno=732)
2025-07-23 17:16:41,355 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$370binary_subscr.24']
2025-07-23 17:16:41,356 - DEBUG - dispatch pc=376, inst=BINARY_OP(arg=5, lineno=732)
2025-07-23 17:16:41,356 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$370binary_subscr.24', '$rsize374.25']
2025-07-23 17:16:41,356 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=7, lineno=732)
2025-07-23 17:16:41,356 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_mul376.26']
2025-07-23 17:16:41,356 - DEBUG - dispatch pc=382, inst=BINARY_OP(arg=11, lineno=732)
2025-07-23 17:16:41,356 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_mul376.26', '$group_size380.27']
2025-07-23 17:16:41,356 - DEBUG - dispatch pc=386, inst=LOAD_FAST(arg=2, lineno=732)
2025-07-23 17:16:41,357 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28']
2025-07-23 17:16:41,357 - DEBUG - dispatch pc=388, inst=LOAD_FAST(arg=3, lineno=732)
2025-07-23 17:16:41,357 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29']
2025-07-23 17:16:41,357 - DEBUG - dispatch pc=390, inst=LOAD_FAST(arg=4, lineno=732)
2025-07-23 17:16:41,357 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30']
2025-07-23 17:16:41,357 - DEBUG - dispatch pc=392, inst=CALL(arg=5, lineno=732)
2025-07-23 17:16:41,357 - DEBUG - stack ['$null$354.20', '$354load_global.19', '$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30', '$clustering390.31']
2025-07-23 17:16:41,357 - DEBUG - dispatch pc=400, inst=POP_TOP(arg=None, lineno=732)
2025-07-23 17:16:41,358 - DEBUG - stack ['$392call.32']
2025-07-23 17:16:41,358 - DEBUG - dispatch pc=402, inst=RETURN_CONST(arg=0, lineno=732)
2025-07-23 17:16:41,358 - DEBUG - stack []
2025-07-23 17:16:41,358 - DEBUG - end state. edges=[]
2025-07-23 17:16:41,359 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:41,359 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=166 nstack_initial=0): set(),
             State(pc_initial=204 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=1): {'$phi206.0'},
             State(pc_initial=218 nstack_initial=0): set(),
             State(pc_initial=256 nstack_initial=0): set(),
             State(pc_initial=258 nstack_initial=1): {'$phi258.0'},
             State(pc_initial=276 nstack_initial=0): set(),
             State(pc_initial=280 nstack_initial=0): set()})
2025-07-23 17:16:41,359 - DEBUG - defmap: {'$phi206.0': State(pc_initial=166 nstack_initial=0),
 '$phi258.0': State(pc_initial=256 nstack_initial=0)}
2025-07-23 17:16:41,360 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi206.0': {('$194call.9',
                            State(pc_initial=166 nstack_initial=0)),
                           ('$const204.0.2',
                            State(pc_initial=204 nstack_initial=0))},
             '$phi258.0': {('$246call.9',
                            State(pc_initial=218 nstack_initial=0)),
                           ('$const256.0.2',
                            State(pc_initial=256 nstack_initial=0))}})
2025-07-23 17:16:41,360 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi206.0': {('$194call.9',
                            State(pc_initial=166 nstack_initial=0)),
                           ('$const204.0.2',
                            State(pc_initial=204 nstack_initial=0))},
             '$phi258.0': {('$246call.9',
                            State(pc_initial=218 nstack_initial=0)),
                           ('$const256.0.2',
                            State(pc_initial=256 nstack_initial=0))}})
2025-07-23 17:16:41,360 - DEBUG - keep phismap: {'$phi206.0': {('$194call.9', State(pc_initial=166 nstack_initial=0)),
               ('$const204.0.2', State(pc_initial=204 nstack_initial=0))},
 '$phi258.0': {('$246call.9', State(pc_initial=218 nstack_initial=0)),
               ('$const256.0.2', State(pc_initial=256 nstack_initial=0))}}
2025-07-23 17:16:41,360 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=166 nstack_initial=0): {'$phi206.0': '$194call.9'},
             State(pc_initial=204 nstack_initial=0): {'$phi206.0': '$const204.0.2'},
             State(pc_initial=218 nstack_initial=0): {'$phi258.0': '$246call.9'},
             State(pc_initial=256 nstack_initial=0): {'$phi258.0': '$const256.0.2'}})
2025-07-23 17:16:41,361 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:41,361 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$i4.0'}), (6, {'res': '$M6.1'}), (8, {'lhs': '$i4.0', 'rhs': '$M6.1', 'res': '$8compare_op.2'}), (12, {'pred': '$8compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 42: ()})
2025-07-23 17:16:41,361 - DEBUG - block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$values14.0'}), (16, {'res': '$i16.1'}), (22, {'index': '$i16.1', 'target': '$values14.0', 'res': '$22binary_subscr.2'}), (26, {'res': '$value26.3'}), (28, {'op': '+=', 'lhs': '$22binary_subscr.2', 'rhs': '$value26.3', 'res': '$binop_iadd28.4'}), (36, {'target': '$values14.0', 'index': '$i16.1', 'value': '$binop_iadd28.4'}), (40, {'retval': '$const40.5', 'castval': '$40return_const.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,361 - DEBUG - block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'idx': 0, 'res': '$42load_global.0'}), (52, {'res': '$clustering52.2'}), (54, {'res': '$i54.3'}), (56, {'res': '$M56.4'}), (58, {'op': '-', 'lhs': '$i54.3', 'rhs': '$M56.4', 'res': '$binop_sub58.5'}), (62, {'res': '$const62.6.1'}), (64, {'items': ['$binop_sub58.5', '$const62.6.1'], 'res': '$64build_tuple.7'}), (66, {'index': '$64build_tuple.7', 'target': '$clustering52.2', 'res': '$66binary_subscr.8'}), (70, {'func': '$42load_global.0', 'args': ['$66binary_subscr.8'], 'kw_names': None, 'res': '$70call.9'}), (78, {'value': '$70call.9'}), (80, {'idx': 0, 'res': '$80load_global.10'}), (90, {'res': '$clustering90.12'}), (92, {'res': '$i92.13'}), (94, {'res': '$M94.14'}), (96, {'op': '-', 'lhs': '$i92.13', 'rhs': '$M94.14', 'res': '$binop_sub96.15'}), (100, {'res': '$const100.16.2'}), (102, {'items': ['$binop_sub96.15', '$const100.16.2'], 'res': '$102build_tuple.17'}), (104, {'index': '$102build_tuple.17', 'target': '$clustering90.12', 'res': '$104binary_subscr.18'}), (108, {'func': '$80load_global.10', 'args': ['$104binary_subscr.18'], 'kw_names': None, 'res': '$108call.19'}), (116, {'value': '$108call.19'}), (118, {'idx': 0, 'res': '$118load_global.20'}), (128, {'res': '$clustering128.22'}), (130, {'res': '$i130.23'}), (132, {'res': '$M132.24'}), (134, {'op': '-', 'lhs': '$i130.23', 'rhs': '$M132.24', 'res': '$binop_sub134.25'}), (138, {'res': '$const138.26.3'}), (140, {'items': ['$binop_sub134.25', '$const138.26.3'], 'res': '$140build_tuple.27'}), (142, {'index': '$140build_tuple.27', 'target': '$clustering128.22', 'res': '$142binary_subscr.28'}), (146, {'func': '$118load_global.20', 'args': ['$142binary_subscr.28'], 'kw_names': None, 'res': '$146call.29'}), (154, {'value': '$146call.29'}), (156, {'res': '$li156.30'}), (158, {'res': '$M158.31'}), (160, {'lhs': '$li156.30', 'rhs': '$M158.31', 'res': '$160compare_op.32'}), (164, {'pred': '$160compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: (), 204: ()})
2025-07-23 17:16:41,362 - DEBUG - block_infos State(pc_initial=166 nstack_initial=0):
AdaptBlockInfo(insts=((166, {'idx': 0, 'res': '$166load_global.0'}), (176, {'res': '$clustering176.2'}), (178, {'res': '$li178.3'}), (180, {'res': '$M180.4'}), (182, {'op': '-', 'lhs': '$li178.3', 'rhs': '$M180.4', 'res': '$binop_sub182.5'}), (186, {'res': '$const186.6.3'}), (188, {'items': ['$binop_sub182.5', '$const186.6.3'], 'res': '$188build_tuple.7'}), (190, {'index': '$188build_tuple.7', 'target': '$clustering176.2', 'res': '$190binary_subscr.8'}), (194, {'func': '$166load_global.0', 'args': ['$190binary_subscr.8'], 'kw_names': None, 'res': '$194call.9'}), (202, {})), outgoing_phis={'$phi206.0': '$194call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ('$194call.9',)})
2025-07-23 17:16:41,362 - DEBUG - block_infos State(pc_initial=204 nstack_initial=0):
AdaptBlockInfo(insts=((204, {'res': '$const204.0.2'}),), outgoing_phis={'$phi206.0': '$const204.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ('$const204.0.2',)})
2025-07-23 17:16:41,362 - DEBUG - block_infos State(pc_initial=206 nstack_initial=1):
AdaptBlockInfo(insts=((206, {'value': '$phi206.0'}), (208, {'res': '$ri208.1'}), (210, {'res': '$M210.2'}), (212, {'lhs': '$ri208.1', 'rhs': '$M210.2', 'res': '$212compare_op.3'}), (216, {'pred': '$212compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={218: (), 256: ()})
2025-07-23 17:16:41,362 - DEBUG - block_infos State(pc_initial=218 nstack_initial=0):
AdaptBlockInfo(insts=((218, {'idx': 0, 'res': '$218load_global.0'}), (228, {'res': '$clustering228.2'}), (230, {'res': '$ri230.3'}), (232, {'res': '$M232.4'}), (234, {'op': '-', 'lhs': '$ri230.3', 'rhs': '$M232.4', 'res': '$binop_sub234.5'}), (238, {'res': '$const238.6.3'}), (240, {'items': ['$binop_sub234.5', '$const238.6.3'], 'res': '$240build_tuple.7'}), (242, {'index': '$240build_tuple.7', 'target': '$clustering228.2', 'res': '$242binary_subscr.8'}), (246, {'func': '$218load_global.0', 'args': ['$242binary_subscr.8'], 'kw_names': None, 'res': '$246call.9'}), (254, {})), outgoing_phis={'$phi258.0': '$246call.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$246call.9',)})
2025-07-23 17:16:41,362 - DEBUG - block_infos State(pc_initial=256 nstack_initial=0):
AdaptBlockInfo(insts=((256, {'res': '$const256.0.2'}),), outgoing_phis={'$phi258.0': '$const256.0.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$const256.0.2',)})
2025-07-23 17:16:41,363 - DEBUG - block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'value': '$phi258.0'}), (260, {'res': '$lsize260.1'}), (262, {'res': '$rsize262.2'}), (264, {'op': '+', 'lhs': '$lsize260.1', 'rhs': '$rsize262.2', 'res': '$binop_add264.3'}), (268, {'res': '$group_size268.4'}), (270, {'lhs': '$binop_add264.3', 'rhs': '$group_size268.4', 'res': '$270compare_op.5'}), (274, {'pred': '$270compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: (), 280: ()})
2025-07-23 17:16:41,363 - DEBUG - block_infos State(pc_initial=276 nstack_initial=0):
AdaptBlockInfo(insts=((276, {'res': '$assertion_error276.0'}), (278, {'exc': '$assertion_error276.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,363 - DEBUG - block_infos State(pc_initial=280 nstack_initial=0):
AdaptBlockInfo(insts=((280, {'res': '$values280.0'}), (282, {'res': '$i282.1'}), (288, {'index': '$i282.1', 'target': '$values280.0', 'res': '$288binary_subscr.2'}), (292, {'res': '$value292.3'}), (294, {'op': '+=', 'lhs': '$288binary_subscr.2', 'rhs': '$value292.3', 'res': '$binop_iadd294.4'}), (302, {'target': '$values280.0', 'index': '$i282.1', 'value': '$binop_iadd294.4'}), (306, {'idx': 1, 'res': '$306load_global.5'}), (316, {'res': '$li316.7'}), (318, {'res': '$values318.8'}), (320, {'res': '$i320.9'}), (322, {'index': '$i320.9', 'target': '$values318.8', 'res': '$322binary_subscr.10'}), (326, {'res': '$lsize326.11'}), (328, {'op': '*', 'lhs': '$322binary_subscr.10', 'rhs': '$lsize326.11', 'res': '$binop_mul328.12'}), (332, {'res': '$group_size332.13'}), (334, {'op': '/', 'lhs': '$binop_mul328.12', 'rhs': '$group_size332.13', 'res': '$binop_truediv334.14'}), (338, {'res': '$M338.15'}), (340, {'res': '$values340.16'}), (342, {'res': '$clustering342.17'}), (344, {'func': '$306load_global.5', 'args': ['$li316.7', '$binop_truediv334.14', '$M338.15', '$values340.16', '$clustering342.17'], 'kw_names': None, 'res': '$344call.18'}), (354, {'idx': 1, 'res': '$354load_global.19'}), (364, {'res': '$ri364.21'}), (366, {'res': '$values366.22'}), (368, {'res': '$i368.23'}), (370, {'index': '$i368.23', 'target': '$values366.22', 'res': '$370binary_subscr.24'}), (374, {'res': '$rsize374.25'}), (376, {'op': '*', 'lhs': '$370binary_subscr.24', 'rhs': '$rsize374.25', 'res': '$binop_mul376.26'}), (380, {'res': '$group_size380.27'}), (382, {'op': '/', 'lhs': '$binop_mul376.26', 'rhs': '$group_size380.27', 'res': '$binop_truediv382.28'}), (386, {'res': '$M386.29'}), (388, {'res': '$values388.30'}), (390, {'res': '$clustering390.31'}), (392, {'func': '$354load_global.19', 'args': ['$ri364.21', '$binop_truediv382.28', '$M386.29', '$values388.30', '$clustering390.31'], 'kw_names': None, 'res': '$392call.32'}), (402, {'retval': '$const402.33', 'castval': '$402return_const.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:41,365 - DEBUG - label 0:
    i = arg(0, name=i)                       ['i']
    value = arg(1, name=value)               ['value']
    M = arg(2, name=M)                       ['M']
    values = arg(3, name=values)             ['values']
    clustering = arg(4, name=clustering)     ['clustering']
    $8compare_op.2 = i < M                   ['$8compare_op.2', 'M', 'i']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None) ['$12pred', '$8compare_op.2', 'bool12']
    branch $12pred, 14, 42                   ['$12pred']
label 14:
    $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$22binary_subscr.2', 'i', 'values']
    $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined) ['$22binary_subscr.2', '$binop_iadd28.4', 'value']
    values[i] = $binop_iadd28.4              ['$binop_iadd28.4', 'i', 'values']
    $const40.5 = const(NoneType, None)       ['$const40.5']
    $40return_const.6 = cast(value=$const40.5) ['$40return_const.6', '$const40.5']
    return $40return_const.6                 ['$40return_const.6']
label 42:
    $42load_global.0 = global(int: <class 'int'>) ['$42load_global.0']
    $binop_sub58.5 = i - M                   ['$binop_sub58.5', 'M', 'i']
    $const62.6.1 = const(int, 0)             ['$const62.6.1']
    $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)]) ['$64build_tuple.7', '$binop_sub58.5', '$const62.6.1']
    $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>) ['$64build_tuple.7', '$66binary_subscr.8', 'clustering']
    li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.0', '$66binary_subscr.8', 'li']
    $80load_global.10 = global(int: <class 'int'>) ['$80load_global.10']
    $binop_sub96.15 = i - M                  ['$binop_sub96.15', 'M', 'i']
    $const100.16.2 = const(int, 1)           ['$const100.16.2']
    $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)]) ['$102build_tuple.17', '$binop_sub96.15', '$const100.16.2']
    $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>) ['$102build_tuple.17', '$104binary_subscr.18', 'clustering']
    ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None) ['$104binary_subscr.18', '$80load_global.10', 'ri']
    $118load_global.20 = global(int: <class 'int'>) ['$118load_global.20']
    $binop_sub134.25 = i - M                 ['$binop_sub134.25', 'M', 'i']
    $const138.26.3 = const(int, 3)           ['$const138.26.3']
    $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)]) ['$140build_tuple.27', '$binop_sub134.25', '$const138.26.3']
    $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>) ['$140build_tuple.27', '$142binary_subscr.28', 'clustering']
    group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None) ['$118load_global.20', '$142binary_subscr.28', 'group_size']
    $160compare_op.32 = li >= M              ['$160compare_op.32', 'M', 'li']
    bool164 = global(bool: <class 'bool'>)   ['bool164']
    $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None) ['$160compare_op.32', '$164pred', 'bool164']
    branch $164pred, 166, 204                ['$164pred']
label 166:
    $166load_global.0 = global(int: <class 'int'>) ['$166load_global.0']
    $binop_sub182.5 = li - M                 ['$binop_sub182.5', 'M', 'li']
    $const186.6.3 = const(int, 3)            ['$const186.6.3']
    $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)]) ['$188build_tuple.7', '$binop_sub182.5', '$const186.6.3']
    $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>) ['$188build_tuple.7', '$190binary_subscr.8', 'clustering']
    $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_global.0', '$190binary_subscr.8', '$194call.9']
    $phi206.0 = $194call.9                   ['$194call.9', '$phi206.0']
    jump 206                                 []
label 204:
    $const204.0.2 = const(int, 1)            ['$const204.0.2']
    $phi206.0 = $const204.0.2                ['$const204.0.2', '$phi206.0']
    jump 206                                 []
label 206:
    lsize = $phi206.0                        ['$phi206.0', 'lsize']
    $212compare_op.3 = ri >= M               ['$212compare_op.3', 'M', 'ri']
    bool216 = global(bool: <class 'bool'>)   ['bool216']
    $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None) ['$212compare_op.3', '$216pred', 'bool216']
    branch $216pred, 218, 256                ['$216pred']
label 218:
    $218load_global.0 = global(int: <class 'int'>) ['$218load_global.0']
    $binop_sub234.5 = ri - M                 ['$binop_sub234.5', 'M', 'ri']
    $const238.6.3 = const(int, 3)            ['$const238.6.3']
    $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)]) ['$240build_tuple.7', '$binop_sub234.5', '$const238.6.3']
    $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>) ['$240build_tuple.7', '$242binary_subscr.8', 'clustering']
    $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.0', '$242binary_subscr.8', '$246call.9']
    $phi258.0 = $246call.9                   ['$246call.9', '$phi258.0']
    jump 258                                 []
label 256:
    $const256.0.2 = const(int, 1)            ['$const256.0.2']
    $phi258.0 = $const256.0.2                ['$const256.0.2', '$phi258.0']
    jump 258                                 []
label 258:
    rsize = $phi258.0                        ['$phi258.0', 'rsize']
    $binop_add264.3 = lsize + rsize          ['$binop_add264.3', 'lsize', 'rsize']
    $270compare_op.5 = $binop_add264.3 == group_size ['$270compare_op.5', '$binop_add264.3', 'group_size']
    bool274 = global(bool: <class 'bool'>)   ['bool274']
    $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None) ['$270compare_op.5', '$274pred', 'bool274']
    branch $274pred, 280, 276                ['$274pred']
label 276:
    $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>) ['$assertion_error276.0']
    raise $assertion_error276.0              ['$assertion_error276.0']
label 280:
    $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$288binary_subscr.2', 'i', 'values']
    $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined) ['$288binary_subscr.2', '$binop_iadd294.4', 'value']
    values[i] = $binop_iadd294.4             ['$binop_iadd294.4', 'i', 'values']
    $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)) ['$306load_global.5']
    $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$322binary_subscr.10', 'i', 'values']
    $binop_mul328.12 = $322binary_subscr.10 * lsize ['$322binary_subscr.10', '$binop_mul328.12', 'lsize']
    $binop_truediv334.14 = $binop_mul328.12 / group_size ['$binop_mul328.12', '$binop_truediv334.14', 'group_size']
    $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None) ['$306load_global.5', '$344call.18', '$binop_truediv334.14', 'M', 'clustering', 'li', 'values']
    $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)) ['$354load_global.19']
    $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>) ['$370binary_subscr.24', 'i', 'values']
    $binop_mul376.26 = $370binary_subscr.24 * rsize ['$370binary_subscr.24', '$binop_mul376.26', 'rsize']
    $binop_truediv382.28 = $binop_mul376.26 / group_size ['$binop_mul376.26', '$binop_truediv382.28', 'group_size']
    $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None) ['$354load_global.19', '$392call.32', '$binop_truediv382.28', 'M', 'clustering', 'ri', 'values']
    $const402.33 = const(NoneType, None)     ['$const402.33']
    $402return_const.34 = cast(value=$const402.33) ['$402return_const.34', '$const402.33']
    return $402return_const.34               ['$402return_const.34']

2025-07-23 17:16:41,408 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:41,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,408 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,408 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,408 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,408 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,408 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,408 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,408 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,408 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,408 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,408 - DEBUG - ==== SSA block analysis pass on 14
2025-07-23 17:16:41,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,408 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,408 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,408 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,408 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,408 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,415 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,415 - DEBUG - ==== SSA block analysis pass on 42
2025-07-23 17:16:41,415 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,415 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,415 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,415 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,415 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,415 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,415 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,415 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,415 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,415 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,418 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,418 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,418 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,418 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,418 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,418 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,418 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,418 - DEBUG - ==== SSA block analysis pass on 166
2025-07-23 17:16:41,418 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,420 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,420 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,420 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,420 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,420 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,420 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,420 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,421 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,421 - DEBUG - ==== SSA block analysis pass on 204
2025-07-23 17:16:41,421 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,421 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,421 - DEBUG - on stmt: $phi206.0 = $const204.0.2
2025-07-23 17:16:41,421 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,421 - DEBUG - ==== SSA block analysis pass on 206
2025-07-23 17:16:41,421 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,421 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,421 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,422 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,422 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,422 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,422 - DEBUG - ==== SSA block analysis pass on 218
2025-07-23 17:16:41,422 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,422 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,422 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,422 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,423 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,423 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,423 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,423 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,423 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,423 - DEBUG - ==== SSA block analysis pass on 256
2025-07-23 17:16:41,423 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,423 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,424 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,424 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,424 - DEBUG - ==== SSA block analysis pass on 258
2025-07-23 17:16:41,424 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,424 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,424 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,424 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,424 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,424 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,425 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,425 - DEBUG - ==== SSA block analysis pass on 276
2025-07-23 17:16:41,425 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,425 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,425 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,425 - DEBUG - ==== SSA block analysis pass on 280
2025-07-23 17:16:41,425 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6E8353200>
2025-07-23 17:16:41,426 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,426 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,426 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,426 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,426 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,426 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,426 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,426 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,427 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,427 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,427 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,427 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,427 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,427 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,427 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,427 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,428 - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_tuple.17': [(<numba.core.ir.Assign object at 0x000001F6E8340D10>,
                                     42)],
             '$104binary_subscr.18': [(<numba.core.ir.Assign object at 0x000001F6E8340E90>,
                                       42)],
             '$118load_global.20': [(<numba.core.ir.Assign object at 0x000001F6E8341220>,
                                     42)],
             '$12pred': [(<numba.core.ir.Assign object at 0x000001F6E831CD40>,
                          0)],
             '$140build_tuple.27': [(<numba.core.ir.Assign object at 0x000001F6E8341880>,
                                     42)],
             '$142binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001F6E8341A00>,
                                       42)],
             '$160compare_op.32': [(<numba.core.ir.Assign object at 0x000001F6E8341FA0>,
                                    42)],
             '$164pred': [(<numba.core.ir.Assign object at 0x000001F6E8342210>,
                           42)],
             '$166load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E83402F0>,
                                    166)],
             '$188build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E83425D0>,
                                    166)],
             '$190binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E8342720>,
                                      166)],
             '$194call.9': [(<numba.core.ir.Assign object at 0x000001F6E83428A0>,
                             166)],
             '$212compare_op.3': [(<numba.core.ir.Assign object at 0x000001F6E8342FC0>,
                                   206)],
             '$216pred': [(<numba.core.ir.Assign object at 0x000001F6E8343230>,
                           206)],
             '$218load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E83433B0>,
                                    218)],
             '$22binary_subscr.2': [(<numba.core.ir.Assign object at 0x000001F6E831DDC0>,
                                     14)],
             '$240build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E8343A70>,
                                    218)],
             '$242binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E8343BF0>,
                                      218)],
             '$246call.9': [(<numba.core.ir.Assign object at 0x000001F6E8343D70>,
                             218)],
             '$270compare_op.5': [(<numba.core.ir.Assign object at 0x000001F6E8350710>,
                                   258)],
             '$274pred': [(<numba.core.ir.Assign object at 0x000001F6E8350980>,
                           258)],
             '$288binary_subscr.2': [(<numba.core.ir.Assign object at 0x000001F6E8350EF0>,
                                      280)],
             '$306load_global.5': [(<numba.core.ir.Assign object at 0x000001F6E8351280>,
                                    280)],
             '$322binary_subscr.10': [(<numba.core.ir.Assign object at 0x000001F6E83516D0>,
                                       280)],
             '$344call.18': [(<numba.core.ir.Assign object at 0x000001F6E8351FA0>,
                              280)],
             '$354load_global.19': [(<numba.core.ir.Assign object at 0x000001F6E83520C0>,
                                     280)],
             '$370binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001F6E8352510>,
                                       280)],
             '$392call.32': [(<numba.core.ir.Assign object at 0x000001F6E8352DE0>,
                              280)],
             '$402return_const.34': [(<numba.core.ir.Assign object at 0x000001F6E8353020>,
                                      280)],
             '$40return_const.6': [(<numba.core.ir.Assign object at 0x000001F6E831CC50>,
                                    14)],
             '$42load_global.0': [(<numba.core.ir.Assign object at 0x000001F6E831DCA0>,
                                   42)],
             '$64build_tuple.7': [(<numba.core.ir.Assign object at 0x000001F6E831FF50>,
                                   42)],
             '$66binary_subscr.8': [(<numba.core.ir.Assign object at 0x000001F6E83403B0>,
                                     42)],
             '$80load_global.10': [(<numba.core.ir.Assign object at 0x000001F6E83409E0>,
                                    42)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6E83338C0>,
                                 0)],
             '$assertion_error276.0': [(<numba.core.ir.Assign object at 0x000001F6E8350AA0>,
                                        276)],
             '$binop_add264.3': [(<numba.core.ir.Assign object at 0x000001F6E83504D0>,
                                  258)],
             '$binop_iadd28.4': [(<numba.core.ir.Assign object at 0x000001F6E831DE80>,
                                  14)],
             '$binop_iadd294.4': [(<numba.core.ir.Assign object at 0x000001F6E8351130>,
                                   280)],
             '$binop_mul328.12': [(<numba.core.ir.Assign object at 0x000001F6E8351910>,
                                   280)],
             '$binop_mul376.26': [(<numba.core.ir.Assign object at 0x000001F6E8352750>,
                                   280)],
             '$binop_sub134.25': [(<numba.core.ir.Assign object at 0x000001F6E8341640>,
                                   42)],
             '$binop_sub182.5': [(<numba.core.ir.Assign object at 0x000001F6E8342360>,
                                  166)],
             '$binop_sub234.5': [(<numba.core.ir.Assign object at 0x000001F6E8343800>,
                                  218)],
             '$binop_sub58.5': [(<numba.core.ir.Assign object at 0x000001F6E831FE30>,
                                 42)],
             '$binop_sub96.15': [(<numba.core.ir.Assign object at 0x000001F6E83400B0>,
                                  42)],
             '$binop_truediv334.14': [(<numba.core.ir.Assign object at 0x000001F6E8351B50>,
                                       280)],
             '$binop_truediv382.28': [(<numba.core.ir.Assign object at 0x000001F6E8352990>,
                                       280)],
             '$const100.16.2': [(<numba.core.ir.Assign object at 0x000001F6E8340BC0>,
                                 42)],
             '$const138.26.3': [(<numba.core.ir.Assign object at 0x000001F6E8341730>,
                                 42)],
             '$const186.6.3': [(<numba.core.ir.Assign object at 0x000001F6E8342480>,
                                166)],
             '$const204.0.2': [(<numba.core.ir.Assign object at 0x000001F6E8342A50>,
                                204)],
             '$const238.6.3': [(<numba.core.ir.Assign object at 0x000001F6E8343920>,
                                218)],
             '$const256.0.2': [(<numba.core.ir.Assign object at 0x000001F6E8343F20>,
                                256)],
             '$const40.5': [(<numba.core.ir.Assign object at 0x000001F6E831DA60>,
                             14)],
             '$const402.33': [(<numba.core.ir.Assign object at 0x000001F6E8352F00>,
                               280)],
             '$const62.6.1': [(<numba.core.ir.Assign object at 0x000001F6E831FDA0>,
                               42)],
             '$phi206.0': [(<numba.core.ir.Assign object at 0x000001F6E83410D0>,
                            166),
                           (<numba.core.ir.Assign object at 0x000001F6E831FBF0>,
                            204)],
             '$phi258.0': [(<numba.core.ir.Assign object at 0x000001F6E8343590>,
                            218),
                           (<numba.core.ir.Assign object at 0x000001F6E8342E70>,
                            256)],
             'M': [(<numba.core.ir.Assign object at 0x000001F6E83307D0>, 0)],
             'bool12': [(<numba.core.ir.Assign object at 0x000001F6E8333A70>,
                         0)],
             'bool164': [(<numba.core.ir.Assign object at 0x000001F6E83420F0>,
                          42)],
             'bool216': [(<numba.core.ir.Assign object at 0x000001F6E8343110>,
                          206)],
             'bool274': [(<numba.core.ir.Assign object at 0x000001F6E8350860>,
                          258)],
             'clustering': [(<numba.core.ir.Assign object at 0x000001F6E8331A30>,
                             0)],
             'group_size': [(<numba.core.ir.Assign object at 0x000001F6E8341B80>,
                             42)],
             'i': [(<numba.core.ir.Assign object at 0x000001F6E83308F0>, 0)],
             'li': [(<numba.core.ir.Assign object at 0x000001F6E83406B0>, 42)],
             'lsize': [(<numba.core.ir.Assign object at 0x000001F6E8342C60>,
                        206)],
             'ri': [(<numba.core.ir.Assign object at 0x000001F6E8341010>, 42)],
             'rsize': [(<numba.core.ir.Assign object at 0x000001F6E8350170>,
                        258)],
             'value': [(<numba.core.ir.Assign object at 0x000001F6E8330BF0>,
                        0)],
             'values': [(<numba.core.ir.Assign object at 0x000001F6E8332690>,
                         0)]})
2025-07-23 17:16:41,429 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6E8306BD0>
2025-07-23 17:16:41,429 - DEBUG - Fix SSA violator on var $phi206.0
2025-07-23 17:16:41,429 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,429 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,429 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,429 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,429 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,429 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,429 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,434 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,434 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,434 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,434 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,435 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,435 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,435 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,435 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,435 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,435 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,435 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,436 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,436 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,436 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,436 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,436 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,436 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,436 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,436 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,436 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,437 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,437 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,437 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,437 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,437 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,437 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,437 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,437 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,437 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,438 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,438 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,438 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,438 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,438 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,439 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,439 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,439 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,439 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,439 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,439 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,439 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,439 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,439 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,439 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,439 - DEBUG - first assign: $phi206.0
2025-07-23 17:16:41,439 - DEBUG - replaced with: $phi206.0 = $194call.9
2025-07-23 17:16:41,439 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,439 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,440 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,440 - DEBUG - on stmt: $phi206.0 = $const204.0.2
2025-07-23 17:16:41,440 - DEBUG - replaced with: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,440 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,440 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,441 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,441 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,441 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,441 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,441 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,441 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,441 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,441 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,441 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,442 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,442 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,442 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,442 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,442 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,442 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,442 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,442 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,444 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,444 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,444 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,444 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,444 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,444 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,444 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,444 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,444 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,444 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,444 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,444 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,446 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,446 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,446 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8306900>
2025-07-23 17:16:41,446 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,446 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,446 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,446 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,446 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,447 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,447 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,447 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,447 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,447 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,447 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,447 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,447 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,447 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,447 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,447 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,447 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {166: [<numba.core.ir.Assign object at 0x000001F6E8306D80>],
             204: [<numba.core.ir.Assign object at 0x000001F6E8353260>]})
2025-07-23 17:16:41,448 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,448 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,448 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,448 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,448 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,448 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,448 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,448 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,448 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,448 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,449 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,449 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,449 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,449 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,449 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,449 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,449 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,449 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,449 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,450 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,450 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,450 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,450 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,450 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,450 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,450 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,451 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,451 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,451 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,451 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,451 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,451 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,451 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,452 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,452 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,452 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,452 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,452 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,452 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,452 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,452 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,453 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,453 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,453 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,453 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,453 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,453 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,453 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,453 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,454 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,454 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,454 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,454 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,454 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,454 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,454 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,454 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,454 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,455 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,455 - DEBUG - on stmt: lsize = $phi206.0
2025-07-23 17:16:41,455 - DEBUG - find_def var='$phi206.0' stmt=lsize = $phi206.0
2025-07-23 17:16:41,455 - DEBUG - find_def_from_top label 206
2025-07-23 17:16:41,455 - DEBUG - insert phi node $phi206.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 206
2025-07-23 17:16:41,455 - DEBUG - find_def_from_bottom label 204
2025-07-23 17:16:41,455 - DEBUG - incoming_def $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,455 - DEBUG - find_def_from_bottom label 166
2025-07-23 17:16:41,455 - DEBUG - incoming_def $phi206.0 = $194call.9
2025-07-23 17:16:41,456 - DEBUG - replaced with: lsize = $phi206.0.2
2025-07-23 17:16:41,456 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,456 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,456 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,456 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,456 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,456 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,456 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,456 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,457 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,457 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,457 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,457 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,457 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,457 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,457 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,457 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,458 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,458 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,458 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,458 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,458 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,459 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,459 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,459 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,459 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,459 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,460 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,461 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,461 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,462 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,462 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,462 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,463 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8306900>
2025-07-23 17:16:41,463 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,463 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,463 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,463 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,463 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,464 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,464 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,464 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,464 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,464 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,464 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,464 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,465 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,465 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,465 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,465 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,465 - DEBUG - Fix SSA violator on var $phi258.0
2025-07-23 17:16:41,465 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,466 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,466 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,466 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,466 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,466 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,466 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,466 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,466 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,466 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,467 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,467 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,467 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,467 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,467 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,468 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,468 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,468 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,468 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,468 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,468 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,468 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,469 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,469 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,469 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,469 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,469 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,469 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,469 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,470 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,470 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,470 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,470 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,470 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,470 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,470 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,470 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,470 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,471 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,471 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,471 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,471 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,471 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,471 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,471 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,471 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,471 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,472 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,472 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,472 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,472 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,472 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,472 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,472 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,472 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,472 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,473 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,473 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,473 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,473 - DEBUG - on stmt: $phi206.0.2 = phi(incoming_values=[Var($phi206.0.1, _partition.py:727), Var($phi206.0, _partition.py:727)], incoming_blocks=[204, 166])
2025-07-23 17:16:41,473 - DEBUG - on stmt: lsize = $phi206.0.2
2025-07-23 17:16:41,473 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,473 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,473 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,473 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,474 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,474 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,474 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,474 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,474 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,474 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,474 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,474 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,474 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,475 - DEBUG - first assign: $phi258.0
2025-07-23 17:16:41,475 - DEBUG - replaced with: $phi258.0 = $246call.9
2025-07-23 17:16:41,475 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,475 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,475 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,475 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,475 - DEBUG - on stmt: $phi258.0 = $const256.0.2
2025-07-23 17:16:41,475 - DEBUG - replaced with: $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,475 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,476 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,476 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,476 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,476 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,476 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,476 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,476 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,476 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,476 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,476 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,477 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,477 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,477 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,477 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6E8343C50>
2025-07-23 17:16:41,477 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,477 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,477 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,477 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,477 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,478 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,478 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,478 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,478 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,479 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,479 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,479 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,479 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,479 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,479 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,479 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,479 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {218: [<numba.core.ir.Assign object at 0x000001F6E8306D50>],
             256: [<numba.core.ir.Assign object at 0x000001F6EC531C70>]})
2025-07-23 17:16:41,480 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:41,480 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,480 - DEBUG - on stmt: i = arg(0, name=i)
2025-07-23 17:16:41,480 - DEBUG - on stmt: value = arg(1, name=value)
2025-07-23 17:16:41,480 - DEBUG - on stmt: M = arg(2, name=M)
2025-07-23 17:16:41,480 - DEBUG - on stmt: values = arg(3, name=values)
2025-07-23 17:16:41,480 - DEBUG - on stmt: clustering = arg(4, name=clustering)
2025-07-23 17:16:41,480 - DEBUG - on stmt: $8compare_op.2 = i < M
2025-07-23 17:16:41,480 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,481 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, _partition.py:721),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,481 - DEBUG - on stmt: branch $12pred, 14, 42
2025-07-23 17:16:41,481 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:41,481 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,481 - DEBUG - on stmt: $22binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,481 - DEBUG - on stmt: $binop_iadd28.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$22binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,481 - DEBUG - on stmt: values[i] = $binop_iadd28.4
2025-07-23 17:16:41,481 - DEBUG - on stmt: $const40.5 = const(NoneType, None)
2025-07-23 17:16:41,481 - DEBUG - on stmt: $40return_const.6 = cast(value=$const40.5)
2025-07-23 17:16:41,482 - DEBUG - on stmt: return $40return_const.6
2025-07-23 17:16:41,482 - DEBUG - ==== SSA block rewrite pass on 42
2025-07-23 17:16:41,482 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,482 - DEBUG - on stmt: $42load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,482 - DEBUG - on stmt: $binop_sub58.5 = i - M
2025-07-23 17:16:41,482 - DEBUG - on stmt: $const62.6.1 = const(int, 0)
2025-07-23 17:16:41,482 - DEBUG - on stmt: $64build_tuple.7 = build_tuple(items=[Var($binop_sub58.5, _partition.py:724), Var($const62.6.1, _partition.py:724)])
2025-07-23 17:16:41,482 - DEBUG - on stmt: $66binary_subscr.8 = getitem(value=clustering, index=$64build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,483 - DEBUG - on stmt: li = call $42load_global.0($66binary_subscr.8, func=$42load_global.0, args=[Var($66binary_subscr.8, _partition.py:724)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,483 - DEBUG - on stmt: $80load_global.10 = global(int: <class 'int'>)
2025-07-23 17:16:41,483 - DEBUG - on stmt: $binop_sub96.15 = i - M
2025-07-23 17:16:41,483 - DEBUG - on stmt: $const100.16.2 = const(int, 1)
2025-07-23 17:16:41,483 - DEBUG - on stmt: $102build_tuple.17 = build_tuple(items=[Var($binop_sub96.15, _partition.py:725), Var($const100.16.2, _partition.py:725)])
2025-07-23 17:16:41,483 - DEBUG - on stmt: $104binary_subscr.18 = getitem(value=clustering, index=$102build_tuple.17, fn=<built-in function getitem>)
2025-07-23 17:16:41,484 - DEBUG - on stmt: ri = call $80load_global.10($104binary_subscr.18, func=$80load_global.10, args=[Var($104binary_subscr.18, _partition.py:725)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,484 - DEBUG - on stmt: $118load_global.20 = global(int: <class 'int'>)
2025-07-23 17:16:41,484 - DEBUG - on stmt: $binop_sub134.25 = i - M
2025-07-23 17:16:41,484 - DEBUG - on stmt: $const138.26.3 = const(int, 3)
2025-07-23 17:16:41,484 - DEBUG - on stmt: $140build_tuple.27 = build_tuple(items=[Var($binop_sub134.25, _partition.py:726), Var($const138.26.3, _partition.py:726)])
2025-07-23 17:16:41,484 - DEBUG - on stmt: $142binary_subscr.28 = getitem(value=clustering, index=$140build_tuple.27, fn=<built-in function getitem>)
2025-07-23 17:16:41,485 - DEBUG - on stmt: group_size = call $118load_global.20($142binary_subscr.28, func=$118load_global.20, args=[Var($142binary_subscr.28, _partition.py:726)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,485 - DEBUG - on stmt: $160compare_op.32 = li >= M
2025-07-23 17:16:41,485 - DEBUG - on stmt: bool164 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,485 - DEBUG - on stmt: $164pred = call bool164($160compare_op.32, func=bool164, args=(Var($160compare_op.32, _partition.py:727),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,486 - DEBUG - on stmt: branch $164pred, 166, 204
2025-07-23 17:16:41,486 - DEBUG - ==== SSA block rewrite pass on 166
2025-07-23 17:16:41,486 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,486 - DEBUG - on stmt: $166load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,486 - DEBUG - on stmt: $binop_sub182.5 = li - M
2025-07-23 17:16:41,486 - DEBUG - on stmt: $const186.6.3 = const(int, 3)
2025-07-23 17:16:41,486 - DEBUG - on stmt: $188build_tuple.7 = build_tuple(items=[Var($binop_sub182.5, _partition.py:727), Var($const186.6.3, _partition.py:727)])
2025-07-23 17:16:41,487 - DEBUG - on stmt: $190binary_subscr.8 = getitem(value=clustering, index=$188build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,487 - DEBUG - on stmt: $194call.9 = call $166load_global.0($190binary_subscr.8, func=$166load_global.0, args=[Var($190binary_subscr.8, _partition.py:727)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,487 - DEBUG - on stmt: $phi206.0 = $194call.9
2025-07-23 17:16:41,487 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,487 - DEBUG - ==== SSA block rewrite pass on 204
2025-07-23 17:16:41,487 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,487 - DEBUG - on stmt: $const204.0.2 = const(int, 1)
2025-07-23 17:16:41,487 - DEBUG - on stmt: $phi206.0.1 = $const204.0.2
2025-07-23 17:16:41,487 - DEBUG - on stmt: jump 206
2025-07-23 17:16:41,487 - DEBUG - ==== SSA block rewrite pass on 206
2025-07-23 17:16:41,487 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,487 - DEBUG - on stmt: $phi206.0.2 = phi(incoming_values=[Var($phi206.0.1, _partition.py:727), Var($phi206.0, _partition.py:727)], incoming_blocks=[204, 166])
2025-07-23 17:16:41,487 - DEBUG - on stmt: lsize = $phi206.0.2
2025-07-23 17:16:41,488 - DEBUG - on stmt: $212compare_op.3 = ri >= M
2025-07-23 17:16:41,488 - DEBUG - on stmt: bool216 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,488 - DEBUG - on stmt: $216pred = call bool216($212compare_op.3, func=bool216, args=(Var($212compare_op.3, _partition.py:728),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,488 - DEBUG - on stmt: branch $216pred, 218, 256
2025-07-23 17:16:41,488 - DEBUG - ==== SSA block rewrite pass on 218
2025-07-23 17:16:41,488 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,488 - DEBUG - on stmt: $218load_global.0 = global(int: <class 'int'>)
2025-07-23 17:16:41,488 - DEBUG - on stmt: $binop_sub234.5 = ri - M
2025-07-23 17:16:41,488 - DEBUG - on stmt: $const238.6.3 = const(int, 3)
2025-07-23 17:16:41,490 - DEBUG - on stmt: $240build_tuple.7 = build_tuple(items=[Var($binop_sub234.5, _partition.py:728), Var($const238.6.3, _partition.py:728)])
2025-07-23 17:16:41,490 - DEBUG - on stmt: $242binary_subscr.8 = getitem(value=clustering, index=$240build_tuple.7, fn=<built-in function getitem>)
2025-07-23 17:16:41,490 - DEBUG - on stmt: $246call.9 = call $218load_global.0($242binary_subscr.8, func=$218load_global.0, args=[Var($242binary_subscr.8, _partition.py:728)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,490 - DEBUG - on stmt: $phi258.0 = $246call.9
2025-07-23 17:16:41,490 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,490 - DEBUG - ==== SSA block rewrite pass on 256
2025-07-23 17:16:41,490 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,490 - DEBUG - on stmt: $const256.0.2 = const(int, 1)
2025-07-23 17:16:41,490 - DEBUG - on stmt: $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,490 - DEBUG - on stmt: jump 258
2025-07-23 17:16:41,491 - DEBUG - ==== SSA block rewrite pass on 258
2025-07-23 17:16:41,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,491 - DEBUG - on stmt: rsize = $phi258.0
2025-07-23 17:16:41,491 - DEBUG - find_def var='$phi258.0' stmt=rsize = $phi258.0
2025-07-23 17:16:41,491 - DEBUG - find_def_from_top label 258
2025-07-23 17:16:41,491 - DEBUG - insert phi node $phi258.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 258
2025-07-23 17:16:41,491 - DEBUG - find_def_from_bottom label 256
2025-07-23 17:16:41,491 - DEBUG - incoming_def $phi258.0.1 = $const256.0.2
2025-07-23 17:16:41,491 - DEBUG - find_def_from_bottom label 218
2025-07-23 17:16:41,492 - DEBUG - incoming_def $phi258.0 = $246call.9
2025-07-23 17:16:41,492 - DEBUG - replaced with: rsize = $phi258.0.2
2025-07-23 17:16:41,492 - DEBUG - on stmt: $binop_add264.3 = lsize + rsize
2025-07-23 17:16:41,492 - DEBUG - on stmt: $270compare_op.5 = $binop_add264.3 == group_size
2025-07-23 17:16:41,492 - DEBUG - on stmt: bool274 = global(bool: <class 'bool'>)
2025-07-23 17:16:41,492 - DEBUG - on stmt: $274pred = call bool274($270compare_op.5, func=bool274, args=(Var($270compare_op.5, _partition.py:729),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,492 - DEBUG - on stmt: branch $274pred, 280, 276
2025-07-23 17:16:41,492 - DEBUG - ==== SSA block rewrite pass on 276
2025-07-23 17:16:41,492 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,493 - DEBUG - on stmt: $assertion_error276.0 = global(AssertionError: <class 'AssertionError'>)
2025-07-23 17:16:41,493 - DEBUG - on stmt: <static> raise <class 'AssertionError'>
2025-07-23 17:16:41,493 - DEBUG - ==== SSA block rewrite pass on 280
2025-07-23 17:16:41,493 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6E8331040>
2025-07-23 17:16:41,493 - DEBUG - on stmt: $288binary_subscr.2 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,493 - DEBUG - on stmt: $binop_iadd294.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$288binary_subscr.2, rhs=value, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:41,493 - DEBUG - on stmt: values[i] = $binop_iadd294.4
2025-07-23 17:16:41,493 - DEBUG - on stmt: $306load_global.5 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,493 - DEBUG - on stmt: $322binary_subscr.10 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,494 - DEBUG - on stmt: $binop_mul328.12 = $322binary_subscr.10 * lsize
2025-07-23 17:16:41,494 - DEBUG - on stmt: $binop_truediv334.14 = $binop_mul328.12 / group_size
2025-07-23 17:16:41,494 - DEBUG - on stmt: $344call.18 = call $306load_global.5(li, $binop_truediv334.14, M, values, clustering, func=$306load_global.5, args=[Var(li, _partition.py:724), Var($binop_truediv334.14, _partition.py:731), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,494 - DEBUG - on stmt: $354load_global.19 = global(lower_credit: CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))
2025-07-23 17:16:41,494 - DEBUG - on stmt: $370binary_subscr.24 = getitem(value=values, index=i, fn=<built-in function getitem>)
2025-07-23 17:16:41,494 - DEBUG - on stmt: $binop_mul376.26 = $370binary_subscr.24 * rsize
2025-07-23 17:16:41,494 - DEBUG - on stmt: $binop_truediv382.28 = $binop_mul376.26 / group_size
2025-07-23 17:16:41,494 - DEBUG - on stmt: $392call.32 = call $354load_global.19(ri, $binop_truediv382.28, M, values, clustering, func=$354load_global.19, args=[Var(ri, _partition.py:725), Var($binop_truediv382.28, _partition.py:732), Var(M, _partition.py:719), Var(values, _partition.py:719), Var(clustering, _partition.py:719)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:41,495 - DEBUG - on stmt: $const402.33 = const(NoneType, None)
2025-07-23 17:16:41,495 - DEBUG - on stmt: $402return_const.34 = cast(value=$const402.33)
2025-07-23 17:16:41,495 - DEBUG - on stmt: return $402return_const.34
2025-07-23 17:16:41,548 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,548 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,568 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,579 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,598 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,608 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,618 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,628 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,658 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,668 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,688 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,690 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,708 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,722 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:41,738 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (731)
[0m
2025-07-23 17:16:41,739 - DEBUG - captured error
Traceback (most recent call last):
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\numba\core\typeinfer.py", line 618, in resolve
    raise TypingError(msg)
numba.core.errors.TypingError: [1m[1m[1mInvalid use of recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) with parameters (int64, array(float64, 1d, C), int64, array(float64, 2d, C), array(float64, 2d, C))
No type info available for recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>))) as a callable.[0m
[0m[1mDuring: resolving callee type: recursive(type(CPUDispatcher(<function lower_credit at 0x000001F6CA077880>)))[0m
[0m[1mDuring: typing of call at C:\Users\ASTU-PG\Amharic-ecommerce-data-extractor\.amhenv\Lib\site-packages\shap\explainers\_partition.py (732)
[0m
2025-07-23 17:16:42,078 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=2, lineno=1)
           8	BINARY_OP(arg=5, lineno=1)
          12	LOAD_FAST(arg=1, lineno=1)
          14	BINARY_OP(arg=11, lineno=1)
          18	RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,080 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,080 - DEBUG - stack: []
2025-07-23 17:16:42,080 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,080 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-23 17:16:42,080 - DEBUG - stack []
2025-07-23 17:16:42,080 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-07-23 17:16:42,080 - DEBUG - stack []
2025-07-23 17:16:42,080 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-07-23 17:16:42,080 - DEBUG - stack []
2025-07-23 17:16:42,080 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=1)
2025-07-23 17:16:42,080 - DEBUG - stack ['$_322binary_subscr_10_14.0']
2025-07-23 17:16:42,088 - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=5, lineno=1)
2025-07-23 17:16:42,088 - DEBUG - stack ['$_322binary_subscr_10_14.0', '$lsize_16.1']
2025-07-23 17:16:42,088 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1)
2025-07-23 17:16:42,088 - DEBUG - stack ['$binop_mul8.2']
2025-07-23 17:16:42,088 - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=11, lineno=1)
2025-07-23 17:16:42,088 - DEBUG - stack ['$binop_mul8.2', '$group_size_112.3']
2025-07-23 17:16:42,088 - DEBUG - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,088 - DEBUG - stack ['$binop_truediv14.4']
2025-07-23 17:16:42,088 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,088 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,088 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,096 - DEBUG - defmap: {}
2025-07-23 17:16:42,096 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,096 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,096 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,096 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,099 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,099 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$_322binary_subscr_10_14.0'}), (6, {'res': '$lsize_16.1'}), (8, {'op': '*', 'lhs': '$_322binary_subscr_10_14.0', 'rhs': '$lsize_16.1', 'res': '$binop_mul8.2'}), (12, {'res': '$group_size_112.3'}), (14, {'op': '/', 'lhs': '$binop_mul8.2', 'rhs': '$group_size_112.3', 'res': '$binop_truediv14.4'}), (18, {'retval': '$binop_truediv14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,099 - DEBUG - label 0:
    _322binary_subscr_10_1 = arg(0, name=_322binary_subscr_10_1) ['_322binary_subscr_10_1']
    group_size_1 = arg(1, name=group_size_1) ['group_size_1']
    lsize_1 = arg(2, name=lsize_1)           ['lsize_1']
    $binop_mul8.2 = _322binary_subscr_10_1 * lsize_1 ['$binop_mul8.2', '_322binary_subscr_10_1', 'lsize_1']
    $binop_truediv14.4 = $binop_mul8.2 / group_size_1 ['$binop_mul8.2', '$binop_truediv14.4', 'group_size_1']
    $18return_value.5 = cast(value=$binop_truediv14.4) ['$18return_value.5', '$binop_truediv14.4']
    return $18return_value.5                 ['$18return_value.5']

2025-07-23 17:16:42,099 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,099 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC5F72F0>
2025-07-23 17:16:42,099 - DEBUG - on stmt: _322binary_subscr_10_1 = arg(0, name=_322binary_subscr_10_1)
2025-07-23 17:16:42,099 - DEBUG - on stmt: group_size_1 = arg(1, name=group_size_1)
2025-07-23 17:16:42,099 - DEBUG - on stmt: lsize_1 = arg(2, name=lsize_1)
2025-07-23 17:16:42,099 - DEBUG - on stmt: $binop_mul8.2 = _322binary_subscr_10_1 * lsize_1
2025-07-23 17:16:42,099 - DEBUG - on stmt: $binop_truediv14.4 = $binop_mul8.2 / group_size_1
2025-07-23 17:16:42,099 - DEBUG - on stmt: $18return_value.5 = cast(value=$binop_truediv14.4)
2025-07-23 17:16:42,099 - DEBUG - on stmt: return $18return_value.5
2025-07-23 17:16:42,099 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x000001F6EC6002F0>,
                                    0)],
             '$binop_mul8.2': [(<numba.core.ir.Assign object at 0x000001F6EC5F7F50>,
                                0)],
             '$binop_truediv14.4': [(<numba.core.ir.Assign object at 0x000001F6EC6001D0>,
                                     0)],
             '_322binary_subscr_10_1': [(<numba.core.ir.Assign object at 0x000001F6EC5F7980>,
                                         0)],
             'group_size_1': [(<numba.core.ir.Assign object at 0x000001F6EC5F7AA0>,
                               0)],
             'lsize_1': [(<numba.core.ir.Assign object at 0x000001F6EC5F7BC0>,
                          0)]})
2025-07-23 17:16:42,108 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC5F72F0>
2025-07-23 17:16:42,199 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=337)
           2	RESUME(arg=0, lineno=337)
           4	LOAD_FAST(arg=0, lineno=352)
           6	LOAD_FAST(arg=2, lineno=352)
           8	COMPARE_OP(arg=68, lineno=352)
          12	POP_JUMP_IF_FALSE(arg=1, lineno=352)
          14	RETURN_CONST(arg=1, lineno=355)
>         16	LOAD_CONST(arg=1, lineno=357)
          18	STORE_FAST(arg=4, lineno=357)
          20	LOAD_FAST(arg=2, lineno=358)
          22	LOAD_FAST(arg=0, lineno=358)
          24	BINARY_OP(arg=10, lineno=358)
          28	STORE_FAST(arg=5, lineno=358)
          30	LOAD_FAST(arg=4, lineno=359)
          32	LOAD_FAST(arg=0, lineno=359)
          34	COMPARE_OP(arg=2, lineno=359)
          38	POP_JUMP_IF_FALSE(arg=57, lineno=359)
>         40	LOAD_FAST(arg=1, lineno=360)
          42	LOAD_FAST(arg=4, lineno=360)
          44	BINARY_SUBSCR(arg=None, lineno=360)
          48	STORE_FAST(arg=6, lineno=360)
          50	LOAD_FAST(arg=3, lineno=361)
          52	LOAD_FAST(arg=5, lineno=361)
          54	BINARY_SUBSCR(arg=None, lineno=361)
          58	STORE_FAST(arg=7, lineno=361)
          60	LOAD_FAST(arg=7, lineno=364)
          62	LOAD_CONST(arg=2, lineno=364)
          64	COMPARE_OP(arg=55, lineno=364)
          68	POP_JUMP_IF_FALSE(arg=16, lineno=364)
          70	LOAD_FAST(arg=6, lineno=368)
          72	LOAD_FAST(arg=7, lineno=368)
          74	COMPARE_OP(arg=55, lineno=368)
          78	POP_JUMP_IF_FALSE(arg=21, lineno=368)
          80	LOAD_FAST(arg=6, lineno=368)
          82	LOAD_CONST(arg=2, lineno=368)
          84	COMPARE_OP(arg=55, lineno=368)
          88	POP_JUMP_IF_FALSE(arg=16, lineno=368)
          90	LOAD_FAST(arg=5, lineno=369)
          92	LOAD_CONST(arg=2, lineno=369)
          94	BINARY_OP(arg=0, lineno=369)
          98	UNARY_NEGATIVE(arg=None, lineno=369)
         100	RETURN_VALUE(arg=None, lineno=369)
>        102	LOAD_FAST(arg=6, lineno=370)
         104	LOAD_CONST(arg=2, lineno=370)
         106	COMPARE_OP(arg=55, lineno=370)
         110	POP_JUMP_IF_FALSE(arg=5, lineno=370)
         112	LOAD_FAST(arg=6, lineno=372)
         114	LOAD_FAST(arg=3, lineno=372)
         116	LOAD_FAST(arg=5, lineno=372)
         118	STORE_SUBSCR(arg=None, lineno=372)
>        122	LOAD_FAST(arg=4, lineno=373)
         124	LOAD_CONST(arg=2, lineno=373)
         126	BINARY_OP(arg=13, lineno=373)
         130	STORE_FAST(arg=4, lineno=373)
         132	LOAD_FAST(arg=5, lineno=374)
         134	LOAD_CONST(arg=2, lineno=374)
         136	BINARY_OP(arg=13, lineno=374)
         140	STORE_FAST(arg=5, lineno=374)
         142	LOAD_FAST(arg=4, lineno=359)
         144	LOAD_FAST(arg=0, lineno=359)
         146	COMPARE_OP(arg=2, lineno=359)
         150	POP_JUMP_IF_FALSE(arg=1, lineno=359)
         152	JUMP_BACKWARD(arg=57, lineno=359)
>        154	LOAD_FAST(arg=5, lineno=375)
         156	RETURN_VALUE(arg=None, lineno=375)
2025-07-23 17:16:42,199 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,199 - DEBUG - stack: []
2025-07-23 17:16:42,199 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,199 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=337)
2025-07-23 17:16:42,199 - DEBUG - stack []
2025-07-23 17:16:42,199 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=337)
2025-07-23 17:16:42,199 - DEBUG - stack []
2025-07-23 17:16:42,199 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=352)
2025-07-23 17:16:42,208 - DEBUG - stack []
2025-07-23 17:16:42,208 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=352)
2025-07-23 17:16:42,209 - DEBUG - stack ['$src_ndim4.0']
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=68, lineno=352)
2025-07-23 17:16:42,209 - DEBUG - stack ['$src_ndim4.0', '$dest_ndim6.1']
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=1, lineno=352)
2025-07-23 17:16:42,209 - DEBUG - stack ['$8compare_op.2']
2025-07-23 17:16:42,209 - DEBUG - end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=16, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,209 - DEBUG - pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=16 nstack_initial=0)])
2025-07-23 17:16:42,209 - DEBUG - stack: []
2025-07-23 17:16:42,209 - DEBUG - state.pc_initial: State(pc_initial=14 nstack_initial=0)
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=14, inst=RETURN_CONST(arg=1, lineno=355)
2025-07-23 17:16:42,209 - DEBUG - stack []
2025-07-23 17:16:42,209 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,209 - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=0)])
2025-07-23 17:16:42,209 - DEBUG - stack: []
2025-07-23 17:16:42,209 - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=0)
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=357)
2025-07-23 17:16:42,209 - DEBUG - stack []
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=4, lineno=357)
2025-07-23 17:16:42,209 - DEBUG - stack ['$const16.0.1']
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=358)
2025-07-23 17:16:42,209 - DEBUG - stack []
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=358)
2025-07-23 17:16:42,209 - DEBUG - stack ['$dest_ndim20.1']
2025-07-23 17:16:42,209 - DEBUG - dispatch pc=24, inst=BINARY_OP(arg=10, lineno=358)
2025-07-23 17:16:42,209 - DEBUG - stack ['$dest_ndim20.1', '$src_ndim22.2']
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=5, lineno=358)
2025-07-23 17:16:42,218 - DEBUG - stack ['$binop_sub24.3']
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=359)
2025-07-23 17:16:42,218 - DEBUG - stack []
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=359)
2025-07-23 17:16:42,218 - DEBUG - stack ['$src_index30.4']
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=34, inst=COMPARE_OP(arg=2, lineno=359)
2025-07-23 17:16:42,218 - DEBUG - stack ['$src_index30.4', '$src_ndim32.5']
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=38, inst=POP_JUMP_IF_FALSE(arg=57, lineno=359)
2025-07-23 17:16:42,218 - DEBUG - stack ['$34compare_op.6']
2025-07-23 17:16:42,218 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,218 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-23 17:16:42,218 - DEBUG - stack: []
2025-07-23 17:16:42,218 - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=360)
2025-07-23 17:16:42,218 - DEBUG - stack []
2025-07-23 17:16:42,218 - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=360)
2025-07-23 17:16:42,223 - DEBUG - stack ['$src_shape40.0']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=360)
2025-07-23 17:16:42,223 - DEBUG - stack ['$src_shape40.0', '$src_index42.1']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=6, lineno=360)
2025-07-23 17:16:42,223 - DEBUG - stack ['$44binary_subscr.2']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=361)
2025-07-23 17:16:42,223 - DEBUG - stack []
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=361)
2025-07-23 17:16:42,223 - DEBUG - stack ['$dest_shape50.3']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=54, inst=BINARY_SUBSCR(arg=None, lineno=361)
2025-07-23 17:16:42,223 - DEBUG - stack ['$dest_shape50.3', '$dest_index52.4']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=7, lineno=361)
2025-07-23 17:16:42,223 - DEBUG - stack ['$54binary_subscr.5']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=7, lineno=364)
2025-07-23 17:16:42,223 - DEBUG - stack []
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=364)
2025-07-23 17:16:42,223 - DEBUG - stack ['$dest_dim_size60.6']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=55, lineno=364)
2025-07-23 17:16:42,223 - DEBUG - stack ['$dest_dim_size60.6', '$const62.7.2']
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=16, lineno=364)
2025-07-23 17:16:42,223 - DEBUG - stack ['$64compare_op.8']
2025-07-23 17:16:42,223 - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,223 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=70 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-07-23 17:16:42,223 - DEBUG - stack: []
2025-07-23 17:16:42,223 - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=5, lineno=375)
2025-07-23 17:16:42,223 - DEBUG - stack []
2025-07-23 17:16:42,223 - DEBUG - dispatch pc=156, inst=RETURN_VALUE(arg=None, lineno=375)
2025-07-23 17:16:42,223 - DEBUG - stack ['$dest_index154.0']
2025-07-23 17:16:42,223 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,223 - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-07-23 17:16:42,223 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=7, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size70.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=74, inst=COMPARE_OP(arg=55, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size70.0', '$dest_dim_size72.1']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=21, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$74compare_op.2']
2025-07-23 17:16:42,228 - DEBUG - end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=80 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=6, lineno=370)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=370)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size102.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=106, inst=COMPARE_OP(arg=55, lineno=370)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size102.0', '$const104.1.2']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=5, lineno=370)
2025-07-23 17:16:42,228 - DEBUG - stack ['$106compare_op.2']
2025-07-23 17:16:42,228 - DEBUG - end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=2, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size80.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=84, inst=COMPARE_OP(arg=55, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size80.0', '$const82.1.2']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=88, inst=POP_JUMP_IF_FALSE(arg=16, lineno=368)
2025-07-23 17:16:42,228 - DEBUG - stack ['$84compare_op.2']
2025-07-23 17:16:42,228 - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=122 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=4, lineno=373)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=124, inst=LOAD_CONST(arg=2, lineno=373)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_index122.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=126, inst=BINARY_OP(arg=13, lineno=373)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_index122.0', '$const124.1.2']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=130, inst=STORE_FAST(arg=4, lineno=373)
2025-07-23 17:16:42,228 - DEBUG - stack ['$binop_iadd126.2']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=132, inst=LOAD_FAST(arg=5, lineno=374)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=134, inst=LOAD_CONST(arg=2, lineno=374)
2025-07-23 17:16:42,228 - DEBUG - stack ['$dest_index132.3']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=136, inst=BINARY_OP(arg=13, lineno=374)
2025-07-23 17:16:42,228 - DEBUG - stack ['$dest_index132.3', '$const134.4.2']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=140, inst=STORE_FAST(arg=5, lineno=374)
2025-07-23 17:16:42,228 - DEBUG - stack ['$binop_iadd136.5']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=142, inst=LOAD_FAST(arg=4, lineno=359)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=0, lineno=359)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_index142.6']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=146, inst=COMPARE_OP(arg=2, lineno=359)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_index142.6', '$src_ndim144.7']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=150, inst=POP_JUMP_IF_FALSE(arg=1, lineno=359)
2025-07-23 17:16:42,228 - DEBUG - stack ['$146compare_op.8']
2025-07-23 17:16:42,228 - DEBUG - end state. edges=[Edge(pc=152, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=112 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=6, lineno=372)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=372)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size112.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=5, lineno=372)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size112.0', '$dest_shape114.1']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=372)
2025-07-23 17:16:42,228 - DEBUG - stack ['$src_dim_size112.0', '$dest_shape114.1', '$dest_index116.2']
2025-07-23 17:16:42,228 - DEBUG - end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=90 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,228 - DEBUG - stack: []
2025-07-23 17:16:42,228 - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=5, lineno=369)
2025-07-23 17:16:42,228 - DEBUG - stack []
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=369)
2025-07-23 17:16:42,228 - DEBUG - stack ['$dest_index90.0']
2025-07-23 17:16:42,228 - DEBUG - dispatch pc=94, inst=BINARY_OP(arg=0, lineno=369)
2025-07-23 17:16:42,228 - DEBUG - stack ['$dest_index90.0', '$const92.1.2']
2025-07-23 17:16:42,238 - DEBUG - dispatch pc=98, inst=UNARY_NEGATIVE(arg=None, lineno=369)
2025-07-23 17:16:42,238 - DEBUG - stack ['$binop_add94.2']
2025-07-23 17:16:42,238 - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=369)
2025-07-23 17:16:42,238 - DEBUG - stack ['$98unary_negative.3']
2025-07-23 17:16:42,238 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,238 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,238 - DEBUG - pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
2025-07-23 17:16:42,238 - DEBUG - stack: []
2025-07-23 17:16:42,238 - DEBUG - state.pc_initial: State(pc_initial=152 nstack_initial=0)
2025-07-23 17:16:42,239 - DEBUG - dispatch pc=152, inst=JUMP_BACKWARD(arg=57, lineno=359)
2025-07-23 17:16:42,239 - DEBUG - stack []
2025-07-23 17:16:42,239 - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-07-23 17:16:42,239 - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-07-23 17:16:42,239 - DEBUG - pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-07-23 17:16:42,239 - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0)])
2025-07-23 17:16:42,239 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,239 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set()})
2025-07-23 17:16:42,239 - DEBUG - defmap: {}
2025-07-23 17:16:42,239 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,239 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,239 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,239 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,239 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$src_ndim4.0'}), (6, {'res': '$dest_ndim6.1'}), (8, {'lhs': '$src_ndim4.0', 'rhs': '$dest_ndim6.1', 'res': '$8compare_op.2'}), (12, {'pred': '$8compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 16: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'retval': '$const14.0', 'castval': '$14return_const.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$const16.0.1'}), (18, {'value': '$const16.0.1'}), (20, {'res': '$dest_ndim20.1'}), (22, {'res': '$src_ndim22.2'}), (24, {'op': '-', 'lhs': '$dest_ndim20.1', 'rhs': '$src_ndim22.2', 'res': '$binop_sub24.3'}), (28, {'value': '$binop_sub24.3'}), (30, {'res': '$src_index30.4'}), (32, {'res': '$src_ndim32.5'}), (34, {'lhs': '$src_index30.4', 'rhs': '$src_ndim32.5', 'res': '$34compare_op.6'}), (38, {'pred': '$34compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 154: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$src_shape40.0'}), (42, {'res': '$src_index42.1'}), (44, {'index': '$src_index42.1', 'target': '$src_shape40.0', 'res': '$44binary_subscr.2'}), (48, {'value': '$44binary_subscr.2'}), (50, {'res': '$dest_shape50.3'}), (52, {'res': '$dest_index52.4'}), (54, {'index': '$dest_index52.4', 'target': '$dest_shape50.3', 'res': '$54binary_subscr.5'}), (58, {'value': '$54binary_subscr.5'}), (60, {'res': '$dest_dim_size60.6'}), (62, {'res': '$const62.7.2'}), (64, {'lhs': '$dest_dim_size60.6', 'rhs': '$const62.7.2', 'res': '$64compare_op.8'}), (68, {'pred': '$64compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 102: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$src_dim_size70.0'}), (72, {'res': '$dest_dim_size72.1'}), (74, {'lhs': '$src_dim_size70.0', 'rhs': '$dest_dim_size72.1', 'res': '$74compare_op.2'}), (78, {'pred': '$74compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: (), 122: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$src_dim_size80.0'}), (82, {'res': '$const82.1.2'}), (84, {'lhs': '$src_dim_size80.0', 'rhs': '$const82.1.2', 'res': '$84compare_op.2'}), (88, {'pred': '$84compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 122: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$dest_index90.0'}), (92, {'res': '$const92.1.2'}), (94, {'op': '+', 'lhs': '$dest_index90.0', 'rhs': '$const92.1.2', 'res': '$binop_add94.2'}), (98, {'value': '$binop_add94.2', 'res': '$98unary_negative.3'}), (100, {'retval': '$98unary_negative.3', 'castval': '$100return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$src_dim_size102.0'}), (104, {'res': '$const104.1.2'}), (106, {'lhs': '$src_dim_size102.0', 'rhs': '$const104.1.2', 'res': '$106compare_op.2'}), (110, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 122: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$src_dim_size112.0'}), (114, {'res': '$dest_shape114.1'}), (116, {'res': '$dest_index116.2'}), (118, {'target': '$dest_shape114.1', 'index': '$dest_index116.2', 'value': '$src_dim_size112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$src_index122.0'}), (124, {'res': '$const124.1.2'}), (126, {'op': '+=', 'lhs': '$src_index122.0', 'rhs': '$const124.1.2', 'res': '$binop_iadd126.2'}), (130, {'value': '$binop_iadd126.2'}), (132, {'res': '$dest_index132.3'}), (134, {'res': '$const134.4.2'}), (136, {'op': '+=', 'lhs': '$dest_index132.3', 'rhs': '$const134.4.2', 'res': '$binop_iadd136.5'}), (140, {'value': '$binop_iadd136.5'}), (142, {'res': '$src_index142.6'}), (144, {'res': '$src_ndim144.7'}), (146, {'lhs': '$src_index142.6', 'rhs': '$src_ndim144.7', 'res': '$146compare_op.8'}), (150, {'pred': '$146compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: (), 154: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-07-23 17:16:42,239 - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$dest_index154.0'}), (156, {'retval': '$dest_index154.0', 'castval': '$156return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,239 - DEBUG - label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $8compare_op.2 = src_ndim > dest_ndim    ['$8compare_op.2', 'dest_ndim', 'src_ndim']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None) ['$12pred', '$8compare_op.2', 'bool12']
    branch $12pred, 14, 16                   ['$12pred']
label 14:
    $const14.0 = const(int, 0)               ['$const14.0']
    $14return_const.1 = cast(value=$const14.0) ['$14return_const.1', '$const14.0']
    return $14return_const.1                 ['$14return_const.1']
label 16:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    $34compare_op.6 = src_index < src_ndim   ['$34compare_op.6', 'src_index', 'src_ndim']
    bool38 = global(bool: <class 'bool'>)    ['bool38']
    $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.6', '$38pred', 'bool38']
    branch $38pred, 40, 154                  ['$38pred']
label 40:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const62.7.2 = const(int, 1)             ['$const62.7.2']
    $64compare_op.8 = dest_dim_size != $const62.7.2 ['$64compare_op.8', '$const62.7.2', 'dest_dim_size']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.8', '$68pred', 'bool68']
    branch $68pred, 70, 102                  ['$68pred']
label 70:
    $74compare_op.2 = src_dim_size != dest_dim_size ['$74compare_op.2', 'dest_dim_size', 'src_dim_size']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None) ['$74compare_op.2', '$78pred', 'bool78']
    branch $78pred, 80, 122                  ['$78pred']
label 80:
    $const82.1.2 = const(int, 1)             ['$const82.1.2']
    $84compare_op.2 = src_dim_size != $const82.1.2 ['$84compare_op.2', '$const82.1.2', 'src_dim_size']
    bool88 = global(bool: <class 'bool'>)    ['bool88']
    $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.2', '$88pred', 'bool88']
    branch $88pred, 90, 122                  ['$88pred']
label 90:
    $const92.1.2 = const(int, 1)             ['$const92.1.2']
    $binop_add94.2 = dest_index + $const92.1.2 ['$binop_add94.2', '$const92.1.2', 'dest_index']
    $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2) ['$98unary_negative.3', '$binop_add94.2']
    $100return_value.4 = cast(value=$98unary_negative.3) ['$100return_value.4', '$98unary_negative.3']
    return $100return_value.4                ['$100return_value.4']
label 102:
    $const104.1.2 = const(int, 1)            ['$const104.1.2']
    $106compare_op.2 = src_dim_size != $const104.1.2 ['$106compare_op.2', '$const104.1.2', 'src_dim_size']
    bool110 = global(bool: <class 'bool'>)   ['bool110']
    $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$110pred', 'bool110']
    branch $110pred, 112, 122                ['$110pred']
label 112:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 122                                 []
label 122:
    $const124.1.2 = const(int, 1)            ['$const124.1.2']
    $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd126.2', '$const124.1.2', 'src_index']
    src_index = $binop_iadd126.2             ['$binop_iadd126.2', 'src_index']
    $const134.4.2 = const(int, 1)            ['$const134.4.2']
    $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd136.5', '$const134.4.2', 'dest_index']
    dest_index = $binop_iadd136.5            ['$binop_iadd136.5', 'dest_index']
    $146compare_op.8 = src_index < src_ndim  ['$146compare_op.8', 'src_index', 'src_ndim']
    bool150 = global(bool: <class 'bool'>)   ['bool150']
    $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None) ['$146compare_op.8', '$150pred', 'bool150']
    branch $150pred, 152, 154                ['$150pred']
label 152:
    jump 40                                  []
label 154:
    $156return_value.1 = cast(value=dest_index) ['$156return_value.1', 'dest_index']
    return $156return_value.1                ['$156return_value.1']

2025-07-23 17:16:42,249 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,249 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,249 - DEBUG - on stmt: src_ndim = arg(0, name=src_ndim)
2025-07-23 17:16:42,249 - DEBUG - on stmt: src_shape = arg(1, name=src_shape)
2025-07-23 17:16:42,249 - DEBUG - on stmt: dest_ndim = arg(2, name=dest_ndim)
2025-07-23 17:16:42,249 - DEBUG - on stmt: dest_shape = arg(3, name=dest_shape)
2025-07-23 17:16:42,249 - DEBUG - on stmt: $8compare_op.2 = src_ndim > dest_ndim
2025-07-23 17:16:42,249 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,249 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,249 - DEBUG - on stmt: branch $12pred, 14, 16
2025-07-23 17:16:42,249 - DEBUG - ==== SSA block analysis pass on 14
2025-07-23 17:16:42,249 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,249 - DEBUG - on stmt: $const14.0 = const(int, 0)
2025-07-23 17:16:42,249 - DEBUG - on stmt: $14return_const.1 = cast(value=$const14.0)
2025-07-23 17:16:42,255 - DEBUG - on stmt: return $14return_const.1
2025-07-23 17:16:42,255 - DEBUG - ==== SSA block analysis pass on 16
2025-07-23 17:16:42,255 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,256 - DEBUG - on stmt: src_index = const(int, 0)
2025-07-23 17:16:42,256 - DEBUG - on stmt: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,256 - DEBUG - on stmt: $34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,256 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,256 - DEBUG - on stmt: $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,256 - DEBUG - on stmt: branch $38pred, 40, 154
2025-07-23 17:16:42,256 - DEBUG - ==== SSA block analysis pass on 40
2025-07-23 17:16:42,257 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,257 - DEBUG - on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,257 - DEBUG - on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,257 - DEBUG - on stmt: $const62.7.2 = const(int, 1)
2025-07-23 17:16:42,257 - DEBUG - on stmt: $64compare_op.8 = dest_dim_size != $const62.7.2
2025-07-23 17:16:42,257 - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,257 - DEBUG - on stmt: $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,257 - DEBUG - on stmt: branch $68pred, 70, 102
2025-07-23 17:16:42,257 - DEBUG - ==== SSA block analysis pass on 70
2025-07-23 17:16:42,257 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,257 - DEBUG - on stmt: $74compare_op.2 = src_dim_size != dest_dim_size
2025-07-23 17:16:42,257 - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,257 - DEBUG - on stmt: $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,257 - DEBUG - on stmt: branch $78pred, 80, 122
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 80
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: $const82.1.2 = const(int, 1)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $84compare_op.2 = src_dim_size != $const82.1.2
2025-07-23 17:16:42,258 - DEBUG - on stmt: bool88 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,258 - DEBUG - on stmt: branch $88pred, 90, 122
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 90
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: $const92.1.2 = const(int, 1)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,258 - DEBUG - on stmt: $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $100return_value.4 = cast(value=$98unary_negative.3)
2025-07-23 17:16:42,258 - DEBUG - on stmt: return $100return_value.4
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 102
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: $const104.1.2 = const(int, 1)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $106compare_op.2 = src_dim_size != $const104.1.2
2025-07-23 17:16:42,258 - DEBUG - on stmt: bool110 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,258 - DEBUG - on stmt: branch $110pred, 112, 122
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 112
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,258 - DEBUG - on stmt: jump 122
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 122
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: $const124.1.2 = const(int, 1)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,258 - DEBUG - on stmt: src_index = $binop_iadd126.2
2025-07-23 17:16:42,258 - DEBUG - on stmt: $const134.4.2 = const(int, 1)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,258 - DEBUG - on stmt: dest_index = $binop_iadd136.5
2025-07-23 17:16:42,258 - DEBUG - on stmt: $146compare_op.8 = src_index < src_ndim
2025-07-23 17:16:42,258 - DEBUG - on stmt: bool150 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,258 - DEBUG - on stmt: $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,258 - DEBUG - on stmt: branch $150pred, 152, 154
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 152
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: jump 40
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block analysis pass on 154
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - on stmt: $156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,258 - DEBUG - on stmt: return $156return_value.1
2025-07-23 17:16:42,258 - DEBUG - defs defaultdict(<class 'list'>,
            {'$100return_value.4': [(<numba.core.ir.Assign object at 0x000001F6EC61B050>,
                                     90)],
             '$106compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6EC61B440>,
                                   102)],
             '$110pred': [(<numba.core.ir.Assign object at 0x000001F6EC61B6B0>,
                           102)],
             '$12pred': [(<numba.core.ir.Assign object at 0x000001F6EC618E30>,
                          0)],
             '$146compare_op.8': [(<numba.core.ir.Assign object at 0x000001F6EC6245F0>,
                                   122)],
             '$14return_const.1': [(<numba.core.ir.Assign object at 0x000001F6EC6190D0>,
                                    14)],
             '$150pred': [(<numba.core.ir.Assign object at 0x000001F6EC624860>,
                           122)],
             '$156return_value.1': [(<numba.core.ir.Assign object at 0x000001F6EC624B00>,
                                     154)],
             '$34compare_op.6': [(<numba.core.ir.Assign object at 0x000001F6EC603290>,
                                  16)],
             '$38pred': [(<numba.core.ir.Assign object at 0x000001F6EC6036E0>,
                          16)],
             '$64compare_op.8': [(<numba.core.ir.Assign object at 0x000001F6EC619C10>,
                                  40)],
             '$68pred': [(<numba.core.ir.Assign object at 0x000001F6EC619EB0>,
                          40)],
             '$74compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6EC61A060>,
                                  70)],
             '$78pred': [(<numba.core.ir.Assign object at 0x000001F6EC61A300>,
                          70)],
             '$84compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6EC61A6F0>,
                                  80)],
             '$88pred': [(<numba.core.ir.Assign object at 0x000001F6EC61A990>,
                          80)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x000001F6EC618B90>,
                                 0)],
             '$98unary_negative.3': [(<numba.core.ir.Assign object at 0x000001F6EC61AF00>,
                                      90)],
             '$binop_add94.2': [(<numba.core.ir.Assign object at 0x000001F6EC61ADE0>,
                                 90)],
             '$binop_iadd126.2': [(<numba.core.ir.Assign object at 0x000001F6EC61BDD0>,
                                   122)],
             '$binop_iadd136.5': [(<numba.core.ir.Assign object at 0x000001F6EC624230>,
                                   122)],
             '$const104.1.2': [(<numba.core.ir.Assign object at 0x000001F6EC61B2C0>,
                                102)],
             '$const124.1.2': [(<numba.core.ir.Assign object at 0x000001F6EC61BC50>,
                                122)],
             '$const134.4.2': [(<numba.core.ir.Assign object at 0x000001F6EC6240B0>,
                                122)],
             '$const14.0': [(<numba.core.ir.Assign object at 0x000001F6EC618FB0>,
                             14)],
             '$const62.7.2': [(<numba.core.ir.Assign object at 0x000001F6EC619A90>,
                               40)],
             '$const82.1.2': [(<numba.core.ir.Assign object at 0x000001F6EC61A570>,
                               80)],
             '$const92.1.2': [(<numba.core.ir.Assign object at 0x000001F6EC61AC60>,
                               90)],
             'bool110': [(<numba.core.ir.Assign object at 0x000001F6EC61B590>,
                          102)],
             'bool12': [(<numba.core.ir.Assign object at 0x000001F6EC618CE0>,
                         0)],
             'bool150': [(<numba.core.ir.Assign object at 0x000001F6EC624740>,
                          122)],
             'bool38': [(<numba.core.ir.Assign object at 0x000001F6EC6034D0>,
                         16)],
             'bool68': [(<numba.core.ir.Assign object at 0x000001F6EC619D60>,
                         40)],
             'bool78': [(<numba.core.ir.Assign object at 0x000001F6EC61A1B0>,
                         70)],
             'bool88': [(<numba.core.ir.Assign object at 0x000001F6EC61A840>,
                         80)],
             'dest_dim_size': [(<numba.core.ir.Assign object at 0x000001F6EC619790>,
                                40)],
             'dest_index': [(<numba.core.ir.Assign object at 0x000001F6EC603FE0>,
                             16),
                            (<numba.core.ir.Assign object at 0x000001F6EC624290>,
                             122)],
             'dest_ndim': [(<numba.core.ir.Assign object at 0x000001F6EC618590>,
                            0)],
             'dest_shape': [(<numba.core.ir.Assign object at 0x000001F6EC618830>,
                             0)],
             'src_dim_size': [(<numba.core.ir.Assign object at 0x000001F6EC619400>,
                               40)],
             'src_index': [(<numba.core.ir.Assign object at 0x000001F6EC6192E0>,
                            16),
                           (<numba.core.ir.Assign object at 0x000001F6EC61BE30>,
                            122)],
             'src_ndim': [(<numba.core.ir.Assign object at 0x000001F6EC6183B0>,
                           0)],
             'src_shape': [(<numba.core.ir.Assign object at 0x000001F6EC618530>,
                            0)]})
2025-07-23 17:16:42,258 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC603AA0>
2025-07-23 17:16:42,258 - DEBUG - Fix SSA violator on var src_index
2025-07-23 17:16:42,258 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:42,258 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,258 - DEBUG - on stmt: src_ndim = arg(0, name=src_ndim)
2025-07-23 17:16:42,258 - DEBUG - on stmt: src_shape = arg(1, name=src_shape)
2025-07-23 17:16:42,258 - DEBUG - on stmt: dest_ndim = arg(2, name=dest_ndim)
2025-07-23 17:16:42,267 - DEBUG - on stmt: dest_shape = arg(3, name=dest_shape)
2025-07-23 17:16:42,267 - DEBUG - on stmt: $8compare_op.2 = src_ndim > dest_ndim
2025-07-23 17:16:42,267 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,267 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,267 - DEBUG - on stmt: branch $12pred, 14, 16
2025-07-23 17:16:42,267 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:42,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,268 - DEBUG - on stmt: $const14.0 = const(int, 0)
2025-07-23 17:16:42,268 - DEBUG - on stmt: $14return_const.1 = cast(value=$const14.0)
2025-07-23 17:16:42,268 - DEBUG - on stmt: return $14return_const.1
2025-07-23 17:16:42,268 - DEBUG - ==== SSA block rewrite pass on 16
2025-07-23 17:16:42,268 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,268 - DEBUG - on stmt: src_index = const(int, 0)
2025-07-23 17:16:42,268 - DEBUG - first assign: src_index
2025-07-23 17:16:42,269 - DEBUG - replaced with: src_index = const(int, 0)
2025-07-23 17:16:42,269 - DEBUG - on stmt: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,269 - DEBUG - on stmt: $34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,269 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,269 - DEBUG - on stmt: $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,269 - DEBUG - on stmt: branch $38pred, 40, 154
2025-07-23 17:16:42,269 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:16:42,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,270 - DEBUG - on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,270 - DEBUG - on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,270 - DEBUG - on stmt: $const62.7.2 = const(int, 1)
2025-07-23 17:16:42,270 - DEBUG - on stmt: $64compare_op.8 = dest_dim_size != $const62.7.2
2025-07-23 17:16:42,270 - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,270 - DEBUG - on stmt: $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,270 - DEBUG - on stmt: branch $68pred, 70, 102
2025-07-23 17:16:42,271 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:42,271 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,271 - DEBUG - on stmt: $74compare_op.2 = src_dim_size != dest_dim_size
2025-07-23 17:16:42,271 - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,271 - DEBUG - on stmt: $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,271 - DEBUG - on stmt: branch $78pred, 80, 122
2025-07-23 17:16:42,271 - DEBUG - ==== SSA block rewrite pass on 80
2025-07-23 17:16:42,271 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,271 - DEBUG - on stmt: $const82.1.2 = const(int, 1)
2025-07-23 17:16:42,272 - DEBUG - on stmt: $84compare_op.2 = src_dim_size != $const82.1.2
2025-07-23 17:16:42,272 - DEBUG - on stmt: bool88 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,272 - DEBUG - on stmt: $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,272 - DEBUG - on stmt: branch $88pred, 90, 122
2025-07-23 17:16:42,272 - DEBUG - ==== SSA block rewrite pass on 90
2025-07-23 17:16:42,272 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,272 - DEBUG - on stmt: $const92.1.2 = const(int, 1)
2025-07-23 17:16:42,272 - DEBUG - on stmt: $binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,273 - DEBUG - on stmt: $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2)
2025-07-23 17:16:42,273 - DEBUG - on stmt: $100return_value.4 = cast(value=$98unary_negative.3)
2025-07-23 17:16:42,273 - DEBUG - on stmt: return $100return_value.4
2025-07-23 17:16:42,273 - DEBUG - ==== SSA block rewrite pass on 102
2025-07-23 17:16:42,273 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,273 - DEBUG - on stmt: $const104.1.2 = const(int, 1)
2025-07-23 17:16:42,273 - DEBUG - on stmt: $106compare_op.2 = src_dim_size != $const104.1.2
2025-07-23 17:16:42,273 - DEBUG - on stmt: bool110 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,274 - DEBUG - on stmt: $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,274 - DEBUG - on stmt: branch $110pred, 112, 122
2025-07-23 17:16:42,274 - DEBUG - ==== SSA block rewrite pass on 112
2025-07-23 17:16:42,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,274 - DEBUG - on stmt: dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,274 - DEBUG - on stmt: jump 122
2025-07-23 17:16:42,274 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:42,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,274 - DEBUG - on stmt: $const124.1.2 = const(int, 1)
2025-07-23 17:16:42,275 - DEBUG - on stmt: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,275 - DEBUG - on stmt: src_index = $binop_iadd126.2
2025-07-23 17:16:42,275 - DEBUG - replaced with: src_index.1 = $binop_iadd126.2
2025-07-23 17:16:42,275 - DEBUG - on stmt: $const134.4.2 = const(int, 1)
2025-07-23 17:16:42,275 - DEBUG - on stmt: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,275 - DEBUG - on stmt: dest_index = $binop_iadd136.5
2025-07-23 17:16:42,275 - DEBUG - on stmt: $146compare_op.8 = src_index < src_ndim
2025-07-23 17:16:42,276 - DEBUG - on stmt: bool150 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,276 - DEBUG - on stmt: $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,276 - DEBUG - on stmt: branch $150pred, 152, 154
2025-07-23 17:16:42,276 - DEBUG - ==== SSA block rewrite pass on 152
2025-07-23 17:16:42,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,276 - DEBUG - on stmt: jump 40
2025-07-23 17:16:42,276 - DEBUG - ==== SSA block rewrite pass on 154
2025-07-23 17:16:42,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC603A10>
2025-07-23 17:16:42,276 - DEBUG - on stmt: $156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,277 - DEBUG - on stmt: return $156return_value.1
2025-07-23 17:16:42,277 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {16: [<numba.core.ir.Assign object at 0x000001F6EC603470>],
             122: [<numba.core.ir.Assign object at 0x000001F6EC625880>]})
2025-07-23 17:16:42,277 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:42,277 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,277 - DEBUG - on stmt: src_ndim = arg(0, name=src_ndim)
2025-07-23 17:16:42,277 - DEBUG - on stmt: src_shape = arg(1, name=src_shape)
2025-07-23 17:16:42,277 - DEBUG - on stmt: dest_ndim = arg(2, name=dest_ndim)
2025-07-23 17:16:42,278 - DEBUG - on stmt: dest_shape = arg(3, name=dest_shape)
2025-07-23 17:16:42,278 - DEBUG - on stmt: $8compare_op.2 = src_ndim > dest_ndim
2025-07-23 17:16:42,278 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,278 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,279 - DEBUG - on stmt: branch $12pred, 14, 16
2025-07-23 17:16:42,279 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:42,279 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,279 - DEBUG - on stmt: $const14.0 = const(int, 0)
2025-07-23 17:16:42,279 - DEBUG - on stmt: $14return_const.1 = cast(value=$const14.0)
2025-07-23 17:16:42,279 - DEBUG - on stmt: return $14return_const.1
2025-07-23 17:16:42,279 - DEBUG - ==== SSA block rewrite pass on 16
2025-07-23 17:16:42,279 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,280 - DEBUG - on stmt: src_index = const(int, 0)
2025-07-23 17:16:42,280 - DEBUG - on stmt: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,280 - DEBUG - on stmt: $34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,280 - DEBUG - find_def var='src_index' stmt=$34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,280 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,281 - DEBUG - on stmt: $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,281 - DEBUG - on stmt: branch $38pred, 40, 154
2025-07-23 17:16:42,281 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:16:42,281 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,281 - DEBUG - on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,281 - DEBUG - find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,281 - DEBUG - find_def_from_top label 40
2025-07-23 17:16:42,281 - DEBUG - insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
2025-07-23 17:16:42,282 - DEBUG - find_def_from_bottom label 16
2025-07-23 17:16:42,282 - DEBUG - incoming_def src_index = const(int, 0)
2025-07-23 17:16:42,282 - DEBUG - find_def_from_bottom label 152
2025-07-23 17:16:42,282 - DEBUG - find_def_from_top label 152
2025-07-23 17:16:42,282 - DEBUG - idom 122 from label 152
2025-07-23 17:16:42,282 - DEBUG - find_def_from_bottom label 122
2025-07-23 17:16:42,282 - DEBUG - incoming_def src_index.1 = $binop_iadd126.2
2025-07-23 17:16:42,282 - DEBUG - replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2025-07-23 17:16:42,283 - DEBUG - on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,283 - DEBUG - on stmt: $const62.7.2 = const(int, 1)
2025-07-23 17:16:42,283 - DEBUG - on stmt: $64compare_op.8 = dest_dim_size != $const62.7.2
2025-07-23 17:16:42,283 - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,283 - DEBUG - on stmt: $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,283 - DEBUG - on stmt: branch $68pred, 70, 102
2025-07-23 17:16:42,283 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:42,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,284 - DEBUG - on stmt: $74compare_op.2 = src_dim_size != dest_dim_size
2025-07-23 17:16:42,284 - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,284 - DEBUG - on stmt: $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,284 - DEBUG - on stmt: branch $78pred, 80, 122
2025-07-23 17:16:42,284 - DEBUG - ==== SSA block rewrite pass on 80
2025-07-23 17:16:42,284 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,285 - DEBUG - on stmt: $const82.1.2 = const(int, 1)
2025-07-23 17:16:42,285 - DEBUG - on stmt: $84compare_op.2 = src_dim_size != $const82.1.2
2025-07-23 17:16:42,285 - DEBUG - on stmt: bool88 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,285 - DEBUG - on stmt: $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,285 - DEBUG - on stmt: branch $88pred, 90, 122
2025-07-23 17:16:42,285 - DEBUG - ==== SSA block rewrite pass on 90
2025-07-23 17:16:42,285 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,285 - DEBUG - on stmt: $const92.1.2 = const(int, 1)
2025-07-23 17:16:42,286 - DEBUG - on stmt: $binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,286 - DEBUG - on stmt: $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2)
2025-07-23 17:16:42,286 - DEBUG - on stmt: $100return_value.4 = cast(value=$98unary_negative.3)
2025-07-23 17:16:42,286 - DEBUG - on stmt: return $100return_value.4
2025-07-23 17:16:42,286 - DEBUG - ==== SSA block rewrite pass on 102
2025-07-23 17:16:42,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,286 - DEBUG - on stmt: $const104.1.2 = const(int, 1)
2025-07-23 17:16:42,286 - DEBUG - on stmt: $106compare_op.2 = src_dim_size != $const104.1.2
2025-07-23 17:16:42,287 - DEBUG - on stmt: bool110 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,287 - DEBUG - on stmt: $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,287 - DEBUG - on stmt: branch $110pred, 112, 122
2025-07-23 17:16:42,287 - DEBUG - ==== SSA block rewrite pass on 112
2025-07-23 17:16:42,287 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,287 - DEBUG - on stmt: dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,287 - DEBUG - on stmt: jump 122
2025-07-23 17:16:42,288 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:42,288 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,288 - DEBUG - on stmt: $const124.1.2 = const(int, 1)
2025-07-23 17:16:42,288 - DEBUG - on stmt: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,289 - DEBUG - find_def var='src_index' stmt=$binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,289 - DEBUG - find_def_from_top label 122
2025-07-23 17:16:42,289 - DEBUG - idom 40 from label 122
2025-07-23 17:16:42,289 - DEBUG - find_def_from_bottom label 40
2025-07-23 17:16:42,289 - DEBUG - replaced with: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,289 - DEBUG - on stmt: src_index.1 = $binop_iadd126.2
2025-07-23 17:16:42,289 - DEBUG - on stmt: $const134.4.2 = const(int, 1)
2025-07-23 17:16:42,290 - DEBUG - on stmt: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,290 - DEBUG - on stmt: dest_index = $binop_iadd136.5
2025-07-23 17:16:42,290 - DEBUG - on stmt: $146compare_op.8 = src_index < src_ndim
2025-07-23 17:16:42,290 - DEBUG - find_def var='src_index' stmt=$146compare_op.8 = src_index < src_ndim
2025-07-23 17:16:42,290 - DEBUG - replaced with: $146compare_op.8 = src_index.1 < src_ndim
2025-07-23 17:16:42,290 - DEBUG - on stmt: bool150 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,290 - DEBUG - on stmt: $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,290 - DEBUG - on stmt: branch $150pred, 152, 154
2025-07-23 17:16:42,291 - DEBUG - ==== SSA block rewrite pass on 152
2025-07-23 17:16:42,291 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,291 - DEBUG - on stmt: jump 40
2025-07-23 17:16:42,291 - DEBUG - ==== SSA block rewrite pass on 154
2025-07-23 17:16:42,291 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,291 - DEBUG - on stmt: $156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,291 - DEBUG - on stmt: return $156return_value.1
2025-07-23 17:16:42,291 - DEBUG - Fix SSA violator on var dest_index
2025-07-23 17:16:42,292 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:42,292 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,292 - DEBUG - on stmt: src_ndim = arg(0, name=src_ndim)
2025-07-23 17:16:42,292 - DEBUG - on stmt: src_shape = arg(1, name=src_shape)
2025-07-23 17:16:42,292 - DEBUG - on stmt: dest_ndim = arg(2, name=dest_ndim)
2025-07-23 17:16:42,292 - DEBUG - on stmt: dest_shape = arg(3, name=dest_shape)
2025-07-23 17:16:42,292 - DEBUG - on stmt: $8compare_op.2 = src_ndim > dest_ndim
2025-07-23 17:16:42,292 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,293 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,293 - DEBUG - on stmt: branch $12pred, 14, 16
2025-07-23 17:16:42,293 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:42,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,293 - DEBUG - on stmt: $const14.0 = const(int, 0)
2025-07-23 17:16:42,293 - DEBUG - on stmt: $14return_const.1 = cast(value=$const14.0)
2025-07-23 17:16:42,293 - DEBUG - on stmt: return $14return_const.1
2025-07-23 17:16:42,293 - DEBUG - ==== SSA block rewrite pass on 16
2025-07-23 17:16:42,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,294 - DEBUG - on stmt: src_index = const(int, 0)
2025-07-23 17:16:42,294 - DEBUG - on stmt: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,294 - DEBUG - first assign: dest_index
2025-07-23 17:16:42,294 - DEBUG - replaced with: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,294 - DEBUG - on stmt: $34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,294 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,294 - DEBUG - on stmt: $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,294 - DEBUG - on stmt: branch $38pred, 40, 154
2025-07-23 17:16:42,295 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:16:42,295 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,295 - DEBUG - on stmt: src_index.2 = phi(incoming_values=[Var(src_index, npyimpl.py:357), Var(src_index.1, npyimpl.py:373)], incoming_blocks=[16, 152])
2025-07-23 17:16:42,295 - DEBUG - on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2025-07-23 17:16:42,295 - DEBUG - on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,295 - DEBUG - on stmt: $const62.7.2 = const(int, 1)
2025-07-23 17:16:42,295 - DEBUG - on stmt: $64compare_op.8 = dest_dim_size != $const62.7.2
2025-07-23 17:16:42,295 - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,296 - DEBUG - on stmt: $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,296 - DEBUG - on stmt: branch $68pred, 70, 102
2025-07-23 17:16:42,296 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:42,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,296 - DEBUG - on stmt: $74compare_op.2 = src_dim_size != dest_dim_size
2025-07-23 17:16:42,296 - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,296 - DEBUG - on stmt: $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,296 - DEBUG - on stmt: branch $78pred, 80, 122
2025-07-23 17:16:42,297 - DEBUG - ==== SSA block rewrite pass on 80
2025-07-23 17:16:42,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,297 - DEBUG - on stmt: $const82.1.2 = const(int, 1)
2025-07-23 17:16:42,297 - DEBUG - on stmt: $84compare_op.2 = src_dim_size != $const82.1.2
2025-07-23 17:16:42,297 - DEBUG - on stmt: bool88 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,297 - DEBUG - on stmt: $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,297 - DEBUG - on stmt: branch $88pred, 90, 122
2025-07-23 17:16:42,297 - DEBUG - ==== SSA block rewrite pass on 90
2025-07-23 17:16:42,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,297 - DEBUG - on stmt: $const92.1.2 = const(int, 1)
2025-07-23 17:16:42,297 - DEBUG - on stmt: $binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,297 - DEBUG - on stmt: $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2)
2025-07-23 17:16:42,297 - DEBUG - on stmt: $100return_value.4 = cast(value=$98unary_negative.3)
2025-07-23 17:16:42,298 - DEBUG - on stmt: return $100return_value.4
2025-07-23 17:16:42,298 - DEBUG - ==== SSA block rewrite pass on 102
2025-07-23 17:16:42,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,298 - DEBUG - on stmt: $const104.1.2 = const(int, 1)
2025-07-23 17:16:42,298 - DEBUG - on stmt: $106compare_op.2 = src_dim_size != $const104.1.2
2025-07-23 17:16:42,298 - DEBUG - on stmt: bool110 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,298 - DEBUG - on stmt: $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,298 - DEBUG - on stmt: branch $110pred, 112, 122
2025-07-23 17:16:42,299 - DEBUG - ==== SSA block rewrite pass on 112
2025-07-23 17:16:42,299 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,299 - DEBUG - on stmt: dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,299 - DEBUG - on stmt: jump 122
2025-07-23 17:16:42,299 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:42,300 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,300 - DEBUG - on stmt: $const124.1.2 = const(int, 1)
2025-07-23 17:16:42,300 - DEBUG - on stmt: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,300 - DEBUG - on stmt: src_index.1 = $binop_iadd126.2
2025-07-23 17:16:42,300 - DEBUG - on stmt: $const134.4.2 = const(int, 1)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,301 - DEBUG - on stmt: dest_index = $binop_iadd136.5
2025-07-23 17:16:42,301 - DEBUG - replaced with: dest_index.1 = $binop_iadd136.5
2025-07-23 17:16:42,301 - DEBUG - on stmt: $146compare_op.8 = src_index.1 < src_ndim
2025-07-23 17:16:42,301 - DEBUG - on stmt: bool150 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,301 - DEBUG - on stmt: branch $150pred, 152, 154
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 152
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,301 - DEBUG - on stmt: jump 40
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 154
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F6EC6031D0>
2025-07-23 17:16:42,301 - DEBUG - on stmt: $156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,301 - DEBUG - on stmt: return $156return_value.1
2025-07-23 17:16:42,301 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {16: [<numba.core.ir.Assign object at 0x000001F6EC603A70>],
             122: [<numba.core.ir.Assign object at 0x000001F6EC624E90>]})
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,301 - DEBUG - on stmt: src_ndim = arg(0, name=src_ndim)
2025-07-23 17:16:42,301 - DEBUG - on stmt: src_shape = arg(1, name=src_shape)
2025-07-23 17:16:42,301 - DEBUG - on stmt: dest_ndim = arg(2, name=dest_ndim)
2025-07-23 17:16:42,301 - DEBUG - on stmt: dest_shape = arg(3, name=dest_shape)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $8compare_op.2 = src_ndim > dest_ndim
2025-07-23 17:16:42,301 - DEBUG - on stmt: bool12 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $12pred = call bool12($8compare_op.2, func=bool12, args=(Var($8compare_op.2, npyimpl.py:352),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,301 - DEBUG - on stmt: branch $12pred, 14, 16
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 14
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,301 - DEBUG - on stmt: $const14.0 = const(int, 0)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $14return_const.1 = cast(value=$const14.0)
2025-07-23 17:16:42,301 - DEBUG - on stmt: return $14return_const.1
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 16
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,301 - DEBUG - on stmt: src_index = const(int, 0)
2025-07-23 17:16:42,301 - DEBUG - on stmt: dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,301 - DEBUG - on stmt: $34compare_op.6 = src_index < src_ndim
2025-07-23 17:16:42,301 - DEBUG - on stmt: bool38 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,301 - DEBUG - on stmt: $38pred = call bool38($34compare_op.6, func=bool38, args=(Var($34compare_op.6, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,301 - DEBUG - on stmt: branch $38pred, 40, 154
2025-07-23 17:16:42,301 - DEBUG - ==== SSA block rewrite pass on 40
2025-07-23 17:16:42,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,301 - DEBUG - on stmt: src_index.2 = phi(incoming_values=[Var(src_index, npyimpl.py:357), Var(src_index.1, npyimpl.py:373)], incoming_blocks=[16, 152])
2025-07-23 17:16:42,301 - DEBUG - on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2025-07-23 17:16:42,301 - DEBUG - on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,301 - DEBUG - find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2025-07-23 17:16:42,301 - DEBUG - find_def_from_top label 40
2025-07-23 17:16:42,301 - DEBUG - insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
2025-07-23 17:16:42,301 - DEBUG - find_def_from_bottom label 16
2025-07-23 17:16:42,301 - DEBUG - incoming_def dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,301 - DEBUG - find_def_from_bottom label 152
2025-07-23 17:16:42,301 - DEBUG - find_def_from_top label 152
2025-07-23 17:16:42,301 - DEBUG - idom 122 from label 152
2025-07-23 17:16:42,301 - DEBUG - find_def_from_bottom label 122
2025-07-23 17:16:42,301 - DEBUG - incoming_def dest_index.1 = $binop_iadd136.5
2025-07-23 17:16:42,301 - DEBUG - replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const62.7.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $64compare_op.8 = dest_dim_size != $const62.7.2
2025-07-23 17:16:42,308 - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $68pred = call bool68($64compare_op.8, func=bool68, args=(Var($64compare_op.8, npyimpl.py:364),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,308 - DEBUG - on stmt: branch $68pred, 70, 102
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 70
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: $74compare_op.2 = src_dim_size != dest_dim_size
2025-07-23 17:16:42,308 - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $78pred = call bool78($74compare_op.2, func=bool78, args=(Var($74compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,308 - DEBUG - on stmt: branch $78pred, 80, 122
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 80
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const82.1.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $84compare_op.2 = src_dim_size != $const82.1.2
2025-07-23 17:16:42,308 - DEBUG - on stmt: bool88 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $88pred = call bool88($84compare_op.2, func=bool88, args=(Var($84compare_op.2, npyimpl.py:368),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,308 - DEBUG - on stmt: branch $88pred, 90, 122
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 90
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const92.1.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,308 - DEBUG - find_def var='dest_index' stmt=$binop_add94.2 = dest_index + $const92.1.2
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 90
2025-07-23 17:16:42,308 - DEBUG - idom 80 from label 90
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 80
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 80
2025-07-23 17:16:42,308 - DEBUG - idom 70 from label 80
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 70
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 70
2025-07-23 17:16:42,308 - DEBUG - idom 40 from label 70
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 40
2025-07-23 17:16:42,308 - DEBUG - replaced with: $binop_add94.2 = dest_index.2 + $const92.1.2
2025-07-23 17:16:42,308 - DEBUG - on stmt: $98unary_negative.3 = unary(fn=<built-in function neg>, value=$binop_add94.2)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $100return_value.4 = cast(value=$98unary_negative.3)
2025-07-23 17:16:42,308 - DEBUG - on stmt: return $100return_value.4
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 102
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const104.1.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $106compare_op.2 = src_dim_size != $const104.1.2
2025-07-23 17:16:42,308 - DEBUG - on stmt: bool110 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $110pred = call bool110($106compare_op.2, func=bool110, args=(Var($106compare_op.2, npyimpl.py:370),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,308 - DEBUG - on stmt: branch $110pred, 112, 122
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 112
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,308 - DEBUG - find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 112
2025-07-23 17:16:42,308 - DEBUG - idom 102 from label 112
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 102
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 102
2025-07-23 17:16:42,308 - DEBUG - idom 40 from label 102
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 40
2025-07-23 17:16:42,308 - DEBUG - replaced with: dest_shape[dest_index.2] = src_dim_size
2025-07-23 17:16:42,308 - DEBUG - on stmt: jump 122
2025-07-23 17:16:42,308 - DEBUG - ==== SSA block rewrite pass on 122
2025-07-23 17:16:42,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const124.1.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $binop_iadd126.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const124.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,308 - DEBUG - on stmt: src_index.1 = $binop_iadd126.2
2025-07-23 17:16:42,308 - DEBUG - on stmt: $const134.4.2 = const(int, 1)
2025-07-23 17:16:42,308 - DEBUG - on stmt: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,308 - DEBUG - find_def var='dest_index' stmt=$binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,308 - DEBUG - find_def_from_top label 122
2025-07-23 17:16:42,308 - DEBUG - idom 40 from label 122
2025-07-23 17:16:42,308 - DEBUG - find_def_from_bottom label 40
2025-07-23 17:16:42,317 - DEBUG - replaced with: $binop_iadd136.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const134.4.2, static_lhs=Undefined, static_rhs=Undefined)
2025-07-23 17:16:42,317 - DEBUG - on stmt: dest_index.1 = $binop_iadd136.5
2025-07-23 17:16:42,317 - DEBUG - on stmt: $146compare_op.8 = src_index.1 < src_ndim
2025-07-23 17:16:42,317 - DEBUG - on stmt: bool150 = global(bool: <class 'bool'>)
2025-07-23 17:16:42,317 - DEBUG - on stmt: $150pred = call bool150($146compare_op.8, func=bool150, args=(Var($146compare_op.8, npyimpl.py:359),), kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,318 - DEBUG - on stmt: branch $150pred, 152, 154
2025-07-23 17:16:42,318 - DEBUG - ==== SSA block rewrite pass on 152
2025-07-23 17:16:42,318 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,318 - DEBUG - on stmt: jump 40
2025-07-23 17:16:42,318 - DEBUG - ==== SSA block rewrite pass on 154
2025-07-23 17:16:42,318 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F6EC603A10>
2025-07-23 17:16:42,318 - DEBUG - on stmt: $156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,318 - DEBUG - find_def var='dest_index' stmt=$156return_value.1 = cast(value=dest_index)
2025-07-23 17:16:42,318 - DEBUG - find_def_from_top label 154
2025-07-23 17:16:42,318 - DEBUG - insert phi node dest_index.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-07-23 17:16:42,318 - DEBUG - find_def_from_bottom label 16
2025-07-23 17:16:42,318 - DEBUG - incoming_def dest_index = dest_ndim - src_ndim
2025-07-23 17:16:42,318 - DEBUG - find_def_from_bottom label 122
2025-07-23 17:16:42,318 - DEBUG - incoming_def dest_index.1 = $binop_iadd136.5
2025-07-23 17:16:42,318 - DEBUG - replaced with: $156return_value.1 = cast(value=dest_index.3)
2025-07-23 17:16:42,318 - DEBUG - on stmt: return $156return_value.1
2025-07-23 17:16:42,430 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	RESUME(arg=0, lineno=4330)
           4	LOAD_FAST(arg=0, lineno=4333)
           6	LOAD_ATTR(arg=1, lineno=4333)
          26	LOAD_FAST(arg=1, lineno=4333)
          28	LOAD_FAST(arg=2, lineno=4333)
          30	CALL(arg=2, lineno=4333)
          38	RETURN_VALUE(arg=None, lineno=4333)
2025-07-23 17:16:42,430 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,431 - DEBUG - stack: []
2025-07-23 17:16:42,431 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,431 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
2025-07-23 17:16:42,431 - DEBUG - stack []
2025-07-23 17:16:42,431 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4330)
2025-07-23 17:16:42,431 - DEBUG - stack []
2025-07-23 17:16:42,431 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4333)
2025-07-23 17:16:42,432 - DEBUG - stack []
2025-07-23 17:16:42,432 - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=4333)
2025-07-23 17:16:42,432 - DEBUG - stack ['$arrtype4.0']
2025-07-23 17:16:42,433 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=4333)
2025-07-23 17:16:42,433 - DEBUG - stack ['$null$6.2', '$6load_attr.1']
2025-07-23 17:16:42,433 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=4333)
2025-07-23 17:16:42,434 - DEBUG - stack ['$null$6.2', '$6load_attr.1', '$size26.3']
2025-07-23 17:16:42,434 - DEBUG - dispatch pc=30, inst=CALL(arg=2, lineno=4333)
2025-07-23 17:16:42,434 - DEBUG - stack ['$null$6.2', '$6load_attr.1', '$size26.3', '$align28.4']
2025-07-23 17:16:42,434 - DEBUG - dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4333)
2025-07-23 17:16:42,434 - DEBUG - stack ['$30call.5']
2025-07-23 17:16:42,434 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,434 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,434 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,434 - DEBUG - defmap: {}
2025-07-23 17:16:42,434 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,434 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,434 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,434 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,434 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,434 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_attr.1'}), (26, {'res': '$size26.3'}), (28, {'res': '$align28.4'}), (30, {'func': '$6load_attr.1', 'args': ['$size26.3', '$align28.4'], 'kw_names': None, 'res': '$30call.5'}), (38, {'retval': '$30call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,434 - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_attr.1 = getattr(value=arrtype, attr=_allocate) ['$6load_attr.1', 'arrtype']
    $30call.5 = call $6load_attr.1(size, align, func=$6load_attr.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$30call.5', '$6load_attr.1', 'align', 'size']
    $38return_value.6 = cast(value=$30call.5) ['$30call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

2025-07-23 17:16:42,438 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,438 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC62A5A0>
2025-07-23 17:16:42,438 - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
2025-07-23 17:16:42,438 - DEBUG - on stmt: size = arg(1, name=size)
2025-07-23 17:16:42,438 - DEBUG - on stmt: align = arg(2, name=align)
2025-07-23 17:16:42,438 - DEBUG - on stmt: $6load_attr.1 = getattr(value=arrtype, attr=_allocate)
2025-07-23 17:16:42,438 - DEBUG - on stmt: $30call.5 = call $6load_attr.1(size, align, func=$6load_attr.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,438 - DEBUG - on stmt: $38return_value.6 = cast(value=$30call.5)
2025-07-23 17:16:42,438 - DEBUG - on stmt: return $38return_value.6
2025-07-23 17:16:42,438 - DEBUG - defs defaultdict(<class 'list'>,
            {'$30call.5': [(<numba.core.ir.Assign object at 0x000001F6EC62B020>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x000001F6EC62B140>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x000001F6EC62AC90>,
                                0)],
             'align': [(<numba.core.ir.Assign object at 0x000001F6EC62AA20>,
                        0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x000001F6EC62A7E0>,
                          0)],
             'size': [(<numba.core.ir.Assign object at 0x000001F6EC62A900>,
                       0)]})
2025-07-23 17:16:42,438 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC630050>
2025-07-23 17:16:42,448 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	RESUME(arg=0, lineno=4325)
           4	LOAD_GLOBAL(arg=1, lineno=4326)
          14	LOAD_FAST(arg=1, lineno=4326)
          16	LOAD_FAST(arg=2, lineno=4326)
          18	CALL(arg=2, lineno=4326)
          26	RETURN_VALUE(arg=None, lineno=4326)
2025-07-23 17:16:42,448 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,448 - DEBUG - stack: []
2025-07-23 17:16:42,448 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
2025-07-23 17:16:42,449 - DEBUG - stack []
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=4325)
2025-07-23 17:16:42,449 - DEBUG - stack []
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4326)
2025-07-23 17:16:42,449 - DEBUG - stack []
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=4326)
2025-07-23 17:16:42,449 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4326)
2025-07-23 17:16:42,449 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize14.2']
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=18, inst=CALL(arg=2, lineno=4326)
2025-07-23 17:16:42,449 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$allocsize14.2', '$align16.3']
2025-07-23 17:16:42,449 - DEBUG - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4326)
2025-07-23 17:16:42,449 - DEBUG - stack ['$18call.4']
2025-07-23 17:16:42,449 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,449 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,449 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,449 - DEBUG - defmap: {}
2025-07-23 17:16:42,449 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,449 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,449 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,449 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,449 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,449 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (14, {'res': '$allocsize14.2'}), (16, {'res': '$align16.3'}), (18, {'func': '$4load_global.0', 'args': ['$allocsize14.2', '$align16.3'], 'kw_names': None, 'res': '$18call.4'}), (26, {'retval': '$18call.4', 'castval': '$26return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,449 - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $18call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call.4', '$4load_global.0', 'align', 'allocsize']
    $26return_value.5 = cast(value=$18call.4) ['$18call.4', '$26return_value.5']
    return $26return_value.5                 ['$26return_value.5']

2025-07-23 17:16:42,449 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,449 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC62B320>
2025-07-23 17:16:42,449 - DEBUG - on stmt: cls = arg(0, name=cls)
2025-07-23 17:16:42,449 - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
2025-07-23 17:16:42,449 - DEBUG - on stmt: align = arg(2, name=align)
2025-07-23 17:16:42,449 - DEBUG - on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2025-07-23 17:16:42,449 - DEBUG - on stmt: $18call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-23 17:16:42,449 - DEBUG - on stmt: $26return_value.5 = cast(value=$18call.4)
2025-07-23 17:16:42,449 - DEBUG - on stmt: return $26return_value.5
2025-07-23 17:16:42,449 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call.4': [(<numba.core.ir.Assign object at 0x000001F6EC659610>,
                            0)],
             '$26return_value.5': [(<numba.core.ir.Assign object at 0x000001F6EC659730>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F6EC659280>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x000001F6EC659100>,
                        0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x000001F6EC658FE0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x000001F6EC658EC0>, 0)]})
2025-07-23 17:16:42,449 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC62B320>
2025-07-23 17:16:42,498 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=2, lineno=1)
           8	BINARY_OP(arg=5, lineno=1)
          12	LOAD_FAST(arg=1, lineno=1)
          14	BINARY_OP(arg=11, lineno=1)
          18	RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,498 - DEBUG - stack: []
2025-07-23 17:16:42,498 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack []
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack []
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack []
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack ['$_370binary_subscr_24_14.0']
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=5, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack ['$_370binary_subscr_24_14.0', '$rsize_16.1']
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack ['$binop_mul8.2']
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=11, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack ['$binop_mul8.2', '$group_size_212.3']
2025-07-23 17:16:42,498 - DEBUG - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,498 - DEBUG - stack ['$binop_truediv14.4']
2025-07-23 17:16:42,498 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,498 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,498 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,498 - DEBUG - defmap: {}
2025-07-23 17:16:42,498 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,498 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,498 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,498 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,498 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,498 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$_370binary_subscr_24_14.0'}), (6, {'res': '$rsize_16.1'}), (8, {'op': '*', 'lhs': '$_370binary_subscr_24_14.0', 'rhs': '$rsize_16.1', 'res': '$binop_mul8.2'}), (12, {'res': '$group_size_212.3'}), (14, {'op': '/', 'lhs': '$binop_mul8.2', 'rhs': '$group_size_212.3', 'res': '$binop_truediv14.4'}), (18, {'retval': '$binop_truediv14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,498 - DEBUG - label 0:
    _370binary_subscr_24_1 = arg(0, name=_370binary_subscr_24_1) ['_370binary_subscr_24_1']
    group_size_2 = arg(1, name=group_size_2) ['group_size_2']
    rsize_1 = arg(2, name=rsize_1)           ['rsize_1']
    $binop_mul8.2 = _370binary_subscr_24_1 * rsize_1 ['$binop_mul8.2', '_370binary_subscr_24_1', 'rsize_1']
    $binop_truediv14.4 = $binop_mul8.2 / group_size_2 ['$binop_mul8.2', '$binop_truediv14.4', 'group_size_2']
    $18return_value.5 = cast(value=$binop_truediv14.4) ['$18return_value.5', '$binop_truediv14.4']
    return $18return_value.5                 ['$18return_value.5']

2025-07-23 17:16:42,508 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,508 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC6B9850>
2025-07-23 17:16:42,508 - DEBUG - on stmt: _370binary_subscr_24_1 = arg(0, name=_370binary_subscr_24_1)
2025-07-23 17:16:42,508 - DEBUG - on stmt: group_size_2 = arg(1, name=group_size_2)
2025-07-23 17:16:42,508 - DEBUG - on stmt: rsize_1 = arg(2, name=rsize_1)
2025-07-23 17:16:42,508 - DEBUG - on stmt: $binop_mul8.2 = _370binary_subscr_24_1 * rsize_1
2025-07-23 17:16:42,508 - DEBUG - on stmt: $binop_truediv14.4 = $binop_mul8.2 / group_size_2
2025-07-23 17:16:42,508 - DEBUG - on stmt: $18return_value.5 = cast(value=$binop_truediv14.4)
2025-07-23 17:16:42,508 - DEBUG - on stmt: return $18return_value.5
2025-07-23 17:16:42,508 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x000001F6EC6B93A0>,
                                    0)],
             '$binop_mul8.2': [(<numba.core.ir.Assign object at 0x000001F6EC6B9040>,
                                0)],
             '$binop_truediv14.4': [(<numba.core.ir.Assign object at 0x000001F6EC6B9280>,
                                     0)],
             '_370binary_subscr_24_1': [(<numba.core.ir.Assign object at 0x000001F6EC6B8A70>,
                                         0)],
             'group_size_2': [(<numba.core.ir.Assign object at 0x000001F6EC6B8B90>,
                               0)],
             'rsize_1': [(<numba.core.ir.Assign object at 0x000001F6EC6B8CB0>,
                          0)]})
2025-07-23 17:16:42,508 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC6B9850>
2025-07-23 17:16:42,878 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=2, lineno=1)
           8	BINARY_OP(arg=5, lineno=1)
          12	LOAD_FAST(arg=1, lineno=1)
          14	BINARY_OP(arg=11, lineno=1)
          18	RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,878 - DEBUG - stack: []
2025-07-23 17:16:42,878 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - stack []
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - stack []
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - stack []
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - stack ['$_322binary_subscr_10_14.0']
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=5, lineno=1)
2025-07-23 17:16:42,878 - DEBUG - stack ['$_322binary_subscr_10_14.0', '$lsize_16.1']
2025-07-23 17:16:42,878 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1)
2025-07-23 17:16:42,881 - DEBUG - stack ['$binop_mul8.2']
2025-07-23 17:16:42,881 - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=11, lineno=1)
2025-07-23 17:16:42,881 - DEBUG - stack ['$binop_mul8.2', '$group_size_112.3']
2025-07-23 17:16:42,881 - DEBUG - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,881 - DEBUG - stack ['$binop_truediv14.4']
2025-07-23 17:16:42,881 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,881 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,881 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,881 - DEBUG - defmap: {}
2025-07-23 17:16:42,881 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,881 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,881 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,881 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,881 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,881 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$_322binary_subscr_10_14.0'}), (6, {'res': '$lsize_16.1'}), (8, {'op': '*', 'lhs': '$_322binary_subscr_10_14.0', 'rhs': '$lsize_16.1', 'res': '$binop_mul8.2'}), (12, {'res': '$group_size_112.3'}), (14, {'op': '/', 'lhs': '$binop_mul8.2', 'rhs': '$group_size_112.3', 'res': '$binop_truediv14.4'}), (18, {'retval': '$binop_truediv14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,881 - DEBUG - label 0:
    _322binary_subscr_10_1 = arg(0, name=_322binary_subscr_10_1) ['_322binary_subscr_10_1']
    group_size_1 = arg(1, name=group_size_1) ['group_size_1']
    lsize_1 = arg(2, name=lsize_1)           ['lsize_1']
    $binop_mul8.2 = _322binary_subscr_10_1 * lsize_1 ['$binop_mul8.2', '_322binary_subscr_10_1', 'lsize_1']
    $binop_truediv14.4 = $binop_mul8.2 / group_size_1 ['$binop_mul8.2', '$binop_truediv14.4', 'group_size_1']
    $18return_value.5 = cast(value=$binop_truediv14.4) ['$18return_value.5', '$binop_truediv14.4']
    return $18return_value.5                 ['$18return_value.5']

2025-07-23 17:16:42,881 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,881 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC8674A0>
2025-07-23 17:16:42,881 - DEBUG - on stmt: _322binary_subscr_10_1 = arg(0, name=_322binary_subscr_10_1)
2025-07-23 17:16:42,881 - DEBUG - on stmt: group_size_1 = arg(1, name=group_size_1)
2025-07-23 17:16:42,881 - DEBUG - on stmt: lsize_1 = arg(2, name=lsize_1)
2025-07-23 17:16:42,881 - DEBUG - on stmt: $binop_mul8.2 = _322binary_subscr_10_1 * lsize_1
2025-07-23 17:16:42,881 - DEBUG - on stmt: $binop_truediv14.4 = $binop_mul8.2 / group_size_1
2025-07-23 17:16:42,881 - DEBUG - on stmt: $18return_value.5 = cast(value=$binop_truediv14.4)
2025-07-23 17:16:42,881 - DEBUG - on stmt: return $18return_value.5
2025-07-23 17:16:42,881 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x000001F6EC870BC0>,
                                    0)],
             '$binop_mul8.2': [(<numba.core.ir.Assign object at 0x000001F6EC870860>,
                                0)],
             '$binop_truediv14.4': [(<numba.core.ir.Assign object at 0x000001F6EC870AA0>,
                                     0)],
             '_322binary_subscr_10_1': [(<numba.core.ir.Assign object at 0x000001F6EC870290>,
                                         0)],
             'group_size_1': [(<numba.core.ir.Assign object at 0x000001F6EC8703B0>,
                               0)],
             'lsize_1': [(<numba.core.ir.Assign object at 0x000001F6EC8704D0>,
                          0)]})
2025-07-23 17:16:42,881 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC8674A0>
2025-07-23 17:16:42,908 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=1)
           6	LOAD_FAST(arg=2, lineno=1)
           8	BINARY_OP(arg=5, lineno=1)
          12	LOAD_FAST(arg=1, lineno=1)
          14	BINARY_OP(arg=11, lineno=1)
          18	RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-23 17:16:42,913 - DEBUG - stack: []
2025-07-23 17:16:42,913 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack []
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack []
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack []
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack ['$_370binary_subscr_24_14.0']
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=8, inst=BINARY_OP(arg=5, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack ['$_370binary_subscr_24_14.0', '$rsize_16.1']
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack ['$binop_mul8.2']
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=14, inst=BINARY_OP(arg=11, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack ['$binop_mul8.2', '$group_size_212.3']
2025-07-23 17:16:42,913 - DEBUG - dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=1)
2025-07-23 17:16:42,913 - DEBUG - stack ['$binop_truediv14.4']
2025-07-23 17:16:42,913 - DEBUG - end state. edges=[]
2025-07-23 17:16:42,913 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-23 17:16:42,913 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-23 17:16:42,913 - DEBUG - defmap: {}
2025-07-23 17:16:42,913 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,913 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-23 17:16:42,913 - DEBUG - keep phismap: {}
2025-07-23 17:16:42,913 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-23 17:16:42,913 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-23 17:16:42,913 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$_370binary_subscr_24_14.0'}), (6, {'res': '$rsize_16.1'}), (8, {'op': '*', 'lhs': '$_370binary_subscr_24_14.0', 'rhs': '$rsize_16.1', 'res': '$binop_mul8.2'}), (12, {'res': '$group_size_212.3'}), (14, {'op': '/', 'lhs': '$binop_mul8.2', 'rhs': '$group_size_212.3', 'res': '$binop_truediv14.4'}), (18, {'retval': '$binop_truediv14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-23 17:16:42,913 - DEBUG - label 0:
    _370binary_subscr_24_1 = arg(0, name=_370binary_subscr_24_1) ['_370binary_subscr_24_1']
    group_size_2 = arg(1, name=group_size_2) ['group_size_2']
    rsize_1 = arg(2, name=rsize_1)           ['rsize_1']
    $binop_mul8.2 = _370binary_subscr_24_1 * rsize_1 ['$binop_mul8.2', '_370binary_subscr_24_1', 'rsize_1']
    $binop_truediv14.4 = $binop_mul8.2 / group_size_2 ['$binop_mul8.2', '$binop_truediv14.4', 'group_size_2']
    $18return_value.5 = cast(value=$binop_truediv14.4) ['$18return_value.5', '$binop_truediv14.4']
    return $18return_value.5                 ['$18return_value.5']

2025-07-23 17:16:42,918 - DEBUG - ==== SSA block analysis pass on 0
2025-07-23 17:16:42,918 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F6EC89F650>
2025-07-23 17:16:42,918 - DEBUG - on stmt: _370binary_subscr_24_1 = arg(0, name=_370binary_subscr_24_1)
2025-07-23 17:16:42,918 - DEBUG - on stmt: group_size_2 = arg(1, name=group_size_2)
2025-07-23 17:16:42,918 - DEBUG - on stmt: rsize_1 = arg(2, name=rsize_1)
2025-07-23 17:16:42,918 - DEBUG - on stmt: $binop_mul8.2 = _370binary_subscr_24_1 * rsize_1
2025-07-23 17:16:42,918 - DEBUG - on stmt: $binop_truediv14.4 = $binop_mul8.2 / group_size_2
2025-07-23 17:16:42,918 - DEBUG - on stmt: $18return_value.5 = cast(value=$binop_truediv14.4)
2025-07-23 17:16:42,918 - DEBUG - on stmt: return $18return_value.5
2025-07-23 17:16:42,918 - DEBUG - defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x000001F6EC89F230>,
                                    0)],
             '$binop_mul8.2': [(<numba.core.ir.Assign object at 0x000001F6EC89EED0>,
                                0)],
             '$binop_truediv14.4': [(<numba.core.ir.Assign object at 0x000001F6EC89F110>,
                                     0)],
             '_370binary_subscr_24_1': [(<numba.core.ir.Assign object at 0x000001F6EC89E930>,
                                         0)],
             'group_size_2': [(<numba.core.ir.Assign object at 0x000001F6EC89EA50>,
                               0)],
             'rsize_1': [(<numba.core.ir.Assign object at 0x000001F6EC89EB70>,
                          0)]})
2025-07-23 17:16:42,918 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F6EC89F650>
2025-07-23 17:16:43,270 - INFO - Computed SHAP values for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-23 17:18:13,967 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-23 17:18:13,967 - INFO - Processed validation example 1/40
2025-07-23 17:18:14,372 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:14,847 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:18:14,847 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:15,332 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:18:15,337 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:16,227 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:18:16,237 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:18,640 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:18,640 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:20,997 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:20,997 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:18:23,272 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:23,272 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:25,352 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:25,357 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:18:27,577 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:27,584 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:29,697 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:29,697 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>፦ 300 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:31,932 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:31,937 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:34,240 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:34,243 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 '<mask> <mask> <mask>፦ 300 <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:36,614 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:36,617 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:39,023 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:39,026 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:18:41,257 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:41,261 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>100 ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:43,475 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:43,477 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask>ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ው <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:18:45,651 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:45,657 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask>100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:18:47,947 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:47,947 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስ <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ን <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:18:50,092 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:50,100 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask>ውስ <mask>ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 '360 100 ዋጋ፦ 300 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:18:52,237 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:18:52,245 - INFO - Computed SHAP values for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-23 17:20:14,524 - INFO - Computed LIME explanation for message: 360 100 ዋጋ፦ 300 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 ...
2025-07-23 17:20:14,524 - INFO - Processed validation example 2/40
2025-07-23 17:20:15,087 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:15,561 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:20:15,562 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:16,009 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:20:16,018 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:16,834 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:20:16,839 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:19,130 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:19,132 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:21,501 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:21,504 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:23,713 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:23,716 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:25,955 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:25,959 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:28,181 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:28,184 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:30,444 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:30,448 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:20:32,819 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:32,822 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:35,139 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:35,141 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:37,493 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:37,498 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:20:39,973 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:39,977 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:42,481 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:42,486 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:20:44,962 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:44,967 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ው <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask>የቴሌግራም ገፃችን']
2025-07-23 17:20:47,422 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:47,424 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴ <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask>ሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:49,790 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:49,793 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:20:52,090 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:52,090 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460 <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask>606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:20:54,320 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:20:54,320 - INFO - Computed SHAP values for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:22:17,604 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:22:17,604 - INFO - Processed validation example 3/40
2025-07-23 17:22:18,027 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:18,413 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:22:18,414 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:18,778 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:22:18,782 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:19,506 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:22:19,508 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:21,599 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:21,599 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:23,834 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:23,834 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:25,998 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:25,998 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:28,249 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:28,255 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:30,449 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:30,455 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:32,679 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:32,679 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:22:34,964 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:34,969 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:37,314 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:37,319 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:39,604 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:39,613 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:22:41,929 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:41,929 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:44,189 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:44,189 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:22:46,484 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:46,484 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ው <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask>የቴሌግራም ገፃችን']
2025-07-23 17:22:48,724 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:48,724 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴ <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask>ሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:50,913 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:50,924 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:22:53,144 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:53,149 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460 <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask>606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:22:55,299 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:22:55,299 - INFO - Computed SHAP values for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:24:17,776 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:24:17,776 - INFO - Processed validation example 4/40
2025-07-23 17:24:21,020 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:21,404 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:24:21,405 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:24:21,809 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:24:21,820 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:24:22,581 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:24:22,584 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:24:24,650 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:24,653 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:26,869 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:26,874 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የየሙቀት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>መቆጣጠሪያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:29,154 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:29,156 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:31,431 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:31,436 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:33,659 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:33,663 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:24:35,970 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:35,974 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ያለው ሴሴራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:24:38,374 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:38,377 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ <mask> <mask> <mask> <mask>ሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:40,619 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:40,621 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌግራም ገፃችን'
 'የ <mask> <mask>መቆጣጠሪያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>የሙቀት መቆጣጠሪያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:42,988 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:42,992 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>የሙቀት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:45,222 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:45,225 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:47,456 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:47,460 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሌት ዋጋ፦ 1200 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የ <mask> <mask> <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>የሙቀት <mask> <mask> <mask> <mask>ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:49,719 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:49,723 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የ <mask> <mask>መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask>የሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:52,042 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:52,044 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:54,312 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:54,316 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም <mask> <mask>ችን'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕሌት ዋጋ፦ 1200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:56,514 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:56,517 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የየሙቀት መቆጣጠሪያ ያለው ሴሴራሚክ ፕፕ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:24:58,832 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:24:58,847 - INFO - Computed SHAP values for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...
2025-07-23 17:26:24,343 - INFO - Computed LIME explanation for message: የሙቀት መቆጣጠሪያ ያለው ሴራሚክ ፕሌት ዋጋ፦ 1200 ብር ውስን ፍሬ ነው ያለው...
2025-07-23 17:26:24,344 - INFO - Processed validation example 5/40
2025-07-23 17:26:25,924 - INFO - Processed validation example 6/40
2025-07-23 17:26:26,313 - INFO - Processed validation example 7/40
2025-07-23 17:26:26,698 - INFO - Processed validation example 8/40
2025-07-23 17:26:27,848 - INFO - Processed validation example 9/40
2025-07-23 17:26:28,260 - INFO - Processed validation example 10/40
2025-07-23 17:26:28,656 - INFO - Processed validation example 11/40
2025-07-23 17:26:29,140 - INFO - Processed validation example 12/40
2025-07-23 17:26:29,557 - INFO - Processed validation example 13/40
2025-07-23 17:26:30,035 - INFO - Processed validation example 14/40
2025-07-23 17:26:32,564 - INFO - Processed validation example 15/40
2025-07-23 17:26:33,063 - INFO - Processed validation example 16/40
2025-07-23 17:26:42,223 - INFO - Processed validation example 17/40
2025-07-23 17:26:42,719 - INFO - Processed validation example 18/40
2025-07-23 17:26:43,462 - INFO - Processed validation example 19/40
2025-07-23 17:26:43,892 - INFO - Processed validation example 20/40
2025-07-23 17:26:44,275 - INFO - Processed validation example 21/40
2025-07-23 17:26:45,396 - INFO - Processed validation example 22/40
2025-07-23 17:26:47,586 - INFO - Processed validation example 23/40
2025-07-23 17:26:47,946 - INFO - Processed validation example 24/40
2025-07-23 17:26:49,246 - INFO - Processed validation example 25/40
2025-07-23 17:26:49,597 - INFO - Processed validation example 26/40
2025-07-23 17:26:50,206 - INFO - Processed validation example 27/40
2025-07-23 17:26:51,521 - INFO - Processed validation example 28/40
2025-07-23 17:26:52,298 - INFO - Processed validation example 29/40
2025-07-23 17:26:53,304 - INFO - Processed validation example 30/40
2025-07-23 17:26:54,853 - INFO - Processed validation example 31/40
2025-07-23 17:26:55,668 - INFO - Processed validation example 32/40
2025-07-23 17:26:56,018 - INFO - Processed validation example 33/40
2025-07-23 17:26:56,376 - INFO - Processed validation example 34/40
2025-07-23 17:26:57,301 - INFO - Processed validation example 35/40
2025-07-23 17:26:57,709 - INFO - Processed validation example 36/40
2025-07-23 17:26:58,089 - INFO - Processed validation example 37/40
2025-07-23 17:26:58,562 - INFO - Processed validation example 38/40
2025-07-23 17:26:58,899 - INFO - Processed validation example 39/40
2025-07-23 17:26:59,298 - INFO - Processed validation example 40/40
2025-07-23 17:26:59,746 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:00,117 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:27:00,141 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:00,538 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:27:00,543 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:01,305 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:27:01,307 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:03,509 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:03,512 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:27:05,607 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:05,611 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:07,873 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:07,876 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:10,445 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:10,448 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:12,971 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:12,975 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻ <mask> <mask> <mask> <mask>ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:15,491 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:15,495 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ለማፅዳት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:18,011 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:18,015 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:20,628 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:20,632 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:23,024 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:23,027 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት <mask> <mask>ጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:25,488 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:25,490 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:27,887 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:27,891 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask>02660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask>05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:30,344 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:30,347 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask>28460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:27:32,779 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:32,783 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask>ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:27:35,393 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:35,397 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask>ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:27:37,828 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:37,833 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>']
2025-07-23 17:27:40,434 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:27:40,439 - INFO - Computed SHAP values for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-23 17:29:06,585 - INFO - Computed LIME explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-23 17:29:06,585 - INFO - Processed new message 1/50
2025-07-23 17:29:07,014 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:07,425 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:29:07,425 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:07,804 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:29:07,814 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:08,584 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:29:08,587 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:10,796 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:10,799 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:29:12,914 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:12,918 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:15,123 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:15,127 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask> <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask>722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:17,289 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:17,293 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:19,557 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:19,561 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻ <mask> <mask> <mask> <mask>ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:21,685 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:21,688 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ለማፅዳት <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:23,891 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:23,894 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:26,153 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:26,156 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:28,374 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:28,377 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት <mask> <mask>ጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:30,617 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:30,620 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>06 0902660 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:32,936 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:32,938 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask>722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask>02660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask>ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask>05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:35,213 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:35,216 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660 <mask> <mask>28460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:29:37,391 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:37,394 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 <mask> <mask>ውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask>ብር ውውስን ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው <mask> <mask>ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ነው ያለው <mask> <mask> <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ <mask> <mask> <mask> <mask>06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:29:39,613 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:39,618 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ው <mask> <mask>ፍሬ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:29:41,985 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:41,988 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>']
2025-07-23 17:29:44,226 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:29:44,232 - INFO - Computed SHAP values for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-23 17:31:05,315 - INFO - Computed LIME explanation for message: የሞተ ቆዳን እንዲሁም ቆሻሻን ለማፅዳት ተመራጭ ዋጋ፦ 200 ብር ውስን ፍሬ ነው...
2025-07-23 17:31:05,315 - INFO - Processed new message 2/50
2025-07-23 17:31:05,690 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:06,006 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:31:06,007 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:06,294 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:31:06,300 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:06,978 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:31:06,981 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:08,738 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:08,740 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:10,551 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:10,554 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:31:12,497 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:12,500 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍ <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:14,908 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:14,913 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:17,487 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:17,491 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:20,036 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:20,039 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ያሪ ብርሀ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን']
2025-07-23 17:31:22,559 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:22,563 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻ <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀ <mask> <mask> <mask> <mask>ርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:25,015 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:25,019 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:27,444 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:27,454 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያ <mask> <mask> <mask> <mask>ን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ን ያለው በቻ <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ያሪ ብርሀ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:29,938 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:29,940 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍ <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን']
2025-07-23 17:31:32,346 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:32,350 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃ <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:34,675 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:34,684 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር <mask> <mask> <mask> <mask>ሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ <mask> <mask> <mask> <mask>ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:36,977 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:36,981 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask>ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው <mask> <mask>ርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀ <mask> <mask>በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:39,443 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:39,448 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask>ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ያሪ <mask> <mask>ን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask>ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:31:41,853 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:41,856 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:31:44,282 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:31:44,291 - INFO - Computed SHAP values for message: 3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውስን ፍሬ ነው ያ...
2025-07-23 17:33:09,353 - INFO - Computed LIME explanation for message: 3 ተቀያያሪ ብርሀን ያለው በቻርጅ የሚሰራ ዋጋ፦ 1600 ብር ውስን ፍሬ ነው ያ...
2025-07-23 17:33:09,353 - INFO - Processed new message 3/50
2025-07-23 17:33:09,840 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:10,363 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:33:10,363 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:10,840 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:33:10,848 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:11,781 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:33:11,784 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:14,181 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:14,184 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:16,639 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:16,644 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:19,177 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:19,180 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:21,652 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:21,655 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:24,098 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:24,101 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:26,483 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:26,487 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:33:28,947 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:28,950 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:31,356 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:31,362 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:33,804 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:33,806 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:33:36,487 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:36,492 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:39,026 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:39,031 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:33:41,593 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:41,597 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ው <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask>የቴሌግራም ገፃችን']
2025-07-23 17:33:44,119 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:44,122 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴ <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask>ሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:46,487 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:46,490 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:33:48,894 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:48,898 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460 <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask>606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:33:51,363 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:33:51,369 - INFO - Computed SHAP values for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:35:13,752 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:35:13,752 - INFO - Processed new message 4/50
2025-07-23 17:35:14,184 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:14,611 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:35:14,612 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:15,020 - DEBUG - Logits shape: torch.Size([1, 7])
2025-07-23 17:35:15,036 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:15,844 - DEBUG - Logits shape: torch.Size([2, 7])
2025-07-23 17:35:15,846 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:18,166 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:18,169 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:20,422 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:20,438 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:22,663 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:22,679 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:24,991 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:24,991 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:27,257 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:27,257 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>28460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:29,555 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:29,555 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask>ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:35:31,851 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:31,851 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:34,203 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:34,210 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጠቀሙ ለተ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:36,579 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:36,579 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask>ጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask>ግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌግራም ገፃ <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የቴሌ <mask> <mask> <mask> <mask>ችን']
2025-07-23 17:35:38,779 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:38,779 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask>ዝ ይ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 09 <mask> <mask> <mask> <mask>28460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>02660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:40,820 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:40,823 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['<mask> <mask> <mask>ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ማብራሪያ የ <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ቴሌ <mask> <mask> <mask> <mask> <mask>']
2025-07-23 17:35:42,917 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:42,917 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ው <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask>ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ <mask>ቴሌግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ <mask>የቴሌግራም ገፃችን']
2025-07-23 17:35:44,965 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:44,968 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴ <mask>ግራም ገፃችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የ <mask>ሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask> <mask>በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask>፦ 250 <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:47,070 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:47,086 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ው <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 <mask> <mask>ውስን <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask>ፍሬ ነው ያለው <mask> <mask> <mask> <mask>05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌ <mask> <mask>ገፃችን']
2025-07-23 17:35:49,174 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:49,174 - DEBUG - Received inputs type: <class 'numpy.ndarray'>, shape/content: ['ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ግራም <mask> <mask>ችን'
 'ዋጋ፦ 250 ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>ገፃችን'
 'ዋጋ፦ 250 <mask> <mask> <mask> <mask>ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask>ብር ውውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 0902660722 0928460606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 0928460 <mask>በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን'
 '<mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask> <mask>05S06 0902660722 09 <mask> <mask>606 በTelegram ለማዘዝ ይጠቀሙ ለተጨማሪ ማብራሪያ የቴሌግራም ገፃችን']
2025-07-23 17:35:51,454 - DEBUG - Logits shape: torch.Size([6, 7])
2025-07-23 17:35:51,457 - INFO - Computed SHAP values for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:37:12,905 - INFO - Computed LIME explanation for message: ዋጋ፦ 250 ብር ውስን ፍሬ ነው ያለው አድራሻ ቢሮ ቁ S05S06 09026607...
2025-07-23 17:37:12,905 - INFO - Processed new message 5/50
2025-07-23 17:37:13,512 - INFO - Processed new message 6/50
2025-07-23 17:37:13,925 - INFO - Processed new message 7/50
2025-07-23 17:37:14,432 - INFO - Processed new message 8/50
2025-07-23 17:37:14,839 - INFO - Processed new message 9/50
2025-07-23 17:37:15,494 - INFO - Processed new message 10/50
2025-07-23 17:37:15,964 - INFO - Processed new message 11/50
2025-07-23 17:37:16,465 - INFO - Processed new message 12/50
2025-07-23 17:37:17,003 - INFO - Processed new message 13/50
2025-07-23 17:37:17,497 - INFO - Processed new message 14/50
2025-07-23 17:37:18,001 - INFO - Processed new message 15/50
2025-07-23 17:37:18,466 - INFO - Processed new message 16/50
2025-07-23 17:37:18,961 - INFO - Processed new message 17/50
2025-07-23 17:37:19,378 - INFO - Processed new message 18/50
2025-07-23 17:37:19,765 - INFO - Processed new message 19/50
2025-07-23 17:37:20,225 - INFO - Processed new message 20/50
2025-07-23 17:37:20,690 - INFO - Processed new message 21/50
2025-07-23 17:37:21,138 - INFO - Processed new message 22/50
2025-07-23 17:37:22,002 - INFO - Processed new message 23/50
2025-07-23 17:37:22,426 - INFO - Processed new message 24/50
2025-07-23 17:37:22,819 - INFO - Processed new message 25/50
2025-07-23 17:37:23,224 - INFO - Processed new message 26/50
2025-07-23 17:37:23,616 - INFO - Processed new message 27/50
2025-07-23 17:37:23,991 - INFO - Processed new message 28/50
2025-07-23 17:37:24,511 - INFO - Processed new message 29/50
2025-07-23 17:37:24,989 - INFO - Processed new message 30/50
2025-07-23 17:37:25,552 - INFO - Processed new message 31/50
2025-07-23 17:37:25,992 - INFO - Processed new message 32/50
2025-07-23 17:37:26,452 - INFO - Processed new message 33/50
2025-07-23 17:37:26,922 - INFO - Processed new message 34/50
2025-07-23 17:37:27,351 - INFO - Processed new message 35/50
2025-07-23 17:37:27,811 - INFO - Processed new message 36/50
2025-07-23 17:37:28,413 - INFO - Processed new message 37/50
2025-07-23 17:37:28,859 - INFO - Processed new message 38/50
2025-07-23 17:37:29,257 - INFO - Processed new message 39/50
2025-07-23 17:37:29,670 - INFO - Processed new message 40/50
2025-07-23 17:37:30,046 - INFO - Processed new message 41/50
2025-07-23 17:37:30,556 - INFO - Processed new message 42/50
2025-07-23 17:37:31,012 - INFO - Processed new message 43/50
2025-07-23 17:37:31,466 - INFO - Processed new message 44/50
2025-07-23 17:37:31,894 - INFO - Processed new message 45/50
2025-07-23 17:37:32,286 - INFO - Processed new message 46/50
2025-07-23 17:37:32,650 - INFO - Processed new message 47/50
2025-07-23 17:37:33,046 - INFO - Processed new message 48/50
2025-07-23 17:37:33,696 - INFO - Processed new message 49/50
2025-07-23 17:37:34,036 - INFO - Processed new message 50/50
2025-07-23 17:37:34,213 - INFO - Saved interpretability results to data/interpretability_results.csv
2025-07-23 17:37:34,214 - INFO - Generated interpretability report to Task5_Interpretability_Report.md
